{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rDv9AN7Dpc_d"},"outputs":[],"source":["## needed libraries\n","from urllib.request import urlopen\n","from bs4 import BeautifulSoup\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import plotly.express as px\n","import unicodedata as uc\n","import time\n","import requests\n","from google.colab import drive\n","from tqdm.notebook import tqdm\n","\n","### error checking package\n","import pdb\n","import re\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":645,"status":"ok","timestamp":1717870081632,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"dIs8Bo7spnCZ","outputId":"5ed3eb05-25e7-46a4-cc99-c2183403ad6f"},"outputs":[{"output_type":"stream","name":"stdout","text":["['Rk', 'Pk', 'Tm', 'Player', 'College', 'Yrs', 'G', 'MP', 'PTS', 'TRB', 'AST', 'FG%', '3P%', 'FT%', 'MP', 'PTS', 'TRB', 'AST', 'WS', 'WS/48', 'BPM', 'VORP']\n"]}],"source":["\n","# URL to scrape and get the headers of the table\n","url = \"https://www.basketball-reference.com/draft/NBA_2020.html\"\n","\n","# collect HTML data from url\n","html = urlopen(url)\n","\n","# create beautiful soup object from HTML\n","soup = BeautifulSoup(html, features=\"lxml\")\n","\n","# use getText()to extract the headers into a list\n","headers = [th.getText() for th in soup.findAll('tr', limit=2)[1].findAll('th')]\n","print(headers)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1717870081633,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"Z80GN4XUpnUX","outputId":"d29ae46e-43be-47c3-91cf-0ad344c21174"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Rk'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}],"source":["\n","#Check result that are not useful\n","headers[0]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kyWucJ0rpnda"},"outputs":[],"source":["#Removing unwated column header\n","headers.remove('Rk')\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_pbV-e4Qpnlm"},"outputs":[],"source":["#Defining a function to scrape through NBA draft data for multiple years\n","\n","import requests\n","\n","#Columns for final dataset\n","draft_columns=['Pk', 'Tm', 'Player', 'College', 'Yrs', 'G', 'MP', 'PTS', 'TRB', 'AST', 'FG%', '3P%', 'FT%', 'MP', 'PTS', 'TRB', 'AST', 'WS', 'WS/48', 'BPM', 'VORP']\n","\n","def scrape_draft_data(years=[2020,2021]):\n","    final_df=pd.DataFrame(columns=draft_columns)\n","    final_df['Draft_Year']=0\n","    for y in years:\n","        #Draft year to scrape\n","        year = y\n","\n","        #Placing string url string with year being iterable\n","        url = f\"https://www.basketball-reference.com/draft/NBA_{year}.html\"\n","\n","        time.sleep(0.5) #sleep is needed in order to not overload of requests\n","        html = urlopen(url)\n","        soup= BeautifulSoup(html, features = 'lxml')\n","        # get rows from table\n","        rows = soup.findAll('tr')[0:]\n","        rows_data = [[td.getText() for td in rows[i].findAll('td')]\n","                     for i in range(len(rows))]\n","\n","\n","\n","        #placing data in a DataFrame\n","        df_1 = pd.DataFrame(rows_data,columns=draft_columns)\n","        df_1['Draft_Year']=y\n","\n","\n","        # merge data frames\n","        final_df=pd.concat([final_df,df_1],ignore_index=True)\n","\n","#Checking the final result\n","    final_df\n","\n","    return final_df"]},{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"id":"88qbVOdgqV2b"},"outputs":[],"source":["draftdf=pd.DataFrame(columns=draft_columns)\n","draftdf['Draft_Year']=0\n","draftdf1 = scrape_draft_data(years=[1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,\n","                                  1990,1991,1992,1993,1994,1995,1996,1997,1998,1999])\n","draftdf=pd.concat([draftdf,draftdf1],ignore_index=True)\n","\n","time.sleep(61) # Sports reference blocks web scrappers that make more than 20 request per minute\n","\n","draftdf2= scrape_draft_data(years=[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,\n","                                   2010,2011,2012,2013,2014,2015,2016,2017,2018,2019])\n","\n","draftdf=pd.concat([draftdf,draftdf2],ignore_index=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":330,"status":"ok","timestamp":1717870184802,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"Aag_50_MtU40","outputId":"8f77d405-061c-4c25-f2fd-e90f80ad982a"},"outputs":[{"output_type":"stream","name":"stdout","text":["        Pk    Tm             Player     College   Yrs     G     MP    PTS  \\\n","0     None  None               None        None  None  None   None   None   \n","1     None  None               None        None  None  None   None   None   \n","2        1   GSW  Joe Barry Carroll      Purdue    10   705  22838  12455   \n","3        2   UTA   Darrell Griffith  Louisville    10   765  21403  12391   \n","4        3   BOS       Kevin McHale   Minnesota    13   971  30118  17335   \n","...    ...   ...                ...         ...   ...   ...    ...    ...   \n","3749    56   LAC       Jaylen Hands        UCLA                             \n","3750    57   NOP        Jordan Bone   Tennessee     2    24    249     68   \n","3751    58   GSW           Miye Oni        Yale     3    80    672    145   \n","3752    59   TOR    Dewan Hernandez  Miami (FL)     1     6     28     14   \n","3753    60   SAC   Vanja MarinkoviÄ‡                                         \n","\n","       TRB   AST  ...   FT%    MP   PTS   TRB   AST     WS WS/48   BPM  VORP  \\\n","0     None  None  ...  None  None  None  None  None   None  None  None  None   \n","1     None  None  ...  None  None  None  None  None   None  None  None  None   \n","2     5404  1264  ...  .747  32.4  17.7   7.7   1.8   35.6  .075  -0.6   8.2   \n","3     2519  1627  ...  .707  28.0  16.2   3.3   2.1   22.0  .049  -1.4   3.4   \n","4     7122  1670  ...  .798  31.0  17.9   7.3   1.7  113.0  .180   2.5  34.3   \n","...    ...   ...  ...   ...   ...   ...   ...   ...    ...   ...   ...   ...   \n","3749              ...                                                          \n","3750    28    26  ...        10.4   2.8   1.2   1.1    0.1  .010  -5.9  -0.2   \n","3751   108    37  ...  .750   8.4   1.8   1.4   0.5    1.0  .070  -2.5  -0.1   \n","3752    14     3  ...  .600   4.7   2.3   2.3   0.5    0.0  .043  -9.6  -0.1   \n","3753              ...                                                          \n","\n","     Draft_Year  \n","0          1980  \n","1          1980  \n","2          1980  \n","3          1980  \n","4          1980  \n","...         ...  \n","3749       2019  \n","3750       2019  \n","3751       2019  \n","3752       2019  \n","3753       2019  \n","\n","[3754 rows x 22 columns]\n"]}],"source":["print(draftdf)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1717870186148,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"K8Vxxm3QuYBk","outputId":"1fe37077-c1f7-4f2d-f800-e83bbf8957d3"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3754 entries, 0 to 3753\n","Data columns (total 22 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   Pk          3482 non-null   object\n"," 1   Tm          3478 non-null   object\n"," 2   Player      3478 non-null   object\n"," 3   College     3478 non-null   object\n"," 4   Yrs         3478 non-null   object\n"," 5   G           3478 non-null   object\n"," 6   MP          3478 non-null   object\n"," 7   PTS         3478 non-null   object\n"," 8   TRB         3478 non-null   object\n"," 9   AST         3478 non-null   object\n"," 10  FG%         3478 non-null   object\n"," 11  3P%         3478 non-null   object\n"," 12  FT%         3478 non-null   object\n"," 13  MP          3478 non-null   object\n"," 14  PTS         3478 non-null   object\n"," 15  TRB         3478 non-null   object\n"," 16  AST         3478 non-null   object\n"," 17  WS          3478 non-null   object\n"," 18  WS/48       3478 non-null   object\n"," 19  BPM         3478 non-null   object\n"," 20  VORP        3478 non-null   object\n"," 21  Draft_Year  3754 non-null   int64 \n","dtypes: int64(1), object(21)\n","memory usage: 645.3+ KB\n"]}],"source":["draftdf.info() #Check Info"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1717870186910,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"T-ObCOmrvbQj","outputId":"0d6a25f2-4eeb-440e-b041-7c41a4853346"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pk    Tm             Player     College   Yrs     G     MP    PTS   TRB  \\\n","0  None  None               None        None  None  None   None   None  None   \n","1  None  None               None        None  None  None   None   None  None   \n","2     1   GSW  Joe Barry Carroll      Purdue    10   705  22838  12455  5404   \n","3     2   UTA   Darrell Griffith  Louisville    10   765  21403  12391  2519   \n","4     3   BOS       Kevin McHale   Minnesota    13   971  30118  17335  7122   \n","\n","    AST  ...   FT%    MP   PTS   TRB   AST     WS WS/48   BPM  VORP Draft_Year  \n","0  None  ...  None  None  None  None  None   None  None  None  None       1980  \n","1  None  ...  None  None  None  None  None   None  None  None  None       1980  \n","2  1264  ...  .747  32.4  17.7   7.7   1.8   35.6  .075  -0.6   8.2       1980  \n","3  1627  ...  .707  28.0  16.2   3.3   2.1   22.0  .049  -1.4   3.4       1980  \n","4  1670  ...  .798  31.0  17.9   7.3   1.7  113.0  .180   2.5  34.3       1980  \n","\n","[5 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-c1eaf6ac-5980-4fc2-9abd-03399cbf8b14\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pk</th>\n","      <th>Tm</th>\n","      <th>Player</th>\n","      <th>College</th>\n","      <th>Yrs</th>\n","      <th>G</th>\n","      <th>MP</th>\n","      <th>PTS</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>...</th>\n","      <th>FT%</th>\n","      <th>MP</th>\n","      <th>PTS</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>WS</th>\n","      <th>WS/48</th>\n","      <th>BPM</th>\n","      <th>VORP</th>\n","      <th>Draft_Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>1980</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>1980</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>GSW</td>\n","      <td>Joe Barry Carroll</td>\n","      <td>Purdue</td>\n","      <td>10</td>\n","      <td>705</td>\n","      <td>22838</td>\n","      <td>12455</td>\n","      <td>5404</td>\n","      <td>1264</td>\n","      <td>...</td>\n","      <td>.747</td>\n","      <td>32.4</td>\n","      <td>17.7</td>\n","      <td>7.7</td>\n","      <td>1.8</td>\n","      <td>35.6</td>\n","      <td>.075</td>\n","      <td>-0.6</td>\n","      <td>8.2</td>\n","      <td>1980</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>UTA</td>\n","      <td>Darrell Griffith</td>\n","      <td>Louisville</td>\n","      <td>10</td>\n","      <td>765</td>\n","      <td>21403</td>\n","      <td>12391</td>\n","      <td>2519</td>\n","      <td>1627</td>\n","      <td>...</td>\n","      <td>.707</td>\n","      <td>28.0</td>\n","      <td>16.2</td>\n","      <td>3.3</td>\n","      <td>2.1</td>\n","      <td>22.0</td>\n","      <td>.049</td>\n","      <td>-1.4</td>\n","      <td>3.4</td>\n","      <td>1980</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>BOS</td>\n","      <td>Kevin McHale</td>\n","      <td>Minnesota</td>\n","      <td>13</td>\n","      <td>971</td>\n","      <td>30118</td>\n","      <td>17335</td>\n","      <td>7122</td>\n","      <td>1670</td>\n","      <td>...</td>\n","      <td>.798</td>\n","      <td>31.0</td>\n","      <td>17.9</td>\n","      <td>7.3</td>\n","      <td>1.7</td>\n","      <td>113.0</td>\n","      <td>.180</td>\n","      <td>2.5</td>\n","      <td>34.3</td>\n","      <td>1980</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1eaf6ac-5980-4fc2-9abd-03399cbf8b14')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c1eaf6ac-5980-4fc2-9abd-03399cbf8b14 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c1eaf6ac-5980-4fc2-9abd-03399cbf8b14');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6892cfdd-66f1-4f5f-8e86-cc0ad0e712f9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6892cfdd-66f1-4f5f-8e86-cc0ad0e712f9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6892cfdd-66f1-4f5f-8e86-cc0ad0e712f9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"draftdf"}},"metadata":{},"execution_count":10}],"source":["draftdf.head() # Check All columns first results"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vZnhNMIjxaYG"},"outputs":[],"source":["#Taking the dataframe without any rows where 'Player' is NA\n","#Taking df where 'College' is not NA\n","#Remove empty 'G' as I want to analyze players who played in NBA\n","\n","draftdf = draftdf[draftdf['Player'].notna()]\n","draftdf = draftdf[draftdf['College'].notna()]\n","draftdf = draftdf[draftdf['G'].notna()]"]},{"cell_type":"code","source":["draftdf[[\"Pk\"]] = draftdf[[\"Pk\"]].astype(np.float64)"],"metadata":{"id":"kOGVzuK8O0C9"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Gtsw8_pvAo_T"},"outputs":[],"source":["draftdf[[\"College\"]] = draftdf[[\"College\"]].astype('string')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"elapsed":423,"status":"ok","timestamp":1717870195507,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"vKU_Cxoz_oxe","outputId":"386063ab-cf0c-4b68-d039-d5d31f68b5ce"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.frame.DataFrame</b><br/>def __init__(data=None, index: Axes | None=None, columns: Axes | None=None, dtype: Dtype | None=None, copy: bool | None=None) -&gt; None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py</a>Two-dimensional, size-mutable, potentially heterogeneous tabular data.\n","\n","Data structure also contains labeled axes (rows and columns).\n","Arithmetic operations align on both row and column labels. Can be\n","thought of as a dict-like container for Series objects. The primary\n","pandas data structure.\n","\n","Parameters\n","----------\n","data : ndarray (structured or homogeneous), Iterable, dict, or DataFrame\n","    Dict can contain Series, arrays, constants, dataclass or list-like objects. If\n","    data is a dict, column order follows insertion-order. If a dict contains Series\n","    which have an index defined, it is aligned by its index. This alignment also\n","    occurs if data is a Series or a DataFrame itself. Alignment is done on\n","    Series/DataFrame inputs.\n","\n","    If data is a list of dicts, column order follows insertion-order.\n","\n","index : Index or array-like\n","    Index to use for resulting frame. Will default to RangeIndex if\n","    no indexing information part of input data and no index provided.\n","columns : Index or array-like\n","    Column labels to use for resulting frame when data does not have them,\n","    defaulting to RangeIndex(0, 1, 2, ..., n). If data contains column labels,\n","    will perform column selection instead.\n","dtype : dtype, default None\n","    Data type to force. Only a single dtype is allowed. If None, infer.\n","copy : bool or None, default None\n","    Copy data from inputs.\n","    For dict data, the default of None behaves like ``copy=True``.  For DataFrame\n","    or 2d ndarray input, the default of None behaves like ``copy=False``.\n","    If data is a dict containing one or more Series (possibly of different dtypes),\n","    ``copy=False`` will ensure that these inputs are not copied.\n","\n","    .. versionchanged:: 1.3.0\n","\n","See Also\n","--------\n","DataFrame.from_records : Constructor from tuples, also record arrays.\n","DataFrame.from_dict : From dicts of Series, arrays, or dicts.\n","read_csv : Read a comma-separated values (csv) file into DataFrame.\n","read_table : Read general delimited file into DataFrame.\n","read_clipboard : Read text from clipboard into DataFrame.\n","\n","Notes\n","-----\n","Please reference the :ref:`User Guide &lt;basics.dataframe&gt;` for more information.\n","\n","Examples\n","--------\n","Constructing DataFrame from a dictionary.\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [1, 2], &#x27;col2&#x27;: [3, 4]}\n","&gt;&gt;&gt; df = pd.DataFrame(data=d)\n","&gt;&gt;&gt; df\n","   col1  col2\n","0     1     3\n","1     2     4\n","\n","Notice that the inferred dtype is int64.\n","\n","&gt;&gt;&gt; df.dtypes\n","col1    int64\n","col2    int64\n","dtype: object\n","\n","To enforce a single dtype:\n","\n","&gt;&gt;&gt; df = pd.DataFrame(data=d, dtype=np.int8)\n","&gt;&gt;&gt; df.dtypes\n","col1    int8\n","col2    int8\n","dtype: object\n","\n","Constructing DataFrame from a dictionary including Series:\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [0, 1, 2, 3], &#x27;col2&#x27;: pd.Series([2, 3], index=[2, 3])}\n","&gt;&gt;&gt; pd.DataFrame(data=d, index=[0, 1, 2, 3])\n","   col1  col2\n","0     0   NaN\n","1     1   NaN\n","2     2   2.0\n","3     3   3.0\n","\n","Constructing DataFrame from numpy ndarray:\n","\n","&gt;&gt;&gt; df2 = pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]),\n","...                    columns=[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; df2\n","   a  b  c\n","0  1  2  3\n","1  4  5  6\n","2  7  8  9\n","\n","Constructing DataFrame from a numpy ndarray that has labeled columns:\n","\n","&gt;&gt;&gt; data = np.array([(1, 2, 3), (4, 5, 6), (7, 8, 9)],\n","...                 dtype=[(&quot;a&quot;, &quot;i4&quot;), (&quot;b&quot;, &quot;i4&quot;), (&quot;c&quot;, &quot;i4&quot;)])\n","&gt;&gt;&gt; df3 = pd.DataFrame(data, columns=[&#x27;c&#x27;, &#x27;a&#x27;])\n","...\n","&gt;&gt;&gt; df3\n","   c  a\n","0  3  1\n","1  6  4\n","2  9  7\n","\n","Constructing DataFrame from dataclass:\n","\n","&gt;&gt;&gt; from dataclasses import make_dataclass\n","&gt;&gt;&gt; Point = make_dataclass(&quot;Point&quot;, [(&quot;x&quot;, int), (&quot;y&quot;, int)])\n","&gt;&gt;&gt; pd.DataFrame([Point(0, 0), Point(0, 3), Point(2, 3)])\n","   x  y\n","0  0  0\n","1  0  3\n","2  2  3\n","\n","Constructing DataFrame from Series/DataFrame:\n","\n","&gt;&gt;&gt; ser = pd.Series([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df = pd.DataFrame(data=ser, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df\n","   0\n","a  1\n","c  3\n","\n","&gt;&gt;&gt; df1 = pd.DataFrame([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;], columns=[&quot;x&quot;])\n","&gt;&gt;&gt; df2 = pd.DataFrame(data=df1, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df2\n","   x\n","a  1\n","c  3</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 490);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":14}],"source":["type(draftdf)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WWfqmeaH_-mh"},"outputs":[],"source":["draftdf[\"Link\"] = draftdf[\"Player\"].str.replace('.', '').str.replace(' ', '-').str.replace(\"'\", '').str.lower().str.normalize('NFKD').str.encode('ascii', errors='ignore').str.decode('utf-8')+ \"-1\"\n","\n","# Creating Link Column for every player, this column will help with the scraping of every player in the sports reference page"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"elapsed":342,"status":"ok","timestamp":1717870201529,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"S4V6a9MhACBG","outputId":"67ea0b73-d5e4-4c74-d0e4-21d6f31e4e2f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Pk   Tm             Player                  College Yrs      G       MP  \\\n","2   1  GSW  Joe Barry Carroll                   Purdue  10  705.0  22838.0   \n","3   2  UTA   Darrell Griffith               Louisville  10  765.0  21403.0   \n","4   3  BOS       Kevin McHale                Minnesota  13  971.0  30118.0   \n","5   4  CHI      Kelvin Ransey               Ohio State   6  474.0  11586.0   \n","6   5  DEN          James Ray  Jacksonville University   3  103.0    843.0   \n","\n","       PTS   TRB   AST  ...    MP   PTS  TRB  AST     WS  WS/48   BPM  VORP  \\\n","2  22838.0  5404  1264  ...  32.4  32.4  7.7  1.8   35.6   .075  -0.6   8.2   \n","3  21403.0  2519  1627  ...  28.0  28.0  3.3  2.1   22.0   .049  -1.4   3.4   \n","4  30118.0  7122  1670  ...  31.0  31.0  7.3  1.7  113.0   .180   2.5  34.3   \n","5  11586.0   901  2480  ...  24.4  24.4  1.9  5.2   17.9   .074  -0.9   3.3   \n","6    843.0   228    76  ...   8.2   8.2  2.2  0.7   -0.3  -.017  -4.5  -0.6   \n","\n","  Draft_Year                 Link  \n","2       1980  joe-barry-carroll-1  \n","3       1980   darrell-griffith-1  \n","4       1980       kevin-mchale-1  \n","5       1980      kelvin-ransey-1  \n","6       1980          james-ray-1  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-2510d876-c43c-4e07-818c-3b01bb578224\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pk</th>\n","      <th>Tm</th>\n","      <th>Player</th>\n","      <th>College</th>\n","      <th>Yrs</th>\n","      <th>G</th>\n","      <th>MP</th>\n","      <th>PTS</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>...</th>\n","      <th>MP</th>\n","      <th>PTS</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>WS</th>\n","      <th>WS/48</th>\n","      <th>BPM</th>\n","      <th>VORP</th>\n","      <th>Draft_Year</th>\n","      <th>Link</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>GSW</td>\n","      <td>Joe Barry Carroll</td>\n","      <td>Purdue</td>\n","      <td>10</td>\n","      <td>705.0</td>\n","      <td>22838.0</td>\n","      <td>22838.0</td>\n","      <td>5404</td>\n","      <td>1264</td>\n","      <td>...</td>\n","      <td>32.4</td>\n","      <td>32.4</td>\n","      <td>7.7</td>\n","      <td>1.8</td>\n","      <td>35.6</td>\n","      <td>.075</td>\n","      <td>-0.6</td>\n","      <td>8.2</td>\n","      <td>1980</td>\n","      <td>joe-barry-carroll-1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>UTA</td>\n","      <td>Darrell Griffith</td>\n","      <td>Louisville</td>\n","      <td>10</td>\n","      <td>765.0</td>\n","      <td>21403.0</td>\n","      <td>21403.0</td>\n","      <td>2519</td>\n","      <td>1627</td>\n","      <td>...</td>\n","      <td>28.0</td>\n","      <td>28.0</td>\n","      <td>3.3</td>\n","      <td>2.1</td>\n","      <td>22.0</td>\n","      <td>.049</td>\n","      <td>-1.4</td>\n","      <td>3.4</td>\n","      <td>1980</td>\n","      <td>darrell-griffith-1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>BOS</td>\n","      <td>Kevin McHale</td>\n","      <td>Minnesota</td>\n","      <td>13</td>\n","      <td>971.0</td>\n","      <td>30118.0</td>\n","      <td>30118.0</td>\n","      <td>7122</td>\n","      <td>1670</td>\n","      <td>...</td>\n","      <td>31.0</td>\n","      <td>31.0</td>\n","      <td>7.3</td>\n","      <td>1.7</td>\n","      <td>113.0</td>\n","      <td>.180</td>\n","      <td>2.5</td>\n","      <td>34.3</td>\n","      <td>1980</td>\n","      <td>kevin-mchale-1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>CHI</td>\n","      <td>Kelvin Ransey</td>\n","      <td>Ohio State</td>\n","      <td>6</td>\n","      <td>474.0</td>\n","      <td>11586.0</td>\n","      <td>11586.0</td>\n","      <td>901</td>\n","      <td>2480</td>\n","      <td>...</td>\n","      <td>24.4</td>\n","      <td>24.4</td>\n","      <td>1.9</td>\n","      <td>5.2</td>\n","      <td>17.9</td>\n","      <td>.074</td>\n","      <td>-0.9</td>\n","      <td>3.3</td>\n","      <td>1980</td>\n","      <td>kelvin-ransey-1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5</td>\n","      <td>DEN</td>\n","      <td>James Ray</td>\n","      <td>Jacksonville University</td>\n","      <td>3</td>\n","      <td>103.0</td>\n","      <td>843.0</td>\n","      <td>843.0</td>\n","      <td>228</td>\n","      <td>76</td>\n","      <td>...</td>\n","      <td>8.2</td>\n","      <td>8.2</td>\n","      <td>2.2</td>\n","      <td>0.7</td>\n","      <td>-0.3</td>\n","      <td>-.017</td>\n","      <td>-4.5</td>\n","      <td>-0.6</td>\n","      <td>1980</td>\n","      <td>james-ray-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2510d876-c43c-4e07-818c-3b01bb578224')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2510d876-c43c-4e07-818c-3b01bb578224 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2510d876-c43c-4e07-818c-3b01bb578224');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab6330fd-0b17-41ed-81a8-d784207ec8e5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab6330fd-0b17-41ed-81a8-d784207ec8e5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab6330fd-0b17-41ed-81a8-d784207ec8e5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"draftdf"}},"metadata":{},"execution_count":16}],"source":["draftdf.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":221},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1717870203595,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"s8w62VCT4WaZ","outputId":"f69d0ada-3f5f-49cb-d504-edfb8846b19e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.reset_index of       Pk   Tm             Player                  College Yrs      G       MP  \\\n","2      1  GSW  Joe Barry Carroll                   Purdue  10  705.0  22838.0   \n","3      2  UTA   Darrell Griffith               Louisville  10  765.0  21403.0   \n","4      3  BOS       Kevin McHale                Minnesota  13  971.0  30118.0   \n","5      4  CHI      Kelvin Ransey               Ohio State   6  474.0  11586.0   \n","6      5  DEN          James Ray  Jacksonville University   3  103.0    843.0   \n","...   ..  ...                ...                      ...  ..    ...      ...   \n","3749  56  LAC       Jaylen Hands                     UCLA        NaN      NaN   \n","3750  57  NOP        Jordan Bone                Tennessee   2   24.0    249.0   \n","3751  58  GSW           Miye Oni                     Yale   3   80.0    672.0   \n","3752  59  TOR    Dewan Hernandez               Miami (FL)   1    6.0     28.0   \n","3753  60  SAC   Vanja MarinkoviÄ‡                                 NaN      NaN   \n","\n","          PTS   TRB   AST  ...    MP   PTS  TRB  AST     WS  WS/48   BPM  \\\n","2     22838.0  5404  1264  ...  32.4  32.4  7.7  1.8   35.6   .075  -0.6   \n","3     21403.0  2519  1627  ...  28.0  28.0  3.3  2.1   22.0   .049  -1.4   \n","4     30118.0  7122  1670  ...  31.0  31.0  7.3  1.7  113.0   .180   2.5   \n","5     11586.0   901  2480  ...  24.4  24.4  1.9  5.2   17.9   .074  -0.9   \n","6       843.0   228    76  ...   8.2   8.2  2.2  0.7   -0.3  -.017  -4.5   \n","...       ...   ...   ...  ...   ...   ...  ...  ...    ...    ...   ...   \n","3749      NaN              ...   NaN   NaN                                 \n","3750    249.0    28    26  ...  10.4  10.4  1.2  1.1    0.1   .010  -5.9   \n","3751    672.0   108    37  ...   8.4   8.4  1.4  0.5    1.0   .070  -2.5   \n","3752     28.0    14     3  ...   4.7   4.7  2.3  0.5    0.0   .043  -9.6   \n","3753      NaN              ...   NaN   NaN                                 \n","\n","      VORP Draft_Year                 Link  \n","2      8.2       1980  joe-barry-carroll-1  \n","3      3.4       1980   darrell-griffith-1  \n","4     34.3       1980       kevin-mchale-1  \n","5      3.3       1980      kelvin-ransey-1  \n","6     -0.6       1980          james-ray-1  \n","...    ...        ...                  ...  \n","3749             2019       jaylen-hands-1  \n","3750  -0.2       2019        jordan-bone-1  \n","3751  -0.1       2019           miye-oni-1  \n","3752  -0.1       2019    dewan-hernandez-1  \n","3753             2019   vanja-marinkovic-1  \n","\n","[3478 rows x 23 columns]>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.frame.DataFrame.reset_index</b><br/>def reset_index(level: IndexLabel=None, *, drop: bool=False, inplace: bool=False, col_level: Hashable=0, col_fill: Hashable=&#x27;&#x27;, allow_duplicates: bool | lib.NoDefault=lib.no_default, names: Hashable | Sequence[Hashable]=None) -&gt; DataFrame | None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py</a>Reset the index, or a level of it.\n","\n","Reset the index of the DataFrame, and use the default one instead.\n","If the DataFrame has a MultiIndex, this method can remove one or more\n","levels.\n","\n","Parameters\n","----------\n","level : int, str, tuple, or list, default None\n","    Only remove the given levels from the index. Removes all levels by\n","    default.\n","drop : bool, default False\n","    Do not try to insert index into dataframe columns. This resets\n","    the index to the default integer index.\n","inplace : bool, default False\n","    Whether to modify the DataFrame rather than creating a new one.\n","col_level : int or str, default 0\n","    If the columns have multiple levels, determines which level the\n","    labels are inserted into. By default it is inserted into the first\n","    level.\n","col_fill : object, default &#x27;&#x27;\n","    If the columns have multiple levels, determines how the other\n","    levels are named. If None then the index name is repeated.\n","allow_duplicates : bool, optional, default lib.no_default\n","    Allow duplicate column labels to be created.\n","\n","    .. versionadded:: 1.5.0\n","\n","names : int, str or 1-dimensional list, default None\n","    Using the given string, rename the DataFrame column which contains the\n","    index data. If the DataFrame has a MultiIndex, this has to be a list or\n","    tuple with length equal to the number of levels.\n","\n","    .. versionadded:: 1.5.0\n","\n","Returns\n","-------\n","DataFrame or None\n","    DataFrame with the new index or None if ``inplace=True``.\n","\n","See Also\n","--------\n","DataFrame.set_index : Opposite of reset_index.\n","DataFrame.reindex : Change to new indices or expand indices.\n","DataFrame.reindex_like : Change to same indices as other DataFrame.\n","\n","Examples\n","--------\n","&gt;&gt;&gt; df = pd.DataFrame([(&#x27;bird&#x27;, 389.0),\n","...                    (&#x27;bird&#x27;, 24.0),\n","...                    (&#x27;mammal&#x27;, 80.5),\n","...                    (&#x27;mammal&#x27;, np.nan)],\n","...                   index=[&#x27;falcon&#x27;, &#x27;parrot&#x27;, &#x27;lion&#x27;, &#x27;monkey&#x27;],\n","...                   columns=(&#x27;class&#x27;, &#x27;max_speed&#x27;))\n","&gt;&gt;&gt; df\n","         class  max_speed\n","falcon    bird      389.0\n","parrot    bird       24.0\n","lion    mammal       80.5\n","monkey  mammal        NaN\n","\n","When we reset the index, the old index is added as a column, and a\n","new sequential index is used:\n","\n","&gt;&gt;&gt; df.reset_index()\n","    index   class  max_speed\n","0  falcon    bird      389.0\n","1  parrot    bird       24.0\n","2    lion  mammal       80.5\n","3  monkey  mammal        NaN\n","\n","We can use the `drop` parameter to avoid the old index being added as\n","a column:\n","\n","&gt;&gt;&gt; df.reset_index(drop=True)\n","    class  max_speed\n","0    bird      389.0\n","1    bird       24.0\n","2  mammal       80.5\n","3  mammal        NaN\n","\n","You can also use `reset_index` with `MultiIndex`.\n","\n","&gt;&gt;&gt; index = pd.MultiIndex.from_tuples([(&#x27;bird&#x27;, &#x27;falcon&#x27;),\n","...                                    (&#x27;bird&#x27;, &#x27;parrot&#x27;),\n","...                                    (&#x27;mammal&#x27;, &#x27;lion&#x27;),\n","...                                    (&#x27;mammal&#x27;, &#x27;monkey&#x27;)],\n","...                                   names=[&#x27;class&#x27;, &#x27;name&#x27;])\n","&gt;&gt;&gt; columns = pd.MultiIndex.from_tuples([(&#x27;speed&#x27;, &#x27;max&#x27;),\n","...                                      (&#x27;species&#x27;, &#x27;type&#x27;)])\n","&gt;&gt;&gt; df = pd.DataFrame([(389.0, &#x27;fly&#x27;),\n","...                    (24.0, &#x27;fly&#x27;),\n","...                    (80.5, &#x27;run&#x27;),\n","...                    (np.nan, &#x27;jump&#x27;)],\n","...                   index=index,\n","...                   columns=columns)\n","&gt;&gt;&gt; df\n","               speed species\n","                 max    type\n","class  name\n","bird   falcon  389.0     fly\n","       parrot   24.0     fly\n","mammal lion     80.5     run\n","       monkey    NaN    jump\n","\n","Using the `names` parameter, choose a name for the index column:\n","\n","&gt;&gt;&gt; df.reset_index(names=[&#x27;classes&#x27;, &#x27;names&#x27;])\n","  classes   names  speed species\n","                     max    type\n","0    bird  falcon  389.0     fly\n","1    bird  parrot   24.0     fly\n","2  mammal    lion   80.5     run\n","3  mammal  monkey    NaN    jump\n","\n","If the index has multiple levels, we can reset a subset of them:\n","\n","&gt;&gt;&gt; df.reset_index(level=&#x27;class&#x27;)\n","         class  speed species\n","                  max    type\n","name\n","falcon    bird  389.0     fly\n","parrot    bird   24.0     fly\n","lion    mammal   80.5     run\n","monkey  mammal    NaN    jump\n","\n","If we are not dropping the index, by default, it is placed in the top\n","level. We can place it in another level:\n","\n","&gt;&gt;&gt; df.reset_index(level=&#x27;class&#x27;, col_level=1)\n","                speed species\n","         class    max    type\n","name\n","falcon    bird  389.0     fly\n","parrot    bird   24.0     fly\n","lion    mammal   80.5     run\n","monkey  mammal    NaN    jump\n","\n","When the index is inserted under another level, we can specify under\n","which one with the parameter `col_fill`:\n","\n","&gt;&gt;&gt; df.reset_index(level=&#x27;class&#x27;, col_level=1, col_fill=&#x27;species&#x27;)\n","              species  speed species\n","                class    max    type\n","name\n","falcon           bird  389.0     fly\n","parrot           bird   24.0     fly\n","lion           mammal   80.5     run\n","monkey         mammal    NaN    jump\n","\n","If we specify a nonexistent level for `col_fill`, it is created:\n","\n","&gt;&gt;&gt; df.reset_index(level=&#x27;class&#x27;, col_level=1, col_fill=&#x27;genus&#x27;)\n","                genus  speed species\n","                class    max    type\n","name\n","falcon           bird  389.0     fly\n","parrot           bird   24.0     fly\n","lion           mammal   80.5     run\n","monkey         mammal    NaN    jump</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 5976);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":17}],"source":["draftdf.reset_index"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1,"status":"ok","timestamp":1717870204976,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"LM2l3NC7JNWb","outputId":"b5e62741-9d06-4dc1-be98-2e5fea81c95d"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 3478 entries, 2 to 3753\n","Data columns (total 23 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   Pk          3478 non-null   int64  \n"," 1   Tm          3478 non-null   object \n"," 2   Player      3478 non-null   object \n"," 3   College     3478 non-null   string \n"," 4   Yrs         3478 non-null   object \n"," 5   G           2104 non-null   float64\n"," 6   MP          2104 non-null   float64\n"," 7   PTS         2104 non-null   float64\n"," 8   TRB         3478 non-null   object \n"," 9   AST         3478 non-null   object \n"," 10  FG%         3478 non-null   object \n"," 11  3P%         3478 non-null   object \n"," 12  FT%         3478 non-null   object \n"," 13  MP          2104 non-null   float64\n"," 14  PTS         2104 non-null   float64\n"," 15  TRB         3478 non-null   object \n"," 16  AST         3478 non-null   object \n"," 17  WS          3478 non-null   object \n"," 18  WS/48       3478 non-null   object \n"," 19  BPM         3478 non-null   object \n"," 20  VORP        3478 non-null   object \n"," 21  Draft_Year  3478 non-null   int64  \n"," 22  Link        3478 non-null   object \n","dtypes: float64(5), int64(2), object(15), string(1)\n","memory usage: 652.1+ KB\n"]}],"source":["draftdf.info() # Checking new results after cleansing the df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D_laCgUWBceJ"},"outputs":[],"source":["draftdf[\"College\"] = draftdf['College'].replace(\"\",np.nan)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1717870207843,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"W8C86b58xZ1o","outputId":"4432cb89-55cc-4c34-927f-56c813753cf4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pk               0\n","Tm               0\n","Player           0\n","College        342\n","Yrs              0\n","G             1374\n","MP            1374\n","PTS           1374\n","TRB              0\n","AST              0\n","FG%              0\n","3P%              0\n","FT%              0\n","MP            1374\n","PTS           1374\n","TRB              0\n","AST              0\n","WS               0\n","WS/48            0\n","BPM              0\n","VORP             0\n","Draft_Year       0\n","Link             0\n","dtype: int64"]},"metadata":{},"execution_count":20}],"source":["draftdf.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u837ZBTRfAGc"},"outputs":[],"source":["draftdf = draftdf[draftdf['College'].notna()] # i do not want players that did not attend college"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1,"status":"ok","timestamp":1717870210473,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"Ce4rK4S-fPTW","outputId":"09894eeb-8783-4c61-aa13-799d5713b712"},"outputs":[{"output_type":"stream","name":"stdout","text":["3136\n"]}],"source":["PlayerTotal=draftdf[\"Player\"].notnull().sum()\n","print(PlayerTotal)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yzLZAiSL_8MN"},"outputs":[],"source":["draftdf = draftdf[draftdf['Pk']<61] # im only analizing the top 60 picks of each draft (Old nba drafts had more than 60 picks)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1,"status":"ok","timestamp":1717870213529,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"4c_qNAwxXErG","outputId":"314a27b6-23d2-40b9-e7f6-ce88b27042cb"},"outputs":[{"output_type":"stream","name":"stdout","text":["2019\n"]}],"source":["PlayerTotal=draftdf[\"Player\"].notnull().sum()\n","print(PlayerTotal)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ace-cViA0iI0"},"outputs":[],"source":["draftdf[[\"Link\"]] = draftdf[[\"Link\"]].astype('string')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":469},"executionInfo":{"elapsed":780,"status":"ok","timestamp":1717870217384,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"TIRjZ70vyRNB","outputId":"8ce539bb-85e0-4efc-c0fd-e23f61e1f42b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure(figsize = (12,5))\n","draftdf.groupby(\"Pk\").size().plot(kind=\"bar\");"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NKY8f7vfB-WX"},"outputs":[],"source":["### In order for this code to run as designed there needs to be a column in the dataset\n","# That is title Link which contains the text string needed to be entered for there\n","#College statistics url defined in the function. The string is formatted as\n","# \"[First name]-[last name]-1\" for mostly all of the players\n","\n","#https://www.sports-reference.com/cbb/players/michael-jordan-1.html\n","\n","#creating a list of player links for the function to loop through\n","player_links=[]\n","for player in draftdf['Link']:\n","    player_links.append(player)"]},{"cell_type":"code","source":["letters = [chr(i) for i in range(ord('a'), ord('z') + 1)]\n","# Creating letter list for iterating in Basketball reference Url\n","letters"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lhx5stmNF4e8","executionInfo":{"status":"ok","timestamp":1717870220553,"user_tz":180,"elapsed":1,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"ef5bbd6c-4549-4b84-950d-3ddb378df51e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['a',\n"," 'b',\n"," 'c',\n"," 'd',\n"," 'e',\n"," 'f',\n"," 'g',\n"," 'h',\n"," 'i',\n"," 'j',\n"," 'k',\n"," 'l',\n"," 'm',\n"," 'n',\n"," 'o',\n"," 'p',\n"," 'q',\n"," 'r',\n"," 's',\n"," 't',\n"," 'u',\n"," 'v',\n"," 'w',\n"," 'x',\n"," 'y',\n"," 'z']"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["def split_list(lst, chunk_size):\n","    return [lst[i:i + chunk_size] for i in range(0, len(lst), chunk_size)]\n","\n","Lista = letters\n","chunk_size = 20\n","chunks = split_list(Lista, chunk_size)\n","\n","print(\"Chunks:\", chunks)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u8Vj0wEKGBAd","executionInfo":{"status":"ok","timestamp":1717870221840,"user_tz":180,"elapsed":2,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"917022ea-b374-40b1-edb4-f7eacc09c400"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Chunks: [['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't'], ['u', 'v', 'w', 'x', 'y', 'z']]\n"]}]},{"cell_type":"code","source":["for i in range(len(chunks)):\n","    variable_name = f\"ChunkLetter_{i}\"\n","    variable_value = chunks[i]\n","    globals()[variable_name] = variable_value\n","# As basketball refence only admits 20 request per minute, i had to devide the letters\n","# Accessing the variables\n","for i in range(len(chunks)):\n","    print(f\"ChunkLetter_{i} = {globals()[f'Chunk_{i}']}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gh_X-fP1Gl2v","executionInfo":{"status":"ok","timestamp":1717870496280,"user_tz":180,"elapsed":306,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"8d4fe1e4-e2d4-4e4b-ee54-771c6c0b858b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ChunkLetter_0 = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't']\n","ChunkLetter_1 = ['u', 'v', 'w', 'x', 'y', 'z']\n"]}]},{"cell_type":"code","source":["\n","# URL to scrape to get headers for loop of letters\n","url = \"https://www.basketball-reference.com/players/a/\"\n","\n","# collect HTML data from url\n","html = urlopen(url)\n","\n","# create beautiful soup object from HTML\n","soup = BeautifulSoup(html, features=\"lxml\")\n","soup_table = soup.find(name = 'table', attrs = {'id' : 'players'})\n","\n","\n","\n","# use getText()to extract the headers into a list\n","headers = [th.getText() for th in soup.findAll('tr', limit=2)[0].findAll('th')]\n","print(headers)\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J9ayWqBwHqN7","executionInfo":{"status":"ok","timestamp":1717870500939,"user_tz":180,"elapsed":367,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"8443e852-c467-43f3-ad82-97153f5b4bfb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Player', 'From', 'To', 'Pos', 'Ht', 'Wt', 'Birth Date', 'Colleges']\n"]}]},{"cell_type":"code","source":["for l in ChunkLetter_1:\n","        #Draft year to scrape\n","        letter = l\n","       #Placing string url string with year being iterable\n","        url = f\"https://www.basketball-reference.com/players/{letter}/\"\n","        time.sleep(0.5)\n","        html = urlopen(url)\n","        soup= BeautifulSoup(html, features = 'lxml')\n","        # get rows from table\n","        rows = soup.findAll('tr')[0:]\n","\n","        rows_data = [[th.getText() for th in rows[i].findAll('th')]\n","                     for i in range(len(rows))]"],"metadata":{"id":"Fs5vFwsNMMX9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rows_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ez3AnKpWNCMW","executionInfo":{"status":"ok","timestamp":1717870530960,"user_tz":180,"elapsed":302,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"ec7f791c-835b-4fdd-c46e-88a06f6af519"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[['Player', 'From', 'To', 'Pos', 'Ht', 'Wt', 'Birth Date', 'Colleges'],\n"," ['Max Zaslofsky'],\n"," ['Zeke Zawoluk'],\n"," ['Cody Zeller'],\n"," ['Dave Zeller'],\n"," ['Gary Zeller'],\n"," ['Harry Zeller'],\n"," ['Luke Zeller'],\n"," ['Tyler Zeller'],\n"," ['Tony Zeno'],\n"," ['Phil Zevenbergen'],\n"," ['Wang Zhizhi'],\n"," ['George ZÃ­dek'],\n"," ['Derrick Zimmerman'],\n"," ['Stephen Zimmerman'],\n"," ['Paul Zipser'],\n"," ['Ante Å½iÅ¾iÄ‡'],\n"," ['Jim Zoet'],\n"," ['Bill Zopf'],\n"," ['Ivica Zubac'],\n"," ['Matt Zunic']]"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["\n","def scrape_nba_statistics(letters=['a']):\n","# creating a funtion to retreive player nba info for each letter\n","\n","      player_stats=[]\n","      #iterating through letter links\n","      for l in letters:\n","        #try:\n","\n","\n","              letter = l\n","\n","              #replacing section in url with appropriate player_link\n","              url = f\"https://www.basketball-reference.com/players/{letter}/\"\n","              time.sleep(0.5)\n","              html = urlopen(url)\n","              soup= BeautifulSoup(html, features = 'lxml')\n","              soup_table = soup.find(name = 'table', attrs = {'id' : 'players'})\n","\n","\n","\n","              # get rows from table\n","              for row in soup_table.find_all('tr'):# Excluding the first 'tr', since that's the table's title head\n","                  player = {}\n","\n","                  try:\n","                    player['Player']= row.find('th', {'data-stat' : 'player'}).text\n","                    player['year_min'] = row.find('td', {'data-stat' : 'year_min'}).text\n","                    player['year_max'] = row.find('td', {'data-stat' : 'year_max'}).text\n","                    player['pos'] = row.find('td', {'data-stat' : 'pos'}).text\n","                    player['height'] = row.find('td', {'data-stat' : 'height'}).text\n","                    player['weight'] = row.find('td', {'data-stat' : 'weight'}).text\n","                    player['birth_date'] = row.find('td', {'data-stat' : 'birth_date'}).text\n","\n","                    player['colleges'] = row.find('td', {'data-stat' : 'colleges'}).text\n","\n","                  except:\n","                      print('error')\n","\n","                  player_stats.append(player)\n","        #except:\n","          #print('For player: ',letter, 'sys.exc_info()[0]')\n","\n","  #Adding an exception to view any errors when collecting data for each player\n","\n","  #Collecting data into dataframe then placing into a csv file\n","\n","      df=pd.DataFrame(player_stats)\n","      return df"],"metadata":{"id":"Y6t-kIGqDt5Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","Player_info1=scrape_nba_statistics(letters=ChunkLetter_0)\n","\n","time.sleep(65) # time sleep to not overload with requests\n","\n","Player_info2=scrape_nba_statistics(letters=ChunkLetter_1)\n","\n","Player_info=pd.concat([Player_info1,Player_info2],ignore_index=True)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WaB_3r_bgMr0","executionInfo":{"status":"ok","timestamp":1717870472143,"user_tz":180,"elapsed":152270,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"3a971694-a0bb-4eb6-989d-507c9283749f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n","error\n"]}]},{"cell_type":"code","source":["Player_info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"pDM_jTNEEHvm","executionInfo":{"status":"ok","timestamp":1717870569757,"user_tz":180,"elapsed":4,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"838e7ef4-61cb-48e6-faaf-a9c01724a13f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Player year_min year_max  pos height weight  \\\n","0                   Player      NaN      NaN  NaN    NaN    NaN   \n","1           Alaa Abdelnaby     1991     1995  F-C   6-10    240   \n","2          Zaid Abdul-Aziz     1969     1978  C-F    6-9    235   \n","3     Kareem Abdul-Jabbar*     1970     1989    C    7-2    225   \n","4       Mahmoud Abdul-Rauf     1991     2001    G    6-1    162   \n","...                    ...      ...      ...  ...    ...    ...   \n","5230            Ante Å½iÅ¾iÄ‡     2018     2020  F-C   6-10    266   \n","5231              Jim Zoet     1983     1983    C    7-1    240   \n","5232             Bill Zopf     1971     1971    G    6-1    170   \n","5233           Ivica Zubac     2017     2024    C    7-0    240   \n","5234            Matt Zunic     1949     1949  G-F    6-3    195   \n","\n","             birth_date               colleges  \n","0                   NaN                    NaN  \n","1         June 24, 1968                   Duke  \n","2         April 7, 1946             Iowa State  \n","3        April 16, 1947                   UCLA  \n","4         March 9, 1969                    LSU  \n","...                 ...                    ...  \n","5230    January 4, 1997                         \n","5231  December 20, 1953  Kent State University  \n","5232       June 7, 1948               Duquesne  \n","5233     March 18, 1997                         \n","5234  December 19, 1919      George Washington  \n","\n","[5235 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-e364880f-4ca5-49cb-8ada-8fdeefcfd7e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>year_min</th>\n","      <th>year_max</th>\n","      <th>pos</th>\n","      <th>height</th>\n","      <th>weight</th>\n","      <th>birth_date</th>\n","      <th>colleges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Player</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Alaa Abdelnaby</td>\n","      <td>1991</td>\n","      <td>1995</td>\n","      <td>F-C</td>\n","      <td>6-10</td>\n","      <td>240</td>\n","      <td>June 24, 1968</td>\n","      <td>Duke</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Zaid Abdul-Aziz</td>\n","      <td>1969</td>\n","      <td>1978</td>\n","      <td>C-F</td>\n","      <td>6-9</td>\n","      <td>235</td>\n","      <td>April 7, 1946</td>\n","      <td>Iowa State</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kareem Abdul-Jabbar*</td>\n","      <td>1970</td>\n","      <td>1989</td>\n","      <td>C</td>\n","      <td>7-2</td>\n","      <td>225</td>\n","      <td>April 16, 1947</td>\n","      <td>UCLA</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mahmoud Abdul-Rauf</td>\n","      <td>1991</td>\n","      <td>2001</td>\n","      <td>G</td>\n","      <td>6-1</td>\n","      <td>162</td>\n","      <td>March 9, 1969</td>\n","      <td>LSU</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5230</th>\n","      <td>Ante Å½iÅ¾iÄ‡</td>\n","      <td>2018</td>\n","      <td>2020</td>\n","      <td>F-C</td>\n","      <td>6-10</td>\n","      <td>266</td>\n","      <td>January 4, 1997</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>5231</th>\n","      <td>Jim Zoet</td>\n","      <td>1983</td>\n","      <td>1983</td>\n","      <td>C</td>\n","      <td>7-1</td>\n","      <td>240</td>\n","      <td>December 20, 1953</td>\n","      <td>Kent State University</td>\n","    </tr>\n","    <tr>\n","      <th>5232</th>\n","      <td>Bill Zopf</td>\n","      <td>1971</td>\n","      <td>1971</td>\n","      <td>G</td>\n","      <td>6-1</td>\n","      <td>170</td>\n","      <td>June 7, 1948</td>\n","      <td>Duquesne</td>\n","    </tr>\n","    <tr>\n","      <th>5233</th>\n","      <td>Ivica Zubac</td>\n","      <td>2017</td>\n","      <td>2024</td>\n","      <td>C</td>\n","      <td>7-0</td>\n","      <td>240</td>\n","      <td>March 18, 1997</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>5234</th>\n","      <td>Matt Zunic</td>\n","      <td>1949</td>\n","      <td>1949</td>\n","      <td>G-F</td>\n","      <td>6-3</td>\n","      <td>195</td>\n","      <td>December 19, 1919</td>\n","      <td>George Washington</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5235 rows Ã— 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e364880f-4ca5-49cb-8ada-8fdeefcfd7e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e364880f-4ca5-49cb-8ada-8fdeefcfd7e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e364880f-4ca5-49cb-8ada-8fdeefcfd7e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b7126727-ff95-435c-b850-b5ec89b9818d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7126727-ff95-435c-b850-b5ec89b9818d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b7126727-ff95-435c-b850-b5ec89b9818d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4acfc720-9789-4c8d-a17b-004f71b8402e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Player_info')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4acfc720-9789-4c8d-a17b-004f71b8402e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Player_info');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Player_info","summary":"{\n  \"name\": \"Player_info\",\n  \"rows\": 5235,\n  \"fields\": [\n    {\n      \"column\": \"Player\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5167,\n        \"samples\": [\n          \"Dick Garrett\",\n          \"Desmond Mason\",\n          \"Jimmy O'Brien\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year_min\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1947-01-01 00:00:00\",\n        \"max\": \"2024-01-01 00:00:00\",\n        \"num_unique_values\": 78,\n        \"samples\": [\n          \"1985\",\n          \"1991\",\n          \"2016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year_max\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1947-01-01 00:00:00\",\n        \"max\": \"2024-01-01 00:00:00\",\n        \"num_unique_values\": 78,\n        \"samples\": [\n          \"2022\",\n          \"1995\",\n          \"1985\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pos\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"F-C\",\n          \"C-F\",\n          \"G-F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"height\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"6-0\",\n          \"5-7\",\n          \"6-5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 148,\n        \"samples\": [\n          \"277\",\n          \"137\",\n          \"308\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birth_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1902-01-30 00:00:00\",\n        \"max\": \"2004-12-17 00:00:00\",\n        \"num_unique_values\": 4772,\n        \"samples\": [\n          \"December 1, 1991\",\n          \"March 29, 1996\",\n          \"July 11, 1943\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"colleges\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 933,\n        \"samples\": [\n          \"Lon Morris College, Tulsa\",\n          \"USC\",\n          \"Saint Mary's, Wyoming\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["Player_info['Player']=Player_info['Player'].str.replace('*','')\n","Player_info[\"Link\"] = Player_info[\"Player\"].str.replace('.', '').str.replace(' ', '-').str.replace(\"'\", '').str.lower().str.normalize('NFKD').str.encode('ascii', errors='ignore').str.decode('utf-8')+ \"-1\"\n","# replacing * that denotes hall of famer and creating player Link to join with the other DF"],"metadata":{"id":"9zEjoCQJSk5r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Player_info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"jHMdwYx0lCaM","executionInfo":{"status":"ok","timestamp":1717870580231,"user_tz":180,"elapsed":10,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"fdf3d757-dbe9-4932-9041-9489a34e7571"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Player year_min year_max  pos height weight  \\\n","0                  Player      NaN      NaN  NaN    NaN    NaN   \n","1          Alaa Abdelnaby     1991     1995  F-C   6-10    240   \n","2         Zaid Abdul-Aziz     1969     1978  C-F    6-9    235   \n","3     Kareem Abdul-Jabbar     1970     1989    C    7-2    225   \n","4      Mahmoud Abdul-Rauf     1991     2001    G    6-1    162   \n","...                   ...      ...      ...  ...    ...    ...   \n","5230           Ante Å½iÅ¾iÄ‡     2018     2020  F-C   6-10    266   \n","5231             Jim Zoet     1983     1983    C    7-1    240   \n","5232            Bill Zopf     1971     1971    G    6-1    170   \n","5233          Ivica Zubac     2017     2024    C    7-0    240   \n","5234           Matt Zunic     1949     1949  G-F    6-3    195   \n","\n","             birth_date               colleges                   Link  \n","0                   NaN                    NaN               player-1  \n","1         June 24, 1968                   Duke       alaa-abdelnaby-1  \n","2         April 7, 1946             Iowa State      zaid-abdul-aziz-1  \n","3        April 16, 1947                   UCLA  kareem-abdul-jabbar-1  \n","4         March 9, 1969                    LSU   mahmoud-abdul-rauf-1  \n","...                 ...                    ...                    ...  \n","5230    January 4, 1997                                  ante-zizic-1  \n","5231  December 20, 1953  Kent State University             jim-zoet-1  \n","5232       June 7, 1948               Duquesne            bill-zopf-1  \n","5233     March 18, 1997                                 ivica-zubac-1  \n","5234  December 19, 1919      George Washington           matt-zunic-1  \n","\n","[5235 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-ec60fb35-d561-4bfd-805c-4730705334b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>year_min</th>\n","      <th>year_max</th>\n","      <th>pos</th>\n","      <th>height</th>\n","      <th>weight</th>\n","      <th>birth_date</th>\n","      <th>colleges</th>\n","      <th>Link</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Player</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>player-1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Alaa Abdelnaby</td>\n","      <td>1991</td>\n","      <td>1995</td>\n","      <td>F-C</td>\n","      <td>6-10</td>\n","      <td>240</td>\n","      <td>June 24, 1968</td>\n","      <td>Duke</td>\n","      <td>alaa-abdelnaby-1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Zaid Abdul-Aziz</td>\n","      <td>1969</td>\n","      <td>1978</td>\n","      <td>C-F</td>\n","      <td>6-9</td>\n","      <td>235</td>\n","      <td>April 7, 1946</td>\n","      <td>Iowa State</td>\n","      <td>zaid-abdul-aziz-1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kareem Abdul-Jabbar</td>\n","      <td>1970</td>\n","      <td>1989</td>\n","      <td>C</td>\n","      <td>7-2</td>\n","      <td>225</td>\n","      <td>April 16, 1947</td>\n","      <td>UCLA</td>\n","      <td>kareem-abdul-jabbar-1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mahmoud Abdul-Rauf</td>\n","      <td>1991</td>\n","      <td>2001</td>\n","      <td>G</td>\n","      <td>6-1</td>\n","      <td>162</td>\n","      <td>March 9, 1969</td>\n","      <td>LSU</td>\n","      <td>mahmoud-abdul-rauf-1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5230</th>\n","      <td>Ante Å½iÅ¾iÄ‡</td>\n","      <td>2018</td>\n","      <td>2020</td>\n","      <td>F-C</td>\n","      <td>6-10</td>\n","      <td>266</td>\n","      <td>January 4, 1997</td>\n","      <td></td>\n","      <td>ante-zizic-1</td>\n","    </tr>\n","    <tr>\n","      <th>5231</th>\n","      <td>Jim Zoet</td>\n","      <td>1983</td>\n","      <td>1983</td>\n","      <td>C</td>\n","      <td>7-1</td>\n","      <td>240</td>\n","      <td>December 20, 1953</td>\n","      <td>Kent State University</td>\n","      <td>jim-zoet-1</td>\n","    </tr>\n","    <tr>\n","      <th>5232</th>\n","      <td>Bill Zopf</td>\n","      <td>1971</td>\n","      <td>1971</td>\n","      <td>G</td>\n","      <td>6-1</td>\n","      <td>170</td>\n","      <td>June 7, 1948</td>\n","      <td>Duquesne</td>\n","      <td>bill-zopf-1</td>\n","    </tr>\n","    <tr>\n","      <th>5233</th>\n","      <td>Ivica Zubac</td>\n","      <td>2017</td>\n","      <td>2024</td>\n","      <td>C</td>\n","      <td>7-0</td>\n","      <td>240</td>\n","      <td>March 18, 1997</td>\n","      <td></td>\n","      <td>ivica-zubac-1</td>\n","    </tr>\n","    <tr>\n","      <th>5234</th>\n","      <td>Matt Zunic</td>\n","      <td>1949</td>\n","      <td>1949</td>\n","      <td>G-F</td>\n","      <td>6-3</td>\n","      <td>195</td>\n","      <td>December 19, 1919</td>\n","      <td>George Washington</td>\n","      <td>matt-zunic-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5235 rows Ã— 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec60fb35-d561-4bfd-805c-4730705334b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ec60fb35-d561-4bfd-805c-4730705334b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ec60fb35-d561-4bfd-805c-4730705334b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9d54a577-62cb-4117-a1db-398e13eb769f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d54a577-62cb-4117-a1db-398e13eb769f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9d54a577-62cb-4117-a1db-398e13eb769f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4ffc076b-42c4-4e15-b05e-82cd8e4d5437\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Player_info')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4ffc076b-42c4-4e15-b05e-82cd8e4d5437 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Player_info');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Player_info","summary":"{\n  \"name\": \"Player_info\",\n  \"rows\": 5235,\n  \"fields\": [\n    {\n      \"column\": \"Player\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5163,\n        \"samples\": [\n          \"Sidney Green\",\n          \"Joey Graham\",\n          \"Uro\\u0161 Slokar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year_min\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1947-01-01 00:00:00\",\n        \"max\": \"2024-01-01 00:00:00\",\n        \"num_unique_values\": 78,\n        \"samples\": [\n          \"1985\",\n          \"1991\",\n          \"2016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year_max\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1947-01-01 00:00:00\",\n        \"max\": \"2024-01-01 00:00:00\",\n        \"num_unique_values\": 78,\n        \"samples\": [\n          \"2022\",\n          \"1995\",\n          \"1985\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pos\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"F-C\",\n          \"C-F\",\n          \"G-F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"height\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"6-0\",\n          \"5-7\",\n          \"6-5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 148,\n        \"samples\": [\n          \"277\",\n          \"137\",\n          \"308\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birth_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1902-01-30 00:00:00\",\n        \"max\": \"2004-12-17 00:00:00\",\n        \"num_unique_values\": 4772,\n        \"samples\": [\n          \"December 1, 1991\",\n          \"March 29, 1996\",\n          \"July 11, 1943\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"colleges\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 933,\n        \"samples\": [\n          \"Lon Morris College, Tulsa\",\n          \"USC\",\n          \"Saint Mary's, Wyoming\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5163,\n        \"samples\": [\n          \"sidney-green-1\",\n          \"joey-graham-1\",\n          \"uros-slokar-1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":318,"status":"ok","timestamp":1717870624549,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"s4ZIUFF3IDoL","outputId":"3790a3c2-9a52-41de-b413-bde5d7d5b37b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['joe-barry-carroll-1',\n"," 'darrell-griffith-1',\n"," 'kevin-mchale-1',\n"," 'kelvin-ransey-1',\n"," 'james-ray-1',\n"," 'mike-okoren-1',\n"," 'mike-gminski-1',\n"," 'andrew-toney-1',\n"," 'michael-brooks-1',\n"," 'ronnie-lester-1',\n"," 'kiki-vandeweghe-1',\n"," 'mike-woodson-1',\n"," 'rickey-brown-1',\n"," 'wes-matthews-1',\n"," 'reggie-johnson-1',\n"," 'hawkeye-whitney-1',\n"," 'larry-drew-1',\n"," 'don-collins-1',\n"," 'john-duren-1',\n"," 'bill-hanzlik-1',\n"," 'monti-davis-1',\n"," 'chad-kinch-1',\n"," 'carl-nicks-1',\n"," 'larry-smith-1',\n"," 'jeff-ruland-1',\n"," 'sam-worthen-1',\n"," 'john-stroud-1',\n"," 'craig-shelton-1',\n"," 'louis-orr-1',\n"," 'kenny-natt-1',\n"," 'wayne-robinson-1',\n"," 'david-lawrence-1',\n"," 'bruce-collins-1',\n"," 'roosevelt-bouie-1',\n"," 'rick-mahorn-1',\n"," 'dewayne-scales-1',\n"," 'butch-carter-1',\n"," 'terry-stotts-1',\n"," 'michael-wiley-1',\n"," 'dick-miller-1',\n"," 'jawann-oldham-1',\n"," 'kimberly-belton-1',\n"," 'billy-williams-1',\n"," 'clyde-austin-1',\n"," 'brad-branson-1',\n"," 'arnette-hallman-1',\n"," 'kurt-nimphius-1',\n"," 'eddie-lee-1',\n"," 'john-virgil-1',\n"," 'james-wilkes-1',\n"," 'ronnie-valentine-1',\n"," 'lowes-moore-1',\n"," 'stuart-house-1',\n"," 'ron-perry-1',\n"," 'wayne-abrams-1',\n"," 'mike-harper-1',\n"," 'dave-britton-1',\n"," 'kurt-rambis-1',\n"," 'john-campbell-1',\n"," 'lavon-mercer-1',\n"," 'mark-aguirre-1',\n"," 'isiah-thomas-1',\n"," 'buck-williams-1',\n"," 'al-wood-1',\n"," 'danny-vranes-1',\n"," 'orlando-woolridge-1',\n"," 'steve-johnson-1',\n"," 'tom-chambers-1',\n"," 'rolando-blackman-1',\n"," 'albert-king-1',\n"," 'frank-johnson-1',\n"," 'kelly-tripucka-1',\n"," 'danny-schayes-1',\n"," 'herb-williams-1',\n"," 'jeff-lamp-1',\n"," 'darnell-valentine-1',\n"," 'kevin-loder-1',\n"," 'ray-tolbert-1',\n"," 'mike-mcgee-1',\n"," 'larry-nance-1',\n"," 'alton-lister-1',\n"," 'franklin-edwards-1',\n"," 'charles-bradley-1',\n"," 'jay-vincent-1',\n"," 'tracy-jackson-1',\n"," 'brian-jackson-1',\n"," 'howard-wood-1',\n"," 'gene-banks-1',\n"," 'eddie-johnson-1',\n"," 'ed-rains-1',\n"," 'danny-ainge-1',\n"," 'mike-olliver-1',\n"," 'sam-williams-1',\n"," 'ken-green-1',\n"," 'charles-davis-1',\n"," 'ray-blume-1',\n"," 'al-leslie-1',\n"," 'clyde-bradshaw-1',\n"," 'harvey-knuckles-1',\n"," 'greg-cook-1',\n"," 'claude-gregory-1',\n"," 'elvis-rolle-1',\n"," 'elston-turner-1',\n"," 'steve-lingenfelter-1',\n"," 'vernon-smith-1',\n"," 'art-housey-1',\n"," 'mike-ferrara-1',\n"," 'david-burns-1',\n"," 'derek-holcomb-1',\n"," 'zam-fredrick-1',\n"," 'rudy-macklin-1',\n"," 'mark-radford-1',\n"," 'jim-smith-1',\n"," 'mickey-dillard-1',\n"," 'carlton-neverson-1',\n"," 'frank-brickowski-1',\n"," 'curtis-berry-1',\n"," 'russell-bowers-1',\n"," 'purvis-miller-1',\n"," 'james-worthy-1',\n"," 'terry-cummings-1',\n"," 'dominique-wilkins-1',\n"," 'bill-garnett-1',\n"," 'lasalle-thompson-1',\n"," 'trent-tucker-1',\n"," 'quintin-dailey-1',\n"," 'clark-kellogg-1',\n"," 'cliff-levingston-1',\n"," 'keith-edmonson-1',\n"," 'fat-lever-1',\n"," 'john-bagley-1',\n"," 'sleepy-floyd-1',\n"," 'lester-conner-1',\n"," 'david-thirdkill-1',\n"," 'terry-teagle-1',\n"," 'brook-steppe-1',\n"," 'ricky-pierce-1',\n"," 'rob-williams-1',\n"," 'paul-pressey-1',\n"," 'eddie-phillips-1',\n"," 'mark-mcnamara-1',\n"," 'darren-tillis-1',\n"," 'oliver-robinson-1',\n"," 'bryan-warrick-1',\n"," 'ricky-frazier-1',\n"," 'fred-roberts-1',\n"," 'dave-magley-1',\n"," 'scott-hastings-1',\n"," 'wallace-bryant-1',\n"," 'rod-higgins-1',\n"," 'richard-anderson-1',\n"," 'linton-townes-1',\n"," 'vince-taylor-1',\n"," 'derek-smith-1',\n"," 'jj-anderson-1',\n"," 'audie-norris-1',\n"," 'wayne-sappleton-1',\n"," 'kevin-magee-1',\n"," 'guy-morgan-1',\n"," 'dwight-anderson-1',\n"," 'jeff-taylor-1',\n"," 'jose-slaughter-1',\n"," 'mike-gibson-1',\n"," 'russ-schoene-1',\n"," 'tony-guy-1',\n"," 'michael-wilson-1',\n"," 'craig-hodges-1',\n"," 'steve-trumbo-1',\n"," 'corny-thompson-1',\n"," 'jim-johnstone-1',\n"," 'dan-caldwell-1',\n"," 'tyrone-adams-1',\n"," 'hutch-jones-1',\n"," 'jerry-eaves-1',\n"," 'joe-kopicki-1',\n"," 'craig-tucker-1',\n"," 'mike-largey-1',\n"," 'jimmy-black-1',\n"," 'chris-engler-1',\n"," 'ralph-sampson-1',\n"," 'steve-stipanovich-1',\n"," 'rodney-mccray-1',\n"," 'byron-scott-1',\n"," 'sidney-green-1',\n"," 'russell-cross-1',\n"," 'thurl-bailey-1',\n"," 'antoine-carr-1',\n"," 'dale-ellis-1',\n"," 'jeff-malone-1',\n"," 'derek-harper-1',\n"," 'darrell-walker-1',\n"," 'ennis-whatley-1',\n"," 'clyde-drexler-1',\n"," 'howard-carter-1',\n"," 'jon-sundvold-1',\n"," 'leo-rautins-1',\n"," 'randy-breuer-1',\n"," 'john-paxson-1',\n"," 'roy-hinson-1',\n"," 'greg-kite-1',\n"," 'randy-wittman-1',\n"," 'mitchell-wiggins-1',\n"," 'stewart-granger-1',\n"," 'sidney-lowe-1',\n"," 'leroy-combs-1',\n"," 'john-garris-1',\n"," 'rod-foster-1',\n"," 'larry-micheaux-1',\n"," 'mark-west-1',\n"," 'doc-rivers-1',\n"," 'michael-britt-1',\n"," 'dirk-minniefield-1',\n"," 'guy-williams-1',\n"," 'darrell-lockhart-1',\n"," 'scooter-mccray-1',\n"," 'david-russell-1',\n"," 'chris-mcnealy-1',\n"," 'granville-waiters-1',\n"," 'jim-thomas-1',\n"," 'ted-kitchel-1',\n"," 'mike-davis-1',\n"," 'pace-mannion-1',\n"," 'horace-owens-1',\n"," 'paul-williams-1',\n"," 'kevin-williams-1',\n"," 'ken-lyons-1',\n"," 'craig-ehlo-1',\n"," 'greg-jones-1',\n"," 'paul-thompson-1',\n"," 'dereck-whittenburg-1',\n"," 'winfred-king-1',\n"," 'michael-holton-1',\n"," 'bob-hansen-1',\n"," 'erich-santifer-1',\n"," 'larry-anderson-1',\n"," 'darren-daye-1',\n"," 'john-pinone-1',\n"," 'bruce-kuczenski-1',\n"," 'steve-harriel-1',\n"," 'hakeem-olajuwon-1',\n"," 'sam-bowie-1',\n"," 'michael-jordan-1',\n"," 'sam-perkins-1',\n"," 'charles-barkley-1',\n"," 'melvin-turpin-1',\n"," 'alvin-robertson-1',\n"," 'lancaster-gordon-1',\n"," 'otis-thorpe-1',\n"," 'leon-wood-1',\n"," 'kevin-willis-1',\n"," 'tim-mccormick-1',\n"," 'jay-humphries-1',\n"," 'michael-cage-1',\n"," 'terence-stansbury-1',\n"," 'john-stockton-1',\n"," 'jeff-turner-1',\n"," 'vern-fleming-1',\n"," 'bernard-thompson-1',\n"," 'tony-campbell-1',\n"," 'kenny-fields-1',\n"," 'tom-sewell-1',\n"," 'earl-jones-1',\n"," 'michael-young-1',\n"," 'devin-durrant-1',\n"," 'victor-fleming-1',\n"," 'ron-anderson-1',\n"," 'cory-blackwell-1',\n"," 'stuart-gray-1',\n"," 'steve-burtt-1',\n"," 'jay-murphy-1',\n"," 'eric-turner-1',\n"," 'steve-colter-1',\n"," 'tony-costner-1',\n"," 'othell-wilson-1',\n"," 'charles-jones-1',\n"," 'ben-coleman-1',\n"," 'charlie-sitton-1',\n"," 'danny-young-1',\n"," 'anthony-teachey-1',\n"," 'tom-sluby-1',\n"," 'willie-white-1',\n"," 'greg-wiltjer-1',\n"," 'fred-reynolds-1',\n"," 'gary-plummer-1',\n"," 'jerome-kersey-1',\n"," 'ronnie-williams-1',\n"," 'james-banks-1',\n"," 'tim-dillon-1',\n"," 'ben-mcdonald-1',\n"," 'jim-petersen-1',\n"," 'terry-williams-1',\n"," 'ricky-ross-1',\n"," 'roosevelt-chapman-1',\n"," 'lewis-jackson-1',\n"," 'jeff-allen-1',\n"," 'joe-binion-1',\n"," 'bobby-parks-1',\n"," 'murray-jarman-1',\n"," 'leonard-mitchell-1',\n"," 'patrick-ewing-1',\n"," 'wayman-tisdale-1',\n"," 'benoit-benjamin-1',\n"," 'xavier-mcdaniel-1',\n"," 'jon-koncak-1',\n"," 'joe-kleine-1',\n"," 'chris-mullin-1',\n"," 'detlef-schrempf-1',\n"," 'charles-oakley-1',\n"," 'ed-pinckney-1',\n"," 'keith-lee-1',\n"," 'kenny-green-1',\n"," 'karl-malone-1',\n"," 'alfredrick-hughes-1',\n"," 'blair-rasmussen-1',\n"," 'bill-wennington-1',\n"," 'uwe-blab-1',\n"," 'joe-dumars-1',\n"," 'steve-harris-1',\n"," 'sam-vincent-1',\n"," 'terry-catledge-1',\n"," 'jerry-reynolds-1',\n"," 'ac-green-1',\n"," 'terry-porter-1',\n"," 'mike-smrek-1',\n"," 'bill-martin-1',\n"," 'dwayne-mcclain-1',\n"," 'ken-johnson-1',\n"," 'mike-brittain-1',\n"," 'calvin-duncan-1',\n"," 'manute-bol-1',\n"," 'nick-vanos-1',\n"," 'greg-stokes-1',\n"," 'aubrey-sherrod-1',\n"," 'tyrone-corbin-1',\n"," 'yvon-joseph-1',\n"," 'carey-scurry-1',\n"," 'george-montgomery-1',\n"," 'mark-acres-1',\n"," 'lorenzo-charles-1',\n"," 'bobby-lee-hurt-1',\n"," 'barry-stevens-1',\n"," 'voise-winters-1',\n"," 'hot-rod-williams-1',\n"," 'adrian-branch-1',\n"," 'gerald-wilkins-1',\n"," 'kenny-patterson-1',\n"," 'brad-wright-1',\n"," 'leonard-allen-1',\n"," 'charles-bradley-1',\n"," 'anicet-lavodrama-1',\n"," 'rolando-lamb-1',\n"," 'sam-mitchell-1',\n"," 'herb-johnson-1',\n"," 'jerry-everett-1',\n"," 'michael-payne-1',\n"," 'vernon-moore-1',\n"," 'sedric-toney-1',\n"," 'andre-goode-1',\n"," 'brad-daugherty-1',\n"," 'len-bias-1',\n"," 'chris-washburn-1',\n"," 'chuck-person-1',\n"," 'kenny-walker-1',\n"," 'william-bedford-1',\n"," 'roy-tarpley-1',\n"," 'ron-harper-1',\n"," 'brad-sellers-1',\n"," 'johnny-dawkins-1',\n"," 'john-salley-1',\n"," 'john-williams-1',\n"," 'pearl-washington-1',\n"," 'walter-berry-1',\n"," 'dell-curry-1',\n"," 'maurice-martin-1',\n"," 'harold-pressley-1',\n"," 'mark-alarie-1',\n"," 'billy-thompson-1',\n"," 'buck-johnson-1',\n"," 'anthony-jones-1',\n"," 'scott-skiles-1',\n"," 'ken-barlow-1',\n"," 'mark-price-1',\n"," 'greg-dreiling-1',\n"," 'dennis-rodman-1',\n"," 'larry-krystkowiak-1',\n"," 'johnny-newman-1',\n"," 'nate-mcmillan-1',\n"," 'joe-ward-1',\n"," 'cedric-henderson-1',\n"," 'kevin-duckworth-1',\n"," 'johnny-rogers-1',\n"," 'milt-wagner-1',\n"," 'steve-mitchell-1',\n"," 'panagiotis-fasoulas-1',\n"," 'lemone-lampley-1',\n"," 'rafael-addison-1',\n"," 'otis-smith-1',\n"," 'ron-kellogg-1',\n"," 'dave-feitl-1',\n"," 'david-wingate-1',\n"," 'keith-smith-1',\n"," 'jeff-hornacek-1',\n"," 'michael-jackson-1',\n"," 'forrest-mckenzie-1',\n"," 'juden-smith-1',\n"," 'kevin-henderson-1',\n"," 'mike-williams-1',\n"," 'ricky-wilson-1',\n"," 'tod-murphy-1',\n"," 'dwayne-polee-1',\n"," 'kenny-gattison-1',\n"," 'keith-colbert-1',\n"," 'bruce-douglas-1',\n"," 'dave-henderson-1',\n"," 'wendell-alexis-1',\n"," 'david-robinson-1',\n"," 'armen-gilliam-1',\n"," 'dennis-hopson-1',\n"," 'reggie-williams-1',\n"," 'scottie-pippen-1',\n"," 'kenny-smith-1',\n"," 'kevin-johnson-1',\n"," 'olden-polynice-1',\n"," 'derrick-mckey-1',\n"," 'horace-grant-1',\n"," 'reggie-miller-1',\n"," 'muggsy-bogues-1',\n"," 'joe-wolf-1',\n"," 'tellis-frank-1',\n"," 'jose-ortiz-1',\n"," 'chris-welp-1',\n"," 'ronnie-murphy-1',\n"," 'mark-jackson-1',\n"," 'ken-norman-1',\n"," 'jim-farmer-1',\n"," 'dallas-comegys-1',\n"," 'reggie-lewis-1',\n"," 'greg-anderson-1',\n"," 'freddie-banks-1',\n"," 'ron-moore-1',\n"," 'steve-alford-1',\n"," 'nate-blackwell-1',\n"," 'rickie-winslow-1',\n"," 'lester-fonville-1',\n"," 'nikita-wilson-1',\n"," 'andre-moore-1',\n"," 'bob-mccann-1',\n"," 'tony-white-1',\n"," 'brian-rowsom-1',\n"," 'doug-lee-1',\n"," 'duane-washington-1',\n"," 'derrick-dowell-1',\n"," 'norris-coleman-1',\n"," 'vincent-askew-1',\n"," 'winston-garland-1',\n"," 'kannard-johnson-1',\n"," 'terrance-bailey-1',\n"," 'andrew-kennedy-1',\n"," 'terry-coner-1',\n"," 'brad-lohaus-1',\n"," 'bruce-dalrymple-1',\n"," 'tim-mccalister-1',\n"," 'jamie-waller-1',\n"," 'jerome-batiste-1',\n"," 'phil-zevenbergen-1',\n"," 'sven-meyer-1',\n"," 'donald-royal-1',\n"," 'winston-crite-1',\n"," 'tom-schafer-1',\n"," 'tommy-amaker-1',\n"," 'john-fox-1',\n"," 'hansi-gnad-1',\n"," 'darryl-johnson-1',\n"," 'danny-pearson-1',\n"," 'sean-couch-1',\n"," 'danny-manning-1',\n"," 'rik-smits-1',\n"," 'charles-smith-1',\n"," 'chris-morris-1',\n"," 'mitch-richmond-1',\n"," 'hersey-hawkins-1',\n"," 'tim-perry-1',\n"," 'rex-chapman-1',\n"," 'rony-seikaly-1',\n"," 'willie-anderson-1',\n"," 'will-perdue-1',\n"," 'harvey-grant-1',\n"," 'jeff-grayer-1',\n"," 'dan-majerle-1',\n"," 'gary-grant-1',\n"," 'derrick-chievous-1',\n"," 'eric-leckner-1',\n"," 'ricky-berry-1',\n"," 'rod-strickland-1',\n"," 'kevin-edwards-1',\n"," 'mark-bryant-1',\n"," 'randolph-keys-1',\n"," 'jerome-lane-1',\n"," 'brian-shaw-1',\n"," 'david-rivers-1',\n"," 'rolando-ferreira-1',\n"," 'shelton-jones-1',\n"," 'andrew-lang-1',\n"," 'vinny-del-negro-1',\n"," 'fennis-dembo-1',\n"," 'everette-stephens-1',\n"," 'charles-shackleford-1',\n"," 'grant-long-1',\n"," 'tom-tolbert-1',\n"," 'sylvester-gray-1',\n"," 'ledell-eackles-1',\n"," 'greg-butler-1',\n"," 'dean-garrett-1',\n"," 'tito-horford-1',\n"," 'orlando-graham-1',\n"," 'keith-smart-1',\n"," 'jeff-moe-1',\n"," 'todd-mitchell-1',\n"," 'anthony-taylor-1',\n"," 'tom-garrick-1',\n"," 'morlon-wiley-1',\n"," 'vernon-maxwell-1',\n"," 'micheal-williams-1',\n"," 'jose-vargas-1',\n"," 'steve-kerr-1',\n"," 'rob-lock-1',\n"," 'derrick-hamilton-1',\n"," 'anthony-mason-1',\n"," 'rodney-johns-1',\n"," 'barry-sumpter-1',\n"," 'hernan-montenegro-1',\n"," 'jeff-moore-1',\n"," 'nate-johnston-1',\n"," 'ed-davender-1',\n"," 'pervis-ellison-1',\n"," 'danny-ferry-1',\n"," 'sean-elliott-1',\n"," 'glen-rice-1',\n"," 'jr-reid-1',\n"," 'stacey-king-1',\n"," 'george-mccloud-1',\n"," 'randy-white-1',\n"," 'tom-hammonds-1',\n"," 'pooh-richardson-1',\n"," 'nick-anderson-1',\n"," 'mookie-blaylock-1',\n"," 'michael-smith-1',\n"," 'tim-hardaway-1',\n"," 'todd-lichti-1',\n"," 'dana-barros-1',\n"," 'shawn-kemp-1',\n"," 'bj-armstrong-1',\n"," 'kenny-payne-1',\n"," 'jeff-sanders-1',\n"," 'blue-edwards-1',\n"," 'byron-irvin-1',\n"," 'roy-marble-1',\n"," 'anthony-cook-1',\n"," 'john-morton-1',\n"," 'kenny-battle-1',\n"," 'sherman-douglas-1',\n"," 'dyron-nix-1',\n"," 'frank-kornet-1',\n"," 'jeff-martin-1',\n"," 'stanley-brundy-1',\n"," 'jay-edwards-1',\n"," 'gary-leonard-1',\n"," 'pat-durham-1',\n"," 'clifford-robinson-1',\n"," 'michael-ansley-1',\n"," 'doug-west-1',\n"," 'ed-horton-1',\n"," 'doug-roth-1',\n"," 'michael-cutright-1',\n"," 'chucky-brown-1',\n"," 'reggie-cross-1',\n"," 'scott-haffner-1',\n"," 'ricky-blanton-1',\n"," 'reggie-turner-1',\n"," 'junie-lewis-1',\n"," 'haywoode-workman-1',\n"," 'brian-quinnett-1',\n"," 'mike-morrison-1',\n"," 'greg-grant-1',\n"," 'jeff-hodge-1',\n"," 'toney-mack-1',\n"," 'derrick-coleman-1',\n"," 'gary-payton-1',\n"," 'mahmoud-abdul-rauf-1',\n"," 'dennis-scott-1',\n"," 'kendall-gill-1',\n"," 'felton-spencer-1',\n"," 'lionel-simmons-1',\n"," 'bo-kimble-1',\n"," 'willie-burton-1',\n"," 'rumeal-robinson-1',\n"," 'tyrone-hill-1',\n"," 'alec-kessler-1',\n"," 'loy-vaught-1',\n"," 'travis-mays-1',\n"," 'dave-jamerson-1',\n"," 'terry-mills-1',\n"," 'jerrod-mustaf-1',\n"," 'duane-causwell-1',\n"," 'dee-brown-1',\n"," 'gerald-glass-1',\n"," 'jayson-williams-1',\n"," 'tate-george-1',\n"," 'anthony-bonner-1',\n"," 'dwayne-schintzius-1',\n"," 'alaa-abdelnaby-1',\n"," 'lance-blanks-1',\n"," 'elden-campbell-1',\n"," 'les-jepsen-1',\n"," 'carl-herrera-1',\n"," 'negele-knight-1',\n"," 'brian-oliver-1',\n"," 'walter-palmer-1',\n"," 'kevin-pritchard-1',\n"," 'greg-foster-1',\n"," 'trevor-wilson-1',\n"," 'aj-english-1',\n"," 'jud-buechler-1',\n"," 'steve-scheffler-1',\n"," 'bimbo-coles-1',\n"," 'steve-bardo-1',\n"," 'marcus-liberty-1',\n"," 'tony-massenburg-1',\n"," 'steve-henson-1',\n"," 'antonio-davis-1',\n"," 'kenny-williams-1',\n"," 'derek-strong-1',\n"," 'cedric-ceballos-1',\n"," 'phil-henderson-1',\n"," 'milos-babic-1',\n"," 'tony-smith-1',\n"," 'abdul-shamsid-deen-1',\n"," 'sean-higgins-1',\n"," 'larry-johnson-1',\n"," 'kenny-anderson-1',\n"," 'billy-owens-1',\n"," 'dikembe-mutombo-1',\n"," 'steve-smith-1',\n"," 'doug-smith-1',\n"," 'luc-longley-1',\n"," 'mark-macon-1',\n"," 'stacey-augmon-1',\n"," 'bison-dele-1',\n"," 'terrell-brandon-1',\n"," 'greg-anthony-1',\n"," 'dale-davis-1',\n"," 'rich-king-1',\n"," 'anthony-avent-1',\n"," 'chris-gatling-1',\n"," 'victor-alexander-1',\n"," 'kevin-brooks-1',\n"," 'labradford-smith-1',\n"," 'john-turner-1',\n"," 'eric-murdock-1',\n"," 'leron-ellis-1',\n"," 'stanley-roberts-1',\n"," 'rick-fox-1',\n"," 'shaun-vandiver-1',\n"," 'mark-randall-1',\n"," 'pete-chilcutt-1',\n"," 'kevin-lynch-1',\n"," 'george-ackles-1',\n"," 'rodney-monroe-1',\n"," 'randy-brown-1',\n"," 'chad-gallagher-1',\n"," 'donald-hodge-1',\n"," 'myron-brown-1',\n"," 'mike-iuzzolino-1',\n"," 'chris-corchiani-1',\n"," 'elliot-perry-1',\n"," 'joe-wylie-1',\n"," 'jimmy-oliver-1',\n"," 'doug-overton-1',\n"," 'sean-green-1',\n"," 'steve-hood-1',\n"," 'lamont-strothers-1',\n"," 'alvaro-teheran-1',\n"," 'bobby-phills-1',\n"," 'richard-dumas-1',\n"," 'keith-hughes-1',\n"," 'isaac-austin-1',\n"," 'greg-sutton-1',\n"," 'joey-wright-1',\n"," 'anthony-jones-1',\n"," 'von-mcdade-1',\n"," 'marcus-kennedy-1',\n"," 'shaquille-oneal-1',\n"," 'alonzo-mourning-1',\n"," 'christian-laettner-1',\n"," 'jim-jackson-1',\n"," 'laphonso-ellis-1',\n"," 'tom-gugliotta-1',\n"," 'walt-williams-1',\n"," 'todd-day-1',\n"," 'clarence-weatherspoon-1',\n"," 'adam-keefe-1',\n"," 'robert-horry-1',\n"," 'harold-miner-1',\n"," 'bryant-stith-1',\n"," 'malik-sealy-1',\n"," 'anthony-peeler-1',\n"," 'randy-woods-1',\n"," 'doug-christie-1',\n"," 'tracy-murray-1',\n"," 'don-maclean-1',\n"," 'hubert-davis-1',\n"," 'jon-barry-1',\n"," 'oliver-miller-1',\n"," 'lee-mayberry-1',\n"," 'latrell-sprewell-1',\n"," 'elmore-spencer-1',\n"," 'dave-johnson-1',\n"," 'byron-houston-1',\n"," 'marlon-maxey-1',\n"," 'pj-brown-1',\n"," 'sean-rooks-1',\n"," 'reggie-smith-1',\n"," 'brent-price-1',\n"," 'corey-williams-1',\n"," 'chris-smith-1',\n"," 'tony-bennett-1',\n"," 'duane-cooper-1',\n"," 'isaiah-morris-1',\n"," 'elmer-bennett-1',\n"," 'litterial-green-1',\n"," 'steve-rogers-1',\n"," 'popeye-jones-1',\n"," 'matt-geiger-1',\n"," 'henry-williams-1',\n"," 'chris-king-1',\n"," 'robert-werdann-1',\n"," 'darren-morningstar-1',\n"," 'brian-davis-1',\n"," 'ron-ellis-1',\n"," 'matt-fish-1',\n"," 'tim-burroughs-1',\n"," 'matt-steigenga-1',\n"," 'curtis-blair-1',\n"," 'brett-roberts-1',\n"," 'chris-webber-1',\n"," 'shawn-bradley-1',\n"," 'anfernee-hardaway-1',\n"," 'jamal-mashburn-1',\n"," 'isaiah-rider-1',\n"," 'calbert-cheaney-1',\n"," 'bobby-hurley-1',\n"," 'vin-baker-1',\n"," 'rodney-rogers-1',\n"," 'lindsey-hunter-1',\n"," 'allan-houston-1',\n"," 'george-lynch-1',\n"," 'terry-dehere-1',\n"," 'scott-haskin-1',\n"," 'doug-edwards-1',\n"," 'rex-walters-1',\n"," 'greg-graham-1',\n"," 'luther-wright-1',\n"," 'acie-earl-1',\n"," 'scott-burrell-1',\n"," 'james-robinson-1',\n"," 'chris-mills-1',\n"," 'ervin-johnson-1',\n"," 'sam-cassell-1',\n"," 'corie-blount-1',\n"," 'geert-hammink-1',\n"," 'malcolm-mackey-1',\n"," 'lucious-harris-1',\n"," 'sherron-mills-1',\n"," 'evers-burns-1',\n"," 'alphonso-ford-1',\n"," 'eric-riley-1',\n"," 'darnell-mee-1',\n"," 'ed-stokes-1',\n"," 'john-best-1',\n"," 'nick-van-exel-1',\n"," 'conrad-mcrae-1',\n"," 'thomas-hill-1',\n"," 'rich-manning-1',\n"," 'anthony-reed-1',\n"," 'adonis-jordan-1',\n"," 'josh-grant-1',\n"," 'alex-holcombe-1',\n"," 'bryon-russell-1',\n"," 'richard-petruska-1',\n"," 'chris-whitney-1',\n"," 'kevin-thompson-1',\n"," 'mark-buford-1',\n"," 'spencer-dunkley-1',\n"," 'mike-peplowski-1',\n"," 'leonard-white-1',\n"," 'byron-wilson-1',\n"," 'glenn-robinson-1',\n"," 'jason-kidd-1',\n"," 'grant-hill-1',\n"," 'donyell-marshall-1',\n"," 'juwan-howard-1',\n"," 'sharone-wright-1',\n"," 'lamond-murray-1',\n"," 'brian-grant-1',\n"," 'eric-montross-1',\n"," 'eddie-jones-1',\n"," 'carlos-rogers-1',\n"," 'khalid-reeves-1',\n"," 'jalen-rose-1',\n"," 'yinka-dare-1',\n"," 'eric-piatkowski-1',\n"," 'clifford-rozier-1',\n"," 'aaron-mckie-1',\n"," 'eric-mobley-1',\n"," 'tony-dumas-1',\n"," 'bj-tyler-1',\n"," 'dickey-simpkins-1',\n"," 'bill-curley-1',\n"," 'wesley-person-1',\n"," 'monty-williams-1',\n"," 'greg-minor-1',\n"," 'charlie-ward-1',\n"," 'brooks-thompson-1',\n"," 'deon-thomas-1',\n"," 'antonio-lang-1',\n"," 'howard-eisley-1',\n"," 'rodney-dent-1',\n"," 'jim-mcilvaine-1',\n"," 'derrick-alston-1',\n"," 'gaylon-nickerson-1',\n"," 'michael-smith-1',\n"," 'dontonio-wingfield-1',\n"," 'darrin-hancock-1',\n"," 'anthony-miller-1',\n"," 'jeff-webster-1',\n"," 'gary-collier-1',\n"," 'shawnelle-scott-1',\n"," 'damon-bailey-1',\n"," 'dwayne-morton-1',\n"," 'voshon-lenard-1',\n"," 'jamie-watson-1',\n"," 'jevon-crudup-1',\n"," 'kris-bruton-1',\n"," 'charles-claxton-1',\n"," 'lawrence-funderburke-1',\n"," 'anthony-goldwire-1',\n"," 'albert-burditt-1',\n"," 'joe-smith-1',\n"," 'antonio-mcdyess-1',\n"," 'jerry-stackhouse-1',\n"," 'rasheed-wallace-1',\n"," 'bryant-reeves-1',\n"," 'damon-stoudamire-1',\n"," 'shawn-respert-1',\n"," 'ed-obannon-1',\n"," 'kurt-thomas-1',\n"," 'gary-trent-1',\n"," 'cherokee-parks-1',\n"," 'corliss-williamson-1',\n"," 'eric-williams-1',\n"," 'brent-barry-1',\n"," 'alan-henderson-1',\n"," 'bob-sura-1',\n"," 'theo-ratliff-1',\n"," 'randolph-childress-1',\n"," 'jason-caffey-1',\n"," 'michael-finley-1',\n"," 'george-zidek-1',\n"," 'travis-best-1',\n"," 'loren-meyer-1',\n"," 'david-vaughn-1',\n"," 'sherell-ford-1',\n"," 'mario-bennett-1',\n"," 'greg-ostertag-1',\n"," 'cory-alexander-1',\n"," 'lou-roe-1',\n"," 'terrence-rencher-1',\n"," 'junior-burrough-1',\n"," 'andrew-declercq-1',\n"," 'jimmy-king-1',\n"," 'lawrence-moten-1',\n"," 'frankie-king-1',\n"," 'rashard-griffith-1',\n"," 'donny-marshall-1',\n"," 'dwayne-whitfield-1',\n"," 'erik-meek-1',\n"," 'donnie-boyce-1',\n"," 'eric-snow-1',\n"," 'anthony-pelle-1',\n"," 'troy-brown-1',\n"," 'george-banks-1',\n"," 'tyus-edney-1',\n"," 'mark-davis-1',\n"," 'jerome-allen-1',\n"," 'martin-lewis-1',\n"," 'fred-hoiberg-1',\n"," 'constantin-popa-1',\n"," 'michael-mcdonald-1',\n"," 'chris-carr-1',\n"," 'cuonzo-martin-1',\n"," 'don-reid-1',\n"," 'allen-iverson-1',\n"," 'marcus-camby-1',\n"," 'shareef-abdur-rahim-1',\n"," 'stephon-marbury-1',\n"," 'ray-allen-1',\n"," 'antoine-walker-1',\n"," 'lorenzen-wright-1',\n"," 'kerry-kittles-1',\n"," 'samaki-walker-1',\n"," 'erick-dampier-1',\n"," 'todd-fuller-1',\n"," 'vitaly-potapenko-1',\n"," 'steve-nash-1',\n"," 'tony-delk-1',\n"," 'john-wallace-1',\n"," 'walter-mccarty-1',\n"," 'dontae-jones-1',\n"," 'roy-rogers-1',\n"," 'derek-fisher-1',\n"," 'jerome-williams-1',\n"," 'brian-evans-1',\n"," 'priest-lauderdale-1',\n"," 'travis-knight-1',\n"," 'othella-harrington-1',\n"," 'mark-hendrickson-1',\n"," 'ryan-minor-1',\n"," 'moochie-norris-1',\n"," 'shawn-harvey-1',\n"," 'joseph-blair-1',\n"," 'doron-sheffer-1',\n"," 'jeff-mcinnis-1',\n"," 'steve-hamer-1',\n"," 'russ-millard-1',\n"," 'marcus-mann-1',\n"," 'jason-sasser-1',\n"," 'randy-livingston-1',\n"," 'ben-davis-1',\n"," 'malik-rose-1',\n"," 'joe-vogel-1',\n"," 'marcus-brown-1',\n"," 'ron-riley-1',\n"," 'jamie-feick-1',\n"," 'amal-mccaskill-1',\n"," 'terrell-bell-1',\n"," 'chris-robinson-1',\n"," 'mark-pope-1',\n"," 'jeff-nordgaard-1',\n"," 'shandon-anderson-1',\n"," 'ronnie-henderson-1',\n"," 'reggie-geary-1',\n"," 'drew-barry-1',\n"," 'darnell-robinson-1',\n"," 'tim-duncan-1',\n"," 'keith-van-horn-1',\n"," 'chauncey-billups-1',\n"," 'antonio-daniels-1',\n"," 'tony-battie-1',\n"," 'ron-mercer-1',\n"," 'tim-thomas-1',\n"," 'adonal-foyle-1',\n"," 'danny-fortson-1',\n"," 'tariq-abdul-wahad-1',\n"," 'austin-croshere-1',\n"," 'derek-anderson-1',\n"," 'maurice-taylor-1',\n"," 'kelvin-cato-1',\n"," 'brevin-knight-1',\n"," 'johnny-taylor-1',\n"," 'scot-pollard-1',\n"," 'paul-grant-1',\n"," 'anthony-parker-1',\n"," 'ed-gray-1',\n"," 'bobby-jackson-1',\n"," 'rodrick-rhodes-1',\n"," 'john-thomas-1',\n"," 'charles-smith-1',\n"," 'jacque-vaughn-1',\n"," 'keith-booth-1',\n"," 'serge-zwikker-1',\n"," 'mark-sanford-1',\n"," 'charles-obannon-1',\n"," 'james-cotton-1',\n"," 'bubba-wells-1',\n"," 'kebu-stewart-1',\n"," 'james-collins-1',\n"," 'marc-jackson-1',\n"," 'jerald-honeycutt-1',\n"," 'anthony-johnson-1',\n"," 'eddie-elisma-1',\n"," 'jason-lawson-1',\n"," 'stephen-jackson-1',\n"," 'gordon-malone-1',\n"," 'cedric-henderson-1',\n"," 'god-shammgod-1',\n"," 'eric-washington-1',\n"," 'alvin-williams-1',\n"," 'chris-crawford-1',\n"," 'dejuan-wheat-1',\n"," 'cj-bruton-1',\n"," ...]"]},"metadata":{},"execution_count":48}],"source":["player_links # for the iteration of the college stats\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":360,"status":"ok","timestamp":1717870628031,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"RPuGuk49vH8n","outputId":"1867d478-4dfb-4c1d-e1d6-756c08211a0a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Chunks: [['joe-barry-carroll-1', 'darrell-griffith-1', 'kevin-mchale-1', 'kelvin-ransey-1', 'james-ray-1', 'mike-okoren-1', 'mike-gminski-1', 'andrew-toney-1', 'michael-brooks-1', 'ronnie-lester-1', 'kiki-vandeweghe-1', 'mike-woodson-1', 'rickey-brown-1', 'wes-matthews-1', 'reggie-johnson-1', 'hawkeye-whitney-1', 'larry-drew-1', 'don-collins-1', 'john-duren-1', 'bill-hanzlik-1'], ['monti-davis-1', 'chad-kinch-1', 'carl-nicks-1', 'larry-smith-1', 'jeff-ruland-1', 'sam-worthen-1', 'john-stroud-1', 'craig-shelton-1', 'louis-orr-1', 'kenny-natt-1', 'wayne-robinson-1', 'david-lawrence-1', 'bruce-collins-1', 'roosevelt-bouie-1', 'rick-mahorn-1', 'dewayne-scales-1', 'butch-carter-1', 'terry-stotts-1', 'michael-wiley-1', 'dick-miller-1'], ['jawann-oldham-1', 'kimberly-belton-1', 'billy-williams-1', 'clyde-austin-1', 'brad-branson-1', 'arnette-hallman-1', 'kurt-nimphius-1', 'eddie-lee-1', 'john-virgil-1', 'james-wilkes-1', 'ronnie-valentine-1', 'lowes-moore-1', 'stuart-house-1', 'ron-perry-1', 'wayne-abrams-1', 'mike-harper-1', 'dave-britton-1', 'kurt-rambis-1', 'john-campbell-1', 'lavon-mercer-1'], ['mark-aguirre-1', 'isiah-thomas-1', 'buck-williams-1', 'al-wood-1', 'danny-vranes-1', 'orlando-woolridge-1', 'steve-johnson-1', 'tom-chambers-1', 'rolando-blackman-1', 'albert-king-1', 'frank-johnson-1', 'kelly-tripucka-1', 'danny-schayes-1', 'herb-williams-1', 'jeff-lamp-1', 'darnell-valentine-1', 'kevin-loder-1', 'ray-tolbert-1', 'mike-mcgee-1', 'larry-nance-1'], ['alton-lister-1', 'franklin-edwards-1', 'charles-bradley-1', 'jay-vincent-1', 'tracy-jackson-1', 'brian-jackson-1', 'howard-wood-1', 'gene-banks-1', 'eddie-johnson-1', 'ed-rains-1', 'danny-ainge-1', 'mike-olliver-1', 'sam-williams-1', 'ken-green-1', 'charles-davis-1', 'ray-blume-1', 'al-leslie-1', 'clyde-bradshaw-1', 'harvey-knuckles-1', 'greg-cook-1'], ['claude-gregory-1', 'elvis-rolle-1', 'elston-turner-1', 'steve-lingenfelter-1', 'vernon-smith-1', 'art-housey-1', 'mike-ferrara-1', 'david-burns-1', 'derek-holcomb-1', 'zam-fredrick-1', 'rudy-macklin-1', 'mark-radford-1', 'jim-smith-1', 'mickey-dillard-1', 'carlton-neverson-1', 'frank-brickowski-1', 'curtis-berry-1', 'russell-bowers-1', 'purvis-miller-1', 'james-worthy-1'], ['terry-cummings-1', 'dominique-wilkins-1', 'bill-garnett-1', 'lasalle-thompson-1', 'trent-tucker-1', 'quintin-dailey-1', 'clark-kellogg-1', 'cliff-levingston-1', 'keith-edmonson-1', 'fat-lever-1', 'john-bagley-1', 'sleepy-floyd-1', 'lester-conner-1', 'david-thirdkill-1', 'terry-teagle-1', 'brook-steppe-1', 'ricky-pierce-1', 'rob-williams-1', 'paul-pressey-1', 'eddie-phillips-1'], ['mark-mcnamara-1', 'darren-tillis-1', 'oliver-robinson-1', 'bryan-warrick-1', 'ricky-frazier-1', 'fred-roberts-1', 'dave-magley-1', 'scott-hastings-1', 'wallace-bryant-1', 'rod-higgins-1', 'richard-anderson-1', 'linton-townes-1', 'vince-taylor-1', 'derek-smith-1', 'jj-anderson-1', 'audie-norris-1', 'wayne-sappleton-1', 'kevin-magee-1', 'guy-morgan-1', 'dwight-anderson-1'], ['jeff-taylor-1', 'jose-slaughter-1', 'mike-gibson-1', 'russ-schoene-1', 'tony-guy-1', 'michael-wilson-1', 'craig-hodges-1', 'steve-trumbo-1', 'corny-thompson-1', 'jim-johnstone-1', 'dan-caldwell-1', 'tyrone-adams-1', 'hutch-jones-1', 'jerry-eaves-1', 'joe-kopicki-1', 'craig-tucker-1', 'mike-largey-1', 'jimmy-black-1', 'chris-engler-1', 'ralph-sampson-1'], ['steve-stipanovich-1', 'rodney-mccray-1', 'byron-scott-1', 'sidney-green-1', 'russell-cross-1', 'thurl-bailey-1', 'antoine-carr-1', 'dale-ellis-1', 'jeff-malone-1', 'derek-harper-1', 'darrell-walker-1', 'ennis-whatley-1', 'clyde-drexler-1', 'howard-carter-1', 'jon-sundvold-1', 'leo-rautins-1', 'randy-breuer-1', 'john-paxson-1', 'roy-hinson-1', 'greg-kite-1'], ['randy-wittman-1', 'mitchell-wiggins-1', 'stewart-granger-1', 'sidney-lowe-1', 'leroy-combs-1', 'john-garris-1', 'rod-foster-1', 'larry-micheaux-1', 'mark-west-1', 'doc-rivers-1', 'michael-britt-1', 'dirk-minniefield-1', 'guy-williams-1', 'darrell-lockhart-1', 'scooter-mccray-1', 'david-russell-1', 'chris-mcnealy-1', 'granville-waiters-1', 'jim-thomas-1', 'ted-kitchel-1'], ['mike-davis-1', 'pace-mannion-1', 'horace-owens-1', 'paul-williams-1', 'kevin-williams-1', 'ken-lyons-1', 'craig-ehlo-1', 'greg-jones-1', 'paul-thompson-1', 'dereck-whittenburg-1', 'winfred-king-1', 'michael-holton-1', 'bob-hansen-1', 'erich-santifer-1', 'larry-anderson-1', 'darren-daye-1', 'john-pinone-1', 'bruce-kuczenski-1', 'steve-harriel-1', 'hakeem-olajuwon-1'], ['sam-bowie-1', 'michael-jordan-1', 'sam-perkins-1', 'charles-barkley-1', 'melvin-turpin-1', 'alvin-robertson-1', 'lancaster-gordon-1', 'otis-thorpe-1', 'leon-wood-1', 'kevin-willis-1', 'tim-mccormick-1', 'jay-humphries-1', 'michael-cage-1', 'terence-stansbury-1', 'john-stockton-1', 'jeff-turner-1', 'vern-fleming-1', 'bernard-thompson-1', 'tony-campbell-1', 'kenny-fields-1'], ['tom-sewell-1', 'earl-jones-1', 'michael-young-1', 'devin-durrant-1', 'victor-fleming-1', 'ron-anderson-1', 'cory-blackwell-1', 'stuart-gray-1', 'steve-burtt-1', 'jay-murphy-1', 'eric-turner-1', 'steve-colter-1', 'tony-costner-1', 'othell-wilson-1', 'charles-jones-1', 'ben-coleman-1', 'charlie-sitton-1', 'danny-young-1', 'anthony-teachey-1', 'tom-sluby-1'], ['willie-white-1', 'greg-wiltjer-1', 'fred-reynolds-1', 'gary-plummer-1', 'jerome-kersey-1', 'ronnie-williams-1', 'james-banks-1', 'tim-dillon-1', 'ben-mcdonald-1', 'jim-petersen-1', 'terry-williams-1', 'ricky-ross-1', 'roosevelt-chapman-1', 'lewis-jackson-1', 'jeff-allen-1', 'joe-binion-1', 'bobby-parks-1', 'murray-jarman-1', 'leonard-mitchell-1', 'patrick-ewing-1'], ['wayman-tisdale-1', 'benoit-benjamin-1', 'xavier-mcdaniel-1', 'jon-koncak-1', 'joe-kleine-1', 'chris-mullin-1', 'detlef-schrempf-1', 'charles-oakley-1', 'ed-pinckney-1', 'keith-lee-1', 'kenny-green-1', 'karl-malone-1', 'alfredrick-hughes-1', 'blair-rasmussen-1', 'bill-wennington-1', 'uwe-blab-1', 'joe-dumars-1', 'steve-harris-1', 'sam-vincent-1', 'terry-catledge-1'], ['jerry-reynolds-1', 'ac-green-1', 'terry-porter-1', 'mike-smrek-1', 'bill-martin-1', 'dwayne-mcclain-1', 'ken-johnson-1', 'mike-brittain-1', 'calvin-duncan-1', 'manute-bol-1', 'nick-vanos-1', 'greg-stokes-1', 'aubrey-sherrod-1', 'tyrone-corbin-1', 'yvon-joseph-1', 'carey-scurry-1', 'george-montgomery-1', 'mark-acres-1', 'lorenzo-charles-1', 'bobby-lee-hurt-1'], ['barry-stevens-1', 'voise-winters-1', 'hot-rod-williams-1', 'adrian-branch-1', 'gerald-wilkins-1', 'kenny-patterson-1', 'brad-wright-1', 'leonard-allen-1', 'charles-bradley-1', 'anicet-lavodrama-1', 'rolando-lamb-1', 'sam-mitchell-1', 'herb-johnson-1', 'jerry-everett-1', 'michael-payne-1', 'vernon-moore-1', 'sedric-toney-1', 'andre-goode-1', 'brad-daugherty-1', 'len-bias-1'], ['chris-washburn-1', 'chuck-person-1', 'kenny-walker-1', 'william-bedford-1', 'roy-tarpley-1', 'ron-harper-1', 'brad-sellers-1', 'johnny-dawkins-1', 'john-salley-1', 'john-williams-1', 'pearl-washington-1', 'walter-berry-1', 'dell-curry-1', 'maurice-martin-1', 'harold-pressley-1', 'mark-alarie-1', 'billy-thompson-1', 'buck-johnson-1', 'anthony-jones-1', 'scott-skiles-1'], ['ken-barlow-1', 'mark-price-1', 'greg-dreiling-1', 'dennis-rodman-1', 'larry-krystkowiak-1', 'johnny-newman-1', 'nate-mcmillan-1', 'joe-ward-1', 'cedric-henderson-1', 'kevin-duckworth-1', 'johnny-rogers-1', 'milt-wagner-1', 'steve-mitchell-1', 'panagiotis-fasoulas-1', 'lemone-lampley-1', 'rafael-addison-1', 'otis-smith-1', 'ron-kellogg-1', 'dave-feitl-1', 'david-wingate-1'], ['keith-smith-1', 'jeff-hornacek-1', 'michael-jackson-1', 'forrest-mckenzie-1', 'juden-smith-1', 'kevin-henderson-1', 'mike-williams-1', 'ricky-wilson-1', 'tod-murphy-1', 'dwayne-polee-1', 'kenny-gattison-1', 'keith-colbert-1', 'bruce-douglas-1', 'dave-henderson-1', 'wendell-alexis-1', 'david-robinson-1', 'armen-gilliam-1', 'dennis-hopson-1', 'reggie-williams-1', 'scottie-pippen-1'], ['kenny-smith-1', 'kevin-johnson-1', 'olden-polynice-1', 'derrick-mckey-1', 'horace-grant-1', 'reggie-miller-1', 'muggsy-bogues-1', 'joe-wolf-1', 'tellis-frank-1', 'jose-ortiz-1', 'chris-welp-1', 'ronnie-murphy-1', 'mark-jackson-1', 'ken-norman-1', 'jim-farmer-1', 'dallas-comegys-1', 'reggie-lewis-1', 'greg-anderson-1', 'freddie-banks-1', 'ron-moore-1'], ['steve-alford-1', 'nate-blackwell-1', 'rickie-winslow-1', 'lester-fonville-1', 'nikita-wilson-1', 'andre-moore-1', 'bob-mccann-1', 'tony-white-1', 'brian-rowsom-1', 'doug-lee-1', 'duane-washington-1', 'derrick-dowell-1', 'norris-coleman-1', 'vincent-askew-1', 'winston-garland-1', 'kannard-johnson-1', 'terrance-bailey-1', 'andrew-kennedy-1', 'terry-coner-1', 'brad-lohaus-1'], ['bruce-dalrymple-1', 'tim-mccalister-1', 'jamie-waller-1', 'jerome-batiste-1', 'phil-zevenbergen-1', 'sven-meyer-1', 'donald-royal-1', 'winston-crite-1', 'tom-schafer-1', 'tommy-amaker-1', 'john-fox-1', 'hansi-gnad-1', 'darryl-johnson-1', 'danny-pearson-1', 'sean-couch-1', 'danny-manning-1', 'rik-smits-1', 'charles-smith-1', 'chris-morris-1', 'mitch-richmond-1'], ['hersey-hawkins-1', 'tim-perry-1', 'rex-chapman-1', 'rony-seikaly-1', 'willie-anderson-1', 'will-perdue-1', 'harvey-grant-1', 'jeff-grayer-1', 'dan-majerle-1', 'gary-grant-1', 'derrick-chievous-1', 'eric-leckner-1', 'ricky-berry-1', 'rod-strickland-1', 'kevin-edwards-1', 'mark-bryant-1', 'randolph-keys-1', 'jerome-lane-1', 'brian-shaw-1', 'david-rivers-1'], ['rolando-ferreira-1', 'shelton-jones-1', 'andrew-lang-1', 'vinny-del-negro-1', 'fennis-dembo-1', 'everette-stephens-1', 'charles-shackleford-1', 'grant-long-1', 'tom-tolbert-1', 'sylvester-gray-1', 'ledell-eackles-1', 'greg-butler-1', 'dean-garrett-1', 'tito-horford-1', 'orlando-graham-1', 'keith-smart-1', 'jeff-moe-1', 'todd-mitchell-1', 'anthony-taylor-1', 'tom-garrick-1'], ['morlon-wiley-1', 'vernon-maxwell-1', 'micheal-williams-1', 'jose-vargas-1', 'steve-kerr-1', 'rob-lock-1', 'derrick-hamilton-1', 'anthony-mason-1', 'rodney-johns-1', 'barry-sumpter-1', 'hernan-montenegro-1', 'jeff-moore-1', 'nate-johnston-1', 'ed-davender-1', 'pervis-ellison-1', 'danny-ferry-1', 'sean-elliott-1', 'glen-rice-1', 'jr-reid-1', 'stacey-king-1'], ['george-mccloud-1', 'randy-white-1', 'tom-hammonds-1', 'pooh-richardson-1', 'nick-anderson-1', 'mookie-blaylock-1', 'michael-smith-1', 'tim-hardaway-1', 'todd-lichti-1', 'dana-barros-1', 'shawn-kemp-1', 'bj-armstrong-1', 'kenny-payne-1', 'jeff-sanders-1', 'blue-edwards-1', 'byron-irvin-1', 'roy-marble-1', 'anthony-cook-1', 'john-morton-1', 'kenny-battle-1'], ['sherman-douglas-1', 'dyron-nix-1', 'frank-kornet-1', 'jeff-martin-1', 'stanley-brundy-1', 'jay-edwards-1', 'gary-leonard-1', 'pat-durham-1', 'clifford-robinson-1', 'michael-ansley-1', 'doug-west-1', 'ed-horton-1', 'doug-roth-1', 'michael-cutright-1', 'chucky-brown-1', 'reggie-cross-1', 'scott-haffner-1', 'ricky-blanton-1', 'reggie-turner-1', 'junie-lewis-1'], ['haywoode-workman-1', 'brian-quinnett-1', 'mike-morrison-1', 'greg-grant-1', 'jeff-hodge-1', 'toney-mack-1', 'derrick-coleman-1', 'gary-payton-1', 'mahmoud-abdul-rauf-1', 'dennis-scott-1', 'kendall-gill-1', 'felton-spencer-1', 'lionel-simmons-1', 'bo-kimble-1', 'willie-burton-1', 'rumeal-robinson-1', 'tyrone-hill-1', 'alec-kessler-1', 'loy-vaught-1', 'travis-mays-1'], ['dave-jamerson-1', 'terry-mills-1', 'jerrod-mustaf-1', 'duane-causwell-1', 'dee-brown-1', 'gerald-glass-1', 'jayson-williams-1', 'tate-george-1', 'anthony-bonner-1', 'dwayne-schintzius-1', 'alaa-abdelnaby-1', 'lance-blanks-1', 'elden-campbell-1', 'les-jepsen-1', 'carl-herrera-1', 'negele-knight-1', 'brian-oliver-1', 'walter-palmer-1', 'kevin-pritchard-1', 'greg-foster-1'], ['trevor-wilson-1', 'aj-english-1', 'jud-buechler-1', 'steve-scheffler-1', 'bimbo-coles-1', 'steve-bardo-1', 'marcus-liberty-1', 'tony-massenburg-1', 'steve-henson-1', 'antonio-davis-1', 'kenny-williams-1', 'derek-strong-1', 'cedric-ceballos-1', 'phil-henderson-1', 'milos-babic-1', 'tony-smith-1', 'abdul-shamsid-deen-1', 'sean-higgins-1', 'larry-johnson-1', 'kenny-anderson-1'], ['billy-owens-1', 'dikembe-mutombo-1', 'steve-smith-1', 'doug-smith-1', 'luc-longley-1', 'mark-macon-1', 'stacey-augmon-1', 'bison-dele-1', 'terrell-brandon-1', 'greg-anthony-1', 'dale-davis-1', 'rich-king-1', 'anthony-avent-1', 'chris-gatling-1', 'victor-alexander-1', 'kevin-brooks-1', 'labradford-smith-1', 'john-turner-1', 'eric-murdock-1', 'leron-ellis-1'], ['stanley-roberts-1', 'rick-fox-1', 'shaun-vandiver-1', 'mark-randall-1', 'pete-chilcutt-1', 'kevin-lynch-1', 'george-ackles-1', 'rodney-monroe-1', 'randy-brown-1', 'chad-gallagher-1', 'donald-hodge-1', 'myron-brown-1', 'mike-iuzzolino-1', 'chris-corchiani-1', 'elliot-perry-1', 'joe-wylie-1', 'jimmy-oliver-1', 'doug-overton-1', 'sean-green-1', 'steve-hood-1'], ['lamont-strothers-1', 'alvaro-teheran-1', 'bobby-phills-1', 'richard-dumas-1', 'keith-hughes-1', 'isaac-austin-1', 'greg-sutton-1', 'joey-wright-1', 'anthony-jones-1', 'von-mcdade-1', 'marcus-kennedy-1', 'shaquille-oneal-1', 'alonzo-mourning-1', 'christian-laettner-1', 'jim-jackson-1', 'laphonso-ellis-1', 'tom-gugliotta-1', 'walt-williams-1', 'todd-day-1', 'clarence-weatherspoon-1'], ['adam-keefe-1', 'robert-horry-1', 'harold-miner-1', 'bryant-stith-1', 'malik-sealy-1', 'anthony-peeler-1', 'randy-woods-1', 'doug-christie-1', 'tracy-murray-1', 'don-maclean-1', 'hubert-davis-1', 'jon-barry-1', 'oliver-miller-1', 'lee-mayberry-1', 'latrell-sprewell-1', 'elmore-spencer-1', 'dave-johnson-1', 'byron-houston-1', 'marlon-maxey-1', 'pj-brown-1'], ['sean-rooks-1', 'reggie-smith-1', 'brent-price-1', 'corey-williams-1', 'chris-smith-1', 'tony-bennett-1', 'duane-cooper-1', 'isaiah-morris-1', 'elmer-bennett-1', 'litterial-green-1', 'steve-rogers-1', 'popeye-jones-1', 'matt-geiger-1', 'henry-williams-1', 'chris-king-1', 'robert-werdann-1', 'darren-morningstar-1', 'brian-davis-1', 'ron-ellis-1', 'matt-fish-1'], ['tim-burroughs-1', 'matt-steigenga-1', 'curtis-blair-1', 'brett-roberts-1', 'chris-webber-1', 'shawn-bradley-1', 'anfernee-hardaway-1', 'jamal-mashburn-1', 'isaiah-rider-1', 'calbert-cheaney-1', 'bobby-hurley-1', 'vin-baker-1', 'rodney-rogers-1', 'lindsey-hunter-1', 'allan-houston-1', 'george-lynch-1', 'terry-dehere-1', 'scott-haskin-1', 'doug-edwards-1', 'rex-walters-1'], ['greg-graham-1', 'luther-wright-1', 'acie-earl-1', 'scott-burrell-1', 'james-robinson-1', 'chris-mills-1', 'ervin-johnson-1', 'sam-cassell-1', 'corie-blount-1', 'geert-hammink-1', 'malcolm-mackey-1', 'lucious-harris-1', 'sherron-mills-1', 'evers-burns-1', 'alphonso-ford-1', 'eric-riley-1', 'darnell-mee-1', 'ed-stokes-1', 'john-best-1', 'nick-van-exel-1'], ['conrad-mcrae-1', 'thomas-hill-1', 'rich-manning-1', 'anthony-reed-1', 'adonis-jordan-1', 'josh-grant-1', 'alex-holcombe-1', 'bryon-russell-1', 'richard-petruska-1', 'chris-whitney-1', 'kevin-thompson-1', 'mark-buford-1', 'spencer-dunkley-1', 'mike-peplowski-1', 'leonard-white-1', 'byron-wilson-1', 'glenn-robinson-1', 'jason-kidd-1', 'grant-hill-1', 'donyell-marshall-1'], ['juwan-howard-1', 'sharone-wright-1', 'lamond-murray-1', 'brian-grant-1', 'eric-montross-1', 'eddie-jones-1', 'carlos-rogers-1', 'khalid-reeves-1', 'jalen-rose-1', 'yinka-dare-1', 'eric-piatkowski-1', 'clifford-rozier-1', 'aaron-mckie-1', 'eric-mobley-1', 'tony-dumas-1', 'bj-tyler-1', 'dickey-simpkins-1', 'bill-curley-1', 'wesley-person-1', 'monty-williams-1'], ['greg-minor-1', 'charlie-ward-1', 'brooks-thompson-1', 'deon-thomas-1', 'antonio-lang-1', 'howard-eisley-1', 'rodney-dent-1', 'jim-mcilvaine-1', 'derrick-alston-1', 'gaylon-nickerson-1', 'michael-smith-1', 'dontonio-wingfield-1', 'darrin-hancock-1', 'anthony-miller-1', 'jeff-webster-1', 'gary-collier-1', 'shawnelle-scott-1', 'damon-bailey-1', 'dwayne-morton-1', 'voshon-lenard-1'], ['jamie-watson-1', 'jevon-crudup-1', 'kris-bruton-1', 'charles-claxton-1', 'lawrence-funderburke-1', 'anthony-goldwire-1', 'albert-burditt-1', 'joe-smith-1', 'antonio-mcdyess-1', 'jerry-stackhouse-1', 'rasheed-wallace-1', 'bryant-reeves-1', 'damon-stoudamire-1', 'shawn-respert-1', 'ed-obannon-1', 'kurt-thomas-1', 'gary-trent-1', 'cherokee-parks-1', 'corliss-williamson-1', 'eric-williams-1'], ['brent-barry-1', 'alan-henderson-1', 'bob-sura-1', 'theo-ratliff-1', 'randolph-childress-1', 'jason-caffey-1', 'michael-finley-1', 'george-zidek-1', 'travis-best-1', 'loren-meyer-1', 'david-vaughn-1', 'sherell-ford-1', 'mario-bennett-1', 'greg-ostertag-1', 'cory-alexander-1', 'lou-roe-1', 'terrence-rencher-1', 'junior-burrough-1', 'andrew-declercq-1', 'jimmy-king-1'], ['lawrence-moten-1', 'frankie-king-1', 'rashard-griffith-1', 'donny-marshall-1', 'dwayne-whitfield-1', 'erik-meek-1', 'donnie-boyce-1', 'eric-snow-1', 'anthony-pelle-1', 'troy-brown-1', 'george-banks-1', 'tyus-edney-1', 'mark-davis-1', 'jerome-allen-1', 'martin-lewis-1', 'fred-hoiberg-1', 'constantin-popa-1', 'michael-mcdonald-1', 'chris-carr-1', 'cuonzo-martin-1'], ['don-reid-1', 'allen-iverson-1', 'marcus-camby-1', 'shareef-abdur-rahim-1', 'stephon-marbury-1', 'ray-allen-1', 'antoine-walker-1', 'lorenzen-wright-1', 'kerry-kittles-1', 'samaki-walker-1', 'erick-dampier-1', 'todd-fuller-1', 'vitaly-potapenko-1', 'steve-nash-1', 'tony-delk-1', 'john-wallace-1', 'walter-mccarty-1', 'dontae-jones-1', 'roy-rogers-1', 'derek-fisher-1'], ['jerome-williams-1', 'brian-evans-1', 'priest-lauderdale-1', 'travis-knight-1', 'othella-harrington-1', 'mark-hendrickson-1', 'ryan-minor-1', 'moochie-norris-1', 'shawn-harvey-1', 'joseph-blair-1', 'doron-sheffer-1', 'jeff-mcinnis-1', 'steve-hamer-1', 'russ-millard-1', 'marcus-mann-1', 'jason-sasser-1', 'randy-livingston-1', 'ben-davis-1', 'malik-rose-1', 'joe-vogel-1'], ['marcus-brown-1', 'ron-riley-1', 'jamie-feick-1', 'amal-mccaskill-1', 'terrell-bell-1', 'chris-robinson-1', 'mark-pope-1', 'jeff-nordgaard-1', 'shandon-anderson-1', 'ronnie-henderson-1', 'reggie-geary-1', 'drew-barry-1', 'darnell-robinson-1', 'tim-duncan-1', 'keith-van-horn-1', 'chauncey-billups-1', 'antonio-daniels-1', 'tony-battie-1', 'ron-mercer-1', 'tim-thomas-1'], ['adonal-foyle-1', 'danny-fortson-1', 'tariq-abdul-wahad-1', 'austin-croshere-1', 'derek-anderson-1', 'maurice-taylor-1', 'kelvin-cato-1', 'brevin-knight-1', 'johnny-taylor-1', 'scot-pollard-1', 'paul-grant-1', 'anthony-parker-1', 'ed-gray-1', 'bobby-jackson-1', 'rodrick-rhodes-1', 'john-thomas-1', 'charles-smith-1', 'jacque-vaughn-1', 'keith-booth-1', 'serge-zwikker-1'], ['mark-sanford-1', 'charles-obannon-1', 'james-cotton-1', 'bubba-wells-1', 'kebu-stewart-1', 'james-collins-1', 'marc-jackson-1', 'jerald-honeycutt-1', 'anthony-johnson-1', 'eddie-elisma-1', 'jason-lawson-1', 'stephen-jackson-1', 'gordon-malone-1', 'cedric-henderson-1', 'god-shammgod-1', 'eric-washington-1', 'alvin-williams-1', 'chris-crawford-1', 'dejuan-wheat-1', 'cj-bruton-1'], ['paul-rogers-1', 'mark-blount-1', 'nate-erdmann-1', 'michael-olowokandi-1', 'mike-bibby-1', 'raef-lafrentz-1', 'antawn-jamison-1', 'vince-carter-1', 'robert-traylor-1', 'jason-williams-1', 'larry-hughes-1', 'paul-pierce-1', 'bonzi-wells-1', 'michael-doleac-1', 'keon-clark-1', 'michael-dickerson-1', 'matt-harpring-1', 'bryce-drew-1', 'pat-garrity-1', 'roshown-mcleod-1'], ['ricky-davis-1', 'brian-skinner-1', 'tyronn-lue-1', 'felipe-lopez-1', 'sam-jacobson-1', 'corey-benjamin-1', 'nazr-mohammed-1', 'ansu-sesay-1', 'ruben-patterson-1', 'jelani-mccoy-1', 'shammond-williams-1', 'jerome-james-1', 'casey-shaw-1', 'demarco-johnson-1', 'rafer-alston-1', 'cuttino-mobley-1', 'miles-simon-1', 'jahidi-white-1', 'sean-marks-1', 'toby-bailey-1'], ['andrae-patterson-1', 'tyson-wheeler-1', 'ryan-stack-1', 'cory-carr-1', 'andrew-betts-1', 'corey-brewer-1', 'derrick-dial-1', 'greg-buckner-1', 'tremaine-fowlkes-1', 'ryan-bowen-1', 'jr-henderson-1', 'torraye-braggs-1', 'maceo-baston-1', 'elton-brand-1', 'steve-francis-1', 'baron-davis-1', 'lamar-odom-1', 'wally-szczerbiak-1', 'richard-hamilton-1', 'andre-miller-1'], ['shawn-marion-1', 'jason-terry-1', 'trajan-langdon-1', 'aleksandar-radojevic-1', 'corey-maggette-1', 'william-avery-1', 'metta-world-peace-1', 'cal-bowdler-1', 'james-posey-1', 'quincy-lewis-1', 'dion-glover-1', 'jeff-foster-1', 'kenny-thomas-1', 'devean-george-1', 'tim-james-1', 'vonteego-cummings-1', 'jumaine-jones-1', 'scott-padgett-1', 'john-celestand-1', 'rico-hill-1'], ['michael-ruffin-1', 'chris-herren-1', 'evan-eschmeyer-1', 'calvin-booth-1', 'obinna-ekezie-1', 'laron-profit-1', 'aj-bramlett-1', 'francisco-elson-1', 'louis-bullock-1', 'lee-nailon-1', 'tyrone-washington-1', 'ryan-robertson-1', 'jr-koch-1', 'todd-macculloch-1', 'galen-young-1', 'lari-ketner-1', 'venson-hamilton-1', 'antwain-smith-1', 'roberto-bergersen-1', 'rodney-buford-1'], ['melvin-levett-1', 'kris-clack-1', 'tim-young-1', 'eddie-lucas-1', 'kenyon-martin-1', 'stromile-swift-1', 'marcus-fizer-1', 'mike-miller-1', 'dermarr-johnson-1', 'chris-mihm-1', 'jamal-crawford-1', 'joel-przybilla-1', 'keyon-dooling-1', 'jerome-moiso-1', 'etan-thomas-1', 'courtney-alexander-1', 'mateen-cleaves-1', 'jason-collier-1', 'desmond-mason-1', 'quentin-richardson-1'], ['jamaal-magloire-1', 'speedy-claxton-1', 'morris-peterson-1', 'donnell-harvey-1', 'mamadou-ndiaye-1', 'erick-barkley-1', 'mark-madsen-1', 'dan-langhi-1', 'aj-guyton-1', 'jake-voskuhl-1', 'khalid-el-amin-1', 'mike-smith-1', 'eddie-house-1', 'eduardo-najera-1', 'lavor-postell-1', 'hanno-mottola-1', 'chris-carrawell-1', 'michael-redd-1', 'brian-cardinal-1', 'jabari-smith-1'], ['deeandre-hulett-1', 'mark-karcher-1', 'jason-hart-1', 'kaniel-dickens-1', 'ernest-brown-1', 'dan-mcclintock-1', 'cory-hightower-1', 'chris-porter-1', 'jaquay-walls-1', 'scoonie-penn-1', 'pete-mickeal-1', 'jason-richardson-1', 'shane-battier-1', 'eddie-griffin-1', 'rodney-white-1', 'joe-johnson-1', 'kedrick-brown-1', 'richard-jefferson-1', 'troy-murphy-1', 'steven-hunter-1'], ['kirk-haston-1', 'michael-bradley-1', 'jason-collins-1', 'zach-randolph-1', 'brendan-haywood-1', 'joseph-forte-1', 'jeryl-sasser-1', 'brandon-armstrong-1', 'gerald-wallace-1', 'samuel-dalembert-1', 'jamaal-tinsley-1', 'trenton-hassell-1', 'gilbert-arenas-1', 'omar-cook-1', 'will-solomon-1', 'terence-morris-1', 'brian-scalabrine-1', 'jeff-trepagnier-1', 'damone-brown-1', 'michael-wright-1'], ['earl-watson-1', 'jamison-brewer-1', 'bobby-simmons-1', 'eric-chenowith-1', 'kyle-hill-1', 'sean-lampley-1', 'loren-woods-1', 'ken-johnson-1', 'ruben-boumtje-boumtje-1', 'alton-ford-1', 'andre-hutson-1', 'jarron-collins-1', 'kenny-satterfield-1', 'maurice-jeffers-1', 'alvin-jones-1', 'bryan-bracey-1', 'jay-williams-1', 'mike-dunleavy-1', 'drew-gooden-1', 'dajuan-wagner-1'], ['chris-wilcox-1', 'caron-butler-1', 'jared-jeffries-1', 'melvin-ely-1', 'marcus-haislip-1', 'fred-jones-1', 'juan-dixon-1', 'curtis-borchardt-1', 'ryan-humphrey-1', 'kareem-rush-1', 'qyntel-woods-1', 'casey-jacobsen-1', 'tayshaun-prince-1', 'frank-williams-1', 'john-salmons-1', 'chris-jefferies-1', 'dan-dickau-1', 'steve-logan-1', 'roger-mason-1', 'robert-archibald-1'], ['vincent-yarbrough-1', 'dan-gadzuric-1', 'carlos-boozer-1', 'tito-maddox-1', 'rod-grizzard-1', 'ronald-murray-1', 'jason-jennings-1', 'lonny-baxter-1', 'sam-clancy-1', 'matt-barnes-1', 'jamal-sampson-1', 'chris-owens-1', 'darius-songaila-1', 'marcus-taylor-1', 'rasual-butler-1', 'tamar-slay-1', 'randy-holcomb-1', 'corsley-edwards-1', 'carmelo-anthony-1', 'chris-bosh-1'], ['dwyane-wade-1', 'chris-kaman-1', 'kirk-hinrich-1', 'tj-ford-1', 'mike-sweetney-1', 'jarvis-hayes-1', 'nick-collison-1', 'marcus-banks-1', 'luke-ridnour-1', 'reece-gaines-1', 'troy-bell-1', 'david-west-1', 'dahntay-jones-1', 'brian-cook-1', 'josh-howard-1', 'jason-kapono-1', 'luke-walton-1', 'jerome-beasley-1', 'mario-austin-1', 'travis-hansen-1'], ['steve-blake-1', 'derrick-zimmerman-1', 'willie-green-1', 'keith-bogans-1', 'matt-bonner-1', 'mo-williams-1', 'james-jones-1', 'kyle-korver-1', 'tommy-smith-1', 'rick-rickert-1', 'brandon-hunter-1', 'emeka-okafor-1', 'ben-gordon-1', 'devin-harris-1', 'josh-childress-1', 'luol-deng-1', 'rafael-araujo-1', 'andre-iguodala-1', 'luke-jackson-1', 'kris-humphries-1'], ['kirk-snyder-1', 'jameer-nelson-1', 'delonte-west-1', 'tony-allen-1', 'kevin-martin-1', 'david-harrison-1', 'jackson-vroman-1', 'lionel-chalmers-1', 'donta-smith-1', 'andre-emmett-1', 'antonio-burks-1', 'royal-ivey-1', 'chris-duhon-1', 'justin-reed-1', 'david-young-1', 'trevor-ariza-1', 'tim-pickett-1', 'bernard-robinson-1', 'pape-sow-1', 'ricky-minard-1'], ['christian-drejer-1', 'romain-sato-1', 'matt-freije-1', 'rickey-paulding-1', 'luis-flores-1', 'marcus-douthit-1', 'blake-stepp-1', 'rashad-wright-1', 'andrew-bogut-1', 'marvin-williams-1', 'deron-williams-1', 'chris-paul-1', 'raymond-felton-1', 'charlie-villanueva-1', 'channing-frye-1', 'ike-diogu-1', 'sean-may-1', 'rashad-mccants-1', 'antoine-wright-1', 'joey-graham-1'], ['danny-granger-1', 'hakim-warrick-1', 'julius-hodge-1', 'nate-robinson-1', 'jarrett-jack-1', 'francisco-garcia-1', 'luther-head-1', 'jason-maxiell-1', 'linas-kleiza-1', 'wayne-simien-1', 'david-lee-1', 'salim-stoudamire-1', 'daniel-ewing-1', 'brandon-bass-1', 'ronny-turiaf-1', 'travis-diener-1', 'von-wafer-1', 'chris-taft-1', 'bracey-wright-1', 'ryan-gomes-1'], ['robert-whaley-1', 'orien-greene-1', 'dijon-thompson-1', 'lawrence-roberts-1', 'alex-acker-1', 'lamarcus-aldridge-1', 'adam-morrison-1', 'tyrus-thomas-1', 'shelden-williams-1', 'brandon-roy-1', 'randy-foye-1', 'rudy-gay-1', 'patrick-obryant-1', 'jj-redick-1', 'hilton-armstrong-1', 'ronnie-brewer-1', 'cedric-simmons-1', 'rodney-carney-1', 'shawne-williams-1', 'quincy-douby-1'], ['renaldo-balkman-1', 'rajon-rondo-1', 'marcus-williams-1', 'josh-boone-1', 'kyle-lowry-1', 'shannon-brown-1', 'jordan-farmar-1', 'maurice-ager-1', 'mardy-collins-1', 'james-white-1', 'steve-novak-1', 'solomon-jones-1', 'paul-davis-1', 'pj-tucker-1', 'craig-smith-1', 'bobby-jones-1', 'david-noel-1', 'denham-brown-1', 'james-augustine-1', 'daniel-gibson-1'], ['alexander-johnson-1', 'dee-brown-1', 'paul-millsap-1', 'leon-powe-1', 'ryan-hollins-1', 'guillermo-diaz-1', 'hassan-adams-1', 'jr-pinnock-1', 'will-blalock-1', 'greg-oden-1', 'kevin-durant-1', 'al-horford-1', 'mike-conley-1', 'jeff-green-1', 'corey-brewer-1', 'brandan-wright-1', 'joakim-noah-1', 'spencer-hawes-1', 'acie-law-1', 'thaddeus-young-1'], ['julian-wright-1', 'al-thornton-1', 'rodney-stuckey-1', 'nick-young-1', 'sean-williams-1', 'javaris-crittenton-1', 'jason-smith-1', 'daequan-cook-1', 'jared-dudley-1', 'wilson-chandler-1', 'morris-almond-1', 'aaron-brooks-1', 'arron-afflalo-1', 'alando-tucker-1', 'carl-landry-1', 'gabe-pruitt-1', 'marcus-williams-1', 'nick-fazekas-1', 'glen-davis-1', 'jermareo-davidson-1'], ['josh-mcroberts-1', 'chris-richard-1', 'derrick-byars-1', 'adam-haluska-1', 'reyshawn-terry-1', 'jared-jordan-1', 'stephane-lasme-1', 'dominic-mcguire-1', 'aaron-gray-1', 'jameson-curry-1', 'taurean-green-1', 'demetris-nichols-1', 'herbert-hill-1', 'ramon-sessions-1', 'sammy-mejia-1', 'dj-strawberry-1', 'derrick-rose-1', 'michael-beasley-1', 'oj-mayo-1', 'russell-westbrook-1'], ['kevin-love-1', 'eric-gordon-1', 'joe-alexander-1', 'dj-augustin-1', 'brook-lopez-1', 'jerryd-bayless-1', 'jason-thompson-1', 'brandon-rush-1', 'anthony-randolph-1', 'robin-lopez-1', 'marreese-speights-1', 'roy-hibbert-1', 'javale-mcgee-1', 'jj-hickson-1', 'ryan-anderson-1', 'courtney-lee-1', 'kosta-koufos-1', 'george-hill-1', 'darrell-arthur-1', 'donte-greene-1'], ['dj-white-1', 'jr-giddens-1', 'walter-sharpe-1', 'joey-dorsey-1', 'mario-chalmers-1', 'deandre-jordan-1', 'luc-mbah-a-moute-1', 'kyle-weaver-1', 'sonny-weems-1', 'chris-douglas-roberts-1', 'sean-singletary-1', 'patrick-ewing-1', 'trent-plaisted-1', 'henry-walker-1', 'malik-hairston-1', 'richard-hendrix-1', 'devon-hardin-1', 'shan-foster-1', 'darnell-jackson-1', 'maarty-leunen-1'], ['mike-taylor-1', 'sasha-kaun-1', 'james-gist-1', 'joe-crawford-1', 'deron-washington-1', 'blake-griffin-1', 'hasheem-thabeet-1', 'james-harden-1', 'tyreke-evans-1', 'jonny-flynn-1', 'stephen-curry-1', 'jordan-hill-1', 'demar-derozan-1', 'terrence-williams-1', 'gerald-henderson-1', 'tyler-hansbrough-1', 'earl-clark-1', 'austin-daye-1', 'james-johnson-1', 'jrue-holiday-1'], ['ty-lawson-1', 'jeff-teague-1', 'eric-maynor-1', 'darren-collison-1', 'byron-mullens-1', 'taj-gibson-1', 'demarre-carroll-1', 'wayne-ellington-1', 'toney-douglas-1', 'jeff-ayres-1', 'jermaine-taylor-1', 'dante-cunningham-1', 'dajuan-summers-1', 'sam-young-1', 'dejuan-blair-1', 'jon-brockman-1', 'derrick-brown-1', 'jodie-meeks-1', 'patrick-beverley-1', 'marcus-thornton-1'], ['chase-budinger-1', 'nick-calathes-1', 'danny-green-1', 'taylor-griffin-1', 'goran-suton-1', 'jack-mcclinton-1', 'aj-price-1', 'robert-vaden-1', 'patty-mills-1', 'ahmad-nivins-1', 'lester-hudson-1', 'chinemelu-elonu-1', 'robert-dozier-1', 'john-wall-1', 'evan-turner-1', 'derrick-favors-1', 'wesley-johnson-1', 'demarcus-cousins-1', 'ekpe-udoh-1', 'greg-monroe-1'], ['al-farouq-aminu-1', 'gordon-hayward-1', 'paul-george-1', 'cole-aldrich-1', 'xavier-henry-1', 'ed-davis-1', 'patrick-patterson-1', 'larry-sanders-1', 'luke-babbitt-1', 'eric-bledsoe-1', 'avery-bradley-1', 'james-anderson-1', 'craig-brackins-1', 'elliot-williams-1', 'trevor-booker-1', 'damion-james-1', 'dominique-jones-1', 'quincy-pondexter-1', 'jordan-crawford-1', 'greivis-vasquez-1'], ['daniel-orton-1', 'lazar-hayward-1', 'dexter-pittman-1', 'hassan-whiteside-1', 'armon-johnson-1', 'terrico-white-1', 'darington-hobson-1', 'andy-rautins-1', 'landry-fields-1', 'lance-stephenson-1', 'jarvis-varnado-1', 'dasean-butler-1', 'devin-ebanks-1', 'jerome-jordan-1', 'gani-lawal-1', 'tiny-gallon-1', 'solomon-alabi-1', 'magnum-rolle-1', 'luke-harangody-1', 'willie-warren-1'], ['jeremy-evans-1', 'hamady-ndiaye-1', 'ryan-reid-1', 'derrick-caracter-1', 'stanley-robinson-1', 'dwayne-collins-1', 'kyrie-irving-1', 'derrick-williams-1', 'tristan-thompson-1', 'brandon-knight-1', 'kemba-walker-1', 'jimmer-fredette-1', 'klay-thompson-1', 'alec-burks-1', 'markieff-morris-1', 'marcus-morris-1', 'kawhi-leonard-1', 'nikola-vucevic-1', 'iman-shumpert-1', 'chris-singleton-1'], ['tobias-harris-1', 'nolan-smith-1', 'kenneth-faried-1', 'reggie-jackson-1', 'marshon-brooks-1', 'jordan-hamilton-1', 'jajuan-johnson-1', 'norris-cole-1', 'cory-joseph-1', 'jimmy-butler-1', 'justin-harper-1', 'kyle-singler-1', 'shelvin-mack-1', 'tyler-honeycutt-1', 'jordan-williams-1', 'trey-thompkins-1', 'chandler-parsons-1', 'jon-leuer-1', 'darius-morris-1', 'malcolm-lee-1'], ['charles-jenkins-1', 'josh-harrellson-1', 'andrew-goudelock-1', 'travis-leslie-1', 'keith-benson-1', 'josh-selby-1', 'lavoy-allen-1', 'jon-diebler-1', 'vernon-macklin-1', 'deandre-liggins-1', 'etwaun-moore-1', 'isaiah-thomas-1', 'anthony-davis-1', 'michael-kidd-gilchrist-1', 'bradley-beal-1', 'dion-waiters-1', 'thomas-robinson-1', 'damian-lillard-1', 'harrison-barnes-1', 'terrence-ross-1'], ['andre-drummond-1', 'austin-rivers-1', 'meyers-leonard-1', 'jeremy-lamb-1', 'kendall-marshall-1', 'john-henson-1', 'maurice-harkless-1', 'royce-white-1', 'tyler-zeller-1', 'terrence-jones-1', 'andrew-nicholson-1', 'jared-sullinger-1', 'fab-melo-1', 'john-jenkins-1', 'jared-cunningham-1', 'tony-wroten-1', 'miles-plumlee-1', 'arnett-moultrie-1', 'perry-jones-1', 'marquis-teague-1'], ['festus-ezeli-1', 'jeff-taylor-1', 'bernard-james-1', 'jae-crowder-1', 'draymond-green-1', 'orlando-johnson-1', 'quincy-acy-1', 'quincy-miller-1', 'khris-middleton-1', 'will-barton-1', 'tyshawn-taylor-1', 'doron-lamb-1', 'mike-scott-1', 'kim-english-1', 'justin-hamilton-1', 'darius-miller-1', 'kevin-murphy-1', 'kyle-oquinn-1', 'kris-joseph-1', 'darius-johnson-odom-1'], ['robbie-hummel-1', 'marcus-denmon-1', 'robert-sacre-1', 'anthony-bennett-1', 'victor-oladipo-1', 'otto-porter-jr-1', 'cody-zeller-1', 'alex-len-1', 'nerlens-noel-1', 'ben-mclemore-1', 'kentavious-caldwell-pope-1', 'trey-burke-1', 'cj-mccollum-1', 'michael-carter-williams-1', 'steven-adams-1', 'kelly-olynyk-1', 'shabazz-muhammad-1', 'shane-larkin-1', 'tony-snell-1', 'gorgui-dieng-1'], ['mason-plumlee-1', 'solomon-hill-1', 'tim-hardaway-jr-1', 'reggie-bullock-1', 'andre-roberson-1', 'archie-goodwin-1', 'allen-crabbe-1', 'carrick-felix-1', 'isaiah-canaan-1', 'glen-rice-jr-1', 'ray-mccallum-1', 'tony-mitchell-1', 'nate-wolters-1', 'jeff-withey-1', 'grant-jerrett-1', 'jamaal-franklin-1', 'pierre-jackson-1', 'ricky-ledo-1', 'mike-muscala-1', 'erick-green-1'], ['ryan-kelly-1', 'erik-murphy-1', 'james-ennis-iii-1', 'romero-osby-1', 'lorenzo-brown-1', 'colton-iverson-1', 'arsalan-kazemi-1', 'peyton-siva-1', 'alex-oriakhi-1', 'deshaun-thomas-1', 'andrew-wiggins-1', 'jabari-parker-1', 'joel-embiid-1', 'aaron-gordon-1', 'marcus-smart-1', 'julius-randle-1', 'nik-stauskas-1', 'noah-vonleh-1', 'elfrid-payton-1', 'doug-mcdermott-1'], ['zach-lavine-1', 'tj-warren-1', 'adreian-payne-1', 'james-young-1', 'tyler-ennis-1', 'gary-harris-1', 'mitch-mcgary-1', 'jordan-adams-1', 'rodney-hood-1', 'shabazz-napier-1', 'pj-hairston-1', 'cj-wilcox-1', 'josh-huestis-1', 'kyle-anderson-1', 'kj-mcdaniels-1', 'joe-harris-1', 'cleanthony-early-1', 'jarnell-stokes-1', 'johnny-obryant-1', 'deandre-daniels-1'], ['spencer-dinwiddie-1', 'jerami-grant-1', 'glenn-robinson-iii-1', 'nick-johnson-1', 'markel-brown-1', 'dwight-powell-1', 'jordan-clarkson-1', 'russ-smith-1', 'lamar-patterson-1', 'cameron-bairstow-1', 'alec-brown-1', 'semaj-christon-1', 'devyn-marble-1', 'jordan-mcrae-1', 'xavier-thames-1', 'cory-jefferson-1', 'karl-anthony-towns-1', 'dangelo-russell-1', 'jahlil-okafor-1', 'willie-cauley-stein-1'], ['stanley-johnson-1', 'frank-kaminsky-1', 'justise-winslow-1', 'myles-turner-1', 'trey-lyles-1', 'devin-booker-1', 'cameron-payne-1', 'kelly-oubre-jr-1', 'terry-rozier-1', 'rashad-vaughn-1', 'sam-dekker-1', 'jerian-grant-1', 'delon-wright-1', 'justin-anderson-1', 'bobby-portis-1', 'rondae-hollis-jefferson-1', 'tyus-jones-1', 'jarell-martin-1', 'larry-nance-jr-1', 'rj-hunter-1'], ['chris-mccullough-1', 'kevon-looney-1', 'montrezl-harrell-1', 'jordan-mickey-1', 'anthony-brown-1', 'rakeem-christmas-1', 'richaun-holmes-1', 'darrun-hilliard-1', 'josh-richardson-1', 'pat-connaughton-1', 'olivier-hanlan-1', 'joe-young-1', 'andrew-harrison-1', 'marcus-thornton-1', 'norman-powell-1', 'dakari-johnson-1', 'aaron-white-1', 'tyler-harvey-1', 'sirdominic-pointer-1', 'cady-lalanne-1'], ['branden-dawson-1', 'jp-tokoto-1', 'ben-simmons-1', 'brandon-ingram-1', 'jaylen-brown-1', 'kris-dunn-1', 'buddy-hield-1', 'jamal-murray-1', 'marquese-chriss-1', 'jakob-poeltl-1', 'domantas-sabonis-1', 'taurean-prince-1', 'denzel-valentine-1', 'wade-baldwin-1', 'henry-ellenson-1', 'malik-beasley-1', 'caris-levert-1', 'deandre-bembry-1', 'malachi-richardson-1', 'brice-johnson-1'], ['pascal-siakam-1', 'skal-labissiere-1', 'dejounte-murray-1', 'damian-jones-1', 'deyonta-davis-1', 'cheick-diallo-1', 'tyler-ulis-1', 'malcolm-brogdon-1', 'chinanu-onuaku-1', 'patrick-mccaw-1', 'diamond-stone-1', 'stephen-zimmerman-1', 'isaiah-whitehead-1', 'demetrius-jackson-1', 'aj-hammons-1', 'jake-layman-1', 'michael-gbinije-1', 'georges-niang-1', 'ben-bentil-1', 'joel-bolomboy-1'], ['kay-felder-1', 'marcus-paige-1', 'daniel-hamilton-1', 'abdel-nader-1', 'isaiah-cousins-1', 'tyrone-wallace-1', 'markelle-fultz-1', 'lonzo-ball-1', 'jayson-tatum-1', 'josh-jackson-1', 'deaaron-fox-1', 'jonathan-isaac-1', 'lauri-markkanen-1', 'dennis-smith-jr-1', 'zach-collins-1', 'malik-monk-1', 'luke-kennard-1', 'donovan-mitchell-1', 'bam-adebayo-1', 'justin-jackson-1'], ['justin-patton-1', 'dj-wilson-1', 'tj-leaf-1', 'john-collins-1', 'harry-giles-1', 'jarrett-allen-1', 'og-anunoby-1', 'tyler-lydon-1', 'caleb-swanigan-1', 'kyle-kuzma-1', 'tony-bradley-1', 'derrick-white-1', 'josh-hart-1', 'frank-jackson-1', 'davon-reed-1', 'wes-iwundu-1', 'frank-mason-iii-1', 'ivan-rabb-1', 'semi-ojeleye-1', 'jordan-bell-1'], ['jawun-evans-1', 'dwayne-bacon-1', 'tyler-dorsey-1', 'thomas-bryant-1', 'damyean-dotson-1', 'dillon-brooks-1', 'sterling-brown-1', 'ike-anigbogu-1', 'sindarius-thornwell-1', 'monte-morris-1', 'edmond-sumner-1', 'kadeem-allen-1', 'alec-peters-1', 'nigel-williams-goss-1', 'jabari-bird-1', 'jaron-blossomgame-1', 'deandre-ayton-1', 'marvin-bagley-iii-1', 'jaren-jackson-jr-1', 'trae-young-1'], ['mo-bamba-1', 'wendell-carter-jr-1', 'collin-sexton-1', 'kevin-knox-1', 'mikal-bridges-1', 'shai-gilgeous-alexander-1', 'miles-bridges-1', 'jerome-robinson-1', 'michael-porter-jr-1', 'troy-brown-jr-1', 'zhaire-smith-1', 'donte-divincenzo-1', 'lonnie-walker-iv-1', 'kevin-huerter-1', 'josh-okogie-1', 'grayson-allen-1', 'chandler-hutchison-1', 'aaron-holiday-1', 'moritz-wagner-1', 'landry-shamet-1'], ['robert-williams-1', 'jacob-evans-1', 'omari-spellman-1', 'jevon-carter-1', 'jalen-brunson-1', 'devonte-graham-1', 'melvin-frazier-1', 'gary-trent-jr-1', 'khyri-thomas-1', 'jarred-vanderbilt-1', 'bruce-brown-1', 'justin-jackson-1', 'hamidou-diallo-1', 'deanthony-melton-1', 'svi-mykhailiuk-1', 'keita-bates-diop-1', 'chimezie-metu-1', 'alize-johnson-1', 'tony-carr-1', 'vince-edwards-1'], ['devon-hall-1', 'shake-milton-1', 'ray-spalding-1', 'kevin-hervey-1', 'thomas-welsh-1', 'george-king-1', 'kostas-antetokounmpo-1', 'zion-williamson-1', 'ja-morant-1', 'rj-barrett-1', 'deandre-hunter-1', 'darius-garland-1', 'jarrett-culver-1', 'coby-white-1', 'jaxson-hayes-1', 'rui-hachimura-1', 'cam-reddish-1', 'cameron-johnson-1', 'pj-washington-1', 'tyler-herro-1'], ['romeo-langford-1', 'chuma-okeke-1', 'nickeil-alexander-walker-1', 'matisse-thybulle-1', 'brandon-clarke-1', 'grant-williams-1', 'ty-jerome-1', 'nassir-little-1', 'dylan-windler-1', 'mfiondu-kabengele-1', 'jordan-poole-1', 'keldon-johnson-1', 'kevin-porter-jr-1', 'nic-claxton-1', 'kz-okpala-1', 'carsen-edwards-1', 'bruno-fernando-1', 'cody-martin-1', 'daniel-gafford-1', 'justin-james-1'], ['eric-paschall-1', 'admiral-schofield-1', 'jaylen-nowell-1', 'bol-bol-1', 'isaiah-roby-1', 'talen-horton-tucker-1', 'ignas-brazdeikis-1', 'terance-mann-1', 'quinndary-weatherspoon-1', 'jarrell-brantley-1', 'tremont-waters-1', 'jalen-mcdaniels-1', 'justin-wright-foreman-1', 'marial-shayok-1', 'kyle-guy-1', 'jaylen-hands-1', 'jordan-bone-1', 'miye-oni-1', 'dewan-hernandez-1']]\n"]}],"source":["def split_list(lst, chunk_size):\n","    return [lst[i:i + chunk_size] for i in range(0, len(lst), chunk_size)]\n","# same logic as before, creating chunks of 20 Url to screap and not get error message\n","Lista = player_links\n","chunk_size = 20\n","chunks = split_list(Lista, chunk_size)\n","\n","print(\"Chunks:\", chunks)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":314,"status":"ok","timestamp":1717870631138,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"ePgpbQOEvb07","outputId":"a6a63cad-2a50-4fa3-fc7b-4ddafe9d3c63"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['joe-barry-carroll-1',\n"," 'darrell-griffith-1',\n"," 'kevin-mchale-1',\n"," 'kelvin-ransey-1',\n"," 'james-ray-1',\n"," 'mike-okoren-1',\n"," 'mike-gminski-1',\n"," 'andrew-toney-1',\n"," 'michael-brooks-1',\n"," 'ronnie-lester-1',\n"," 'kiki-vandeweghe-1',\n"," 'mike-woodson-1',\n"," 'rickey-brown-1',\n"," 'wes-matthews-1',\n"," 'reggie-johnson-1',\n"," 'hawkeye-whitney-1',\n"," 'larry-drew-1',\n"," 'don-collins-1',\n"," 'john-duren-1',\n"," 'bill-hanzlik-1']"]},"metadata":{},"execution_count":50}],"source":["chunks[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":321,"status":"ok","timestamp":1717870635086,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"7THSB_RcXbxD","outputId":"b147a122-2baa-4132-dd7e-bbe3110756e5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Chunk_0 = ['joe-barry-carroll-1', 'darrell-griffith-1', 'kevin-mchale-1', 'kelvin-ransey-1', 'james-ray-1', 'mike-okoren-1', 'mike-gminski-1', 'andrew-toney-1', 'michael-brooks-1', 'ronnie-lester-1', 'kiki-vandeweghe-1', 'mike-woodson-1', 'rickey-brown-1', 'wes-matthews-1', 'reggie-johnson-1', 'hawkeye-whitney-1', 'larry-drew-1', 'don-collins-1', 'john-duren-1', 'bill-hanzlik-1']\n","Chunk_1 = ['monti-davis-1', 'chad-kinch-1', 'carl-nicks-1', 'larry-smith-1', 'jeff-ruland-1', 'sam-worthen-1', 'john-stroud-1', 'craig-shelton-1', 'louis-orr-1', 'kenny-natt-1', 'wayne-robinson-1', 'david-lawrence-1', 'bruce-collins-1', 'roosevelt-bouie-1', 'rick-mahorn-1', 'dewayne-scales-1', 'butch-carter-1', 'terry-stotts-1', 'michael-wiley-1', 'dick-miller-1']\n","Chunk_2 = ['jawann-oldham-1', 'kimberly-belton-1', 'billy-williams-1', 'clyde-austin-1', 'brad-branson-1', 'arnette-hallman-1', 'kurt-nimphius-1', 'eddie-lee-1', 'john-virgil-1', 'james-wilkes-1', 'ronnie-valentine-1', 'lowes-moore-1', 'stuart-house-1', 'ron-perry-1', 'wayne-abrams-1', 'mike-harper-1', 'dave-britton-1', 'kurt-rambis-1', 'john-campbell-1', 'lavon-mercer-1']\n","Chunk_3 = ['mark-aguirre-1', 'isiah-thomas-1', 'buck-williams-1', 'al-wood-1', 'danny-vranes-1', 'orlando-woolridge-1', 'steve-johnson-1', 'tom-chambers-1', 'rolando-blackman-1', 'albert-king-1', 'frank-johnson-1', 'kelly-tripucka-1', 'danny-schayes-1', 'herb-williams-1', 'jeff-lamp-1', 'darnell-valentine-1', 'kevin-loder-1', 'ray-tolbert-1', 'mike-mcgee-1', 'larry-nance-1']\n","Chunk_4 = ['alton-lister-1', 'franklin-edwards-1', 'charles-bradley-1', 'jay-vincent-1', 'tracy-jackson-1', 'brian-jackson-1', 'howard-wood-1', 'gene-banks-1', 'eddie-johnson-1', 'ed-rains-1', 'danny-ainge-1', 'mike-olliver-1', 'sam-williams-1', 'ken-green-1', 'charles-davis-1', 'ray-blume-1', 'al-leslie-1', 'clyde-bradshaw-1', 'harvey-knuckles-1', 'greg-cook-1']\n","Chunk_5 = ['claude-gregory-1', 'elvis-rolle-1', 'elston-turner-1', 'steve-lingenfelter-1', 'vernon-smith-1', 'art-housey-1', 'mike-ferrara-1', 'david-burns-1', 'derek-holcomb-1', 'zam-fredrick-1', 'rudy-macklin-1', 'mark-radford-1', 'jim-smith-1', 'mickey-dillard-1', 'carlton-neverson-1', 'frank-brickowski-1', 'curtis-berry-1', 'russell-bowers-1', 'purvis-miller-1', 'james-worthy-1']\n","Chunk_6 = ['terry-cummings-1', 'dominique-wilkins-1', 'bill-garnett-1', 'lasalle-thompson-1', 'trent-tucker-1', 'quintin-dailey-1', 'clark-kellogg-1', 'cliff-levingston-1', 'keith-edmonson-1', 'fat-lever-1', 'john-bagley-1', 'sleepy-floyd-1', 'lester-conner-1', 'david-thirdkill-1', 'terry-teagle-1', 'brook-steppe-1', 'ricky-pierce-1', 'rob-williams-1', 'paul-pressey-1', 'eddie-phillips-1']\n","Chunk_7 = ['mark-mcnamara-1', 'darren-tillis-1', 'oliver-robinson-1', 'bryan-warrick-1', 'ricky-frazier-1', 'fred-roberts-1', 'dave-magley-1', 'scott-hastings-1', 'wallace-bryant-1', 'rod-higgins-1', 'richard-anderson-1', 'linton-townes-1', 'vince-taylor-1', 'derek-smith-1', 'jj-anderson-1', 'audie-norris-1', 'wayne-sappleton-1', 'kevin-magee-1', 'guy-morgan-1', 'dwight-anderson-1']\n","Chunk_8 = ['jeff-taylor-1', 'jose-slaughter-1', 'mike-gibson-1', 'russ-schoene-1', 'tony-guy-1', 'michael-wilson-1', 'craig-hodges-1', 'steve-trumbo-1', 'corny-thompson-1', 'jim-johnstone-1', 'dan-caldwell-1', 'tyrone-adams-1', 'hutch-jones-1', 'jerry-eaves-1', 'joe-kopicki-1', 'craig-tucker-1', 'mike-largey-1', 'jimmy-black-1', 'chris-engler-1', 'ralph-sampson-1']\n","Chunk_9 = ['steve-stipanovich-1', 'rodney-mccray-1', 'byron-scott-1', 'sidney-green-1', 'russell-cross-1', 'thurl-bailey-1', 'antoine-carr-1', 'dale-ellis-1', 'jeff-malone-1', 'derek-harper-1', 'darrell-walker-1', 'ennis-whatley-1', 'clyde-drexler-1', 'howard-carter-1', 'jon-sundvold-1', 'leo-rautins-1', 'randy-breuer-1', 'john-paxson-1', 'roy-hinson-1', 'greg-kite-1']\n","Chunk_10 = ['randy-wittman-1', 'mitchell-wiggins-1', 'stewart-granger-1', 'sidney-lowe-1', 'leroy-combs-1', 'john-garris-1', 'rod-foster-1', 'larry-micheaux-1', 'mark-west-1', 'doc-rivers-1', 'michael-britt-1', 'dirk-minniefield-1', 'guy-williams-1', 'darrell-lockhart-1', 'scooter-mccray-1', 'david-russell-1', 'chris-mcnealy-1', 'granville-waiters-1', 'jim-thomas-1', 'ted-kitchel-1']\n","Chunk_11 = ['mike-davis-1', 'pace-mannion-1', 'horace-owens-1', 'paul-williams-1', 'kevin-williams-1', 'ken-lyons-1', 'craig-ehlo-1', 'greg-jones-1', 'paul-thompson-1', 'dereck-whittenburg-1', 'winfred-king-1', 'michael-holton-1', 'bob-hansen-1', 'erich-santifer-1', 'larry-anderson-1', 'darren-daye-1', 'john-pinone-1', 'bruce-kuczenski-1', 'steve-harriel-1', 'hakeem-olajuwon-1']\n","Chunk_12 = ['sam-bowie-1', 'michael-jordan-1', 'sam-perkins-1', 'charles-barkley-1', 'melvin-turpin-1', 'alvin-robertson-1', 'lancaster-gordon-1', 'otis-thorpe-1', 'leon-wood-1', 'kevin-willis-1', 'tim-mccormick-1', 'jay-humphries-1', 'michael-cage-1', 'terence-stansbury-1', 'john-stockton-1', 'jeff-turner-1', 'vern-fleming-1', 'bernard-thompson-1', 'tony-campbell-1', 'kenny-fields-1']\n","Chunk_13 = ['tom-sewell-1', 'earl-jones-1', 'michael-young-1', 'devin-durrant-1', 'victor-fleming-1', 'ron-anderson-1', 'cory-blackwell-1', 'stuart-gray-1', 'steve-burtt-1', 'jay-murphy-1', 'eric-turner-1', 'steve-colter-1', 'tony-costner-1', 'othell-wilson-1', 'charles-jones-1', 'ben-coleman-1', 'charlie-sitton-1', 'danny-young-1', 'anthony-teachey-1', 'tom-sluby-1']\n","Chunk_14 = ['willie-white-1', 'greg-wiltjer-1', 'fred-reynolds-1', 'gary-plummer-1', 'jerome-kersey-1', 'ronnie-williams-1', 'james-banks-1', 'tim-dillon-1', 'ben-mcdonald-1', 'jim-petersen-1', 'terry-williams-1', 'ricky-ross-1', 'roosevelt-chapman-1', 'lewis-jackson-1', 'jeff-allen-1', 'joe-binion-1', 'bobby-parks-1', 'murray-jarman-1', 'leonard-mitchell-1', 'patrick-ewing-1']\n","Chunk_15 = ['wayman-tisdale-1', 'benoit-benjamin-1', 'xavier-mcdaniel-1', 'jon-koncak-1', 'joe-kleine-1', 'chris-mullin-1', 'detlef-schrempf-1', 'charles-oakley-1', 'ed-pinckney-1', 'keith-lee-1', 'kenny-green-1', 'karl-malone-1', 'alfredrick-hughes-1', 'blair-rasmussen-1', 'bill-wennington-1', 'uwe-blab-1', 'joe-dumars-1', 'steve-harris-1', 'sam-vincent-1', 'terry-catledge-1']\n","Chunk_16 = ['jerry-reynolds-1', 'ac-green-1', 'terry-porter-1', 'mike-smrek-1', 'bill-martin-1', 'dwayne-mcclain-1', 'ken-johnson-1', 'mike-brittain-1', 'calvin-duncan-1', 'manute-bol-1', 'nick-vanos-1', 'greg-stokes-1', 'aubrey-sherrod-1', 'tyrone-corbin-1', 'yvon-joseph-1', 'carey-scurry-1', 'george-montgomery-1', 'mark-acres-1', 'lorenzo-charles-1', 'bobby-lee-hurt-1']\n","Chunk_17 = ['barry-stevens-1', 'voise-winters-1', 'hot-rod-williams-1', 'adrian-branch-1', 'gerald-wilkins-1', 'kenny-patterson-1', 'brad-wright-1', 'leonard-allen-1', 'charles-bradley-1', 'anicet-lavodrama-1', 'rolando-lamb-1', 'sam-mitchell-1', 'herb-johnson-1', 'jerry-everett-1', 'michael-payne-1', 'vernon-moore-1', 'sedric-toney-1', 'andre-goode-1', 'brad-daugherty-1', 'len-bias-1']\n","Chunk_18 = ['chris-washburn-1', 'chuck-person-1', 'kenny-walker-1', 'william-bedford-1', 'roy-tarpley-1', 'ron-harper-1', 'brad-sellers-1', 'johnny-dawkins-1', 'john-salley-1', 'john-williams-1', 'pearl-washington-1', 'walter-berry-1', 'dell-curry-1', 'maurice-martin-1', 'harold-pressley-1', 'mark-alarie-1', 'billy-thompson-1', 'buck-johnson-1', 'anthony-jones-1', 'scott-skiles-1']\n","Chunk_19 = ['ken-barlow-1', 'mark-price-1', 'greg-dreiling-1', 'dennis-rodman-1', 'larry-krystkowiak-1', 'johnny-newman-1', 'nate-mcmillan-1', 'joe-ward-1', 'cedric-henderson-1', 'kevin-duckworth-1', 'johnny-rogers-1', 'milt-wagner-1', 'steve-mitchell-1', 'panagiotis-fasoulas-1', 'lemone-lampley-1', 'rafael-addison-1', 'otis-smith-1', 'ron-kellogg-1', 'dave-feitl-1', 'david-wingate-1']\n","Chunk_20 = ['keith-smith-1', 'jeff-hornacek-1', 'michael-jackson-1', 'forrest-mckenzie-1', 'juden-smith-1', 'kevin-henderson-1', 'mike-williams-1', 'ricky-wilson-1', 'tod-murphy-1', 'dwayne-polee-1', 'kenny-gattison-1', 'keith-colbert-1', 'bruce-douglas-1', 'dave-henderson-1', 'wendell-alexis-1', 'david-robinson-1', 'armen-gilliam-1', 'dennis-hopson-1', 'reggie-williams-1', 'scottie-pippen-1']\n","Chunk_21 = ['kenny-smith-1', 'kevin-johnson-1', 'olden-polynice-1', 'derrick-mckey-1', 'horace-grant-1', 'reggie-miller-1', 'muggsy-bogues-1', 'joe-wolf-1', 'tellis-frank-1', 'jose-ortiz-1', 'chris-welp-1', 'ronnie-murphy-1', 'mark-jackson-1', 'ken-norman-1', 'jim-farmer-1', 'dallas-comegys-1', 'reggie-lewis-1', 'greg-anderson-1', 'freddie-banks-1', 'ron-moore-1']\n","Chunk_22 = ['steve-alford-1', 'nate-blackwell-1', 'rickie-winslow-1', 'lester-fonville-1', 'nikita-wilson-1', 'andre-moore-1', 'bob-mccann-1', 'tony-white-1', 'brian-rowsom-1', 'doug-lee-1', 'duane-washington-1', 'derrick-dowell-1', 'norris-coleman-1', 'vincent-askew-1', 'winston-garland-1', 'kannard-johnson-1', 'terrance-bailey-1', 'andrew-kennedy-1', 'terry-coner-1', 'brad-lohaus-1']\n","Chunk_23 = ['bruce-dalrymple-1', 'tim-mccalister-1', 'jamie-waller-1', 'jerome-batiste-1', 'phil-zevenbergen-1', 'sven-meyer-1', 'donald-royal-1', 'winston-crite-1', 'tom-schafer-1', 'tommy-amaker-1', 'john-fox-1', 'hansi-gnad-1', 'darryl-johnson-1', 'danny-pearson-1', 'sean-couch-1', 'danny-manning-1', 'rik-smits-1', 'charles-smith-1', 'chris-morris-1', 'mitch-richmond-1']\n","Chunk_24 = ['hersey-hawkins-1', 'tim-perry-1', 'rex-chapman-1', 'rony-seikaly-1', 'willie-anderson-1', 'will-perdue-1', 'harvey-grant-1', 'jeff-grayer-1', 'dan-majerle-1', 'gary-grant-1', 'derrick-chievous-1', 'eric-leckner-1', 'ricky-berry-1', 'rod-strickland-1', 'kevin-edwards-1', 'mark-bryant-1', 'randolph-keys-1', 'jerome-lane-1', 'brian-shaw-1', 'david-rivers-1']\n","Chunk_25 = ['rolando-ferreira-1', 'shelton-jones-1', 'andrew-lang-1', 'vinny-del-negro-1', 'fennis-dembo-1', 'everette-stephens-1', 'charles-shackleford-1', 'grant-long-1', 'tom-tolbert-1', 'sylvester-gray-1', 'ledell-eackles-1', 'greg-butler-1', 'dean-garrett-1', 'tito-horford-1', 'orlando-graham-1', 'keith-smart-1', 'jeff-moe-1', 'todd-mitchell-1', 'anthony-taylor-1', 'tom-garrick-1']\n","Chunk_26 = ['morlon-wiley-1', 'vernon-maxwell-1', 'micheal-williams-1', 'jose-vargas-1', 'steve-kerr-1', 'rob-lock-1', 'derrick-hamilton-1', 'anthony-mason-1', 'rodney-johns-1', 'barry-sumpter-1', 'hernan-montenegro-1', 'jeff-moore-1', 'nate-johnston-1', 'ed-davender-1', 'pervis-ellison-1', 'danny-ferry-1', 'sean-elliott-1', 'glen-rice-1', 'jr-reid-1', 'stacey-king-1']\n","Chunk_27 = ['george-mccloud-1', 'randy-white-1', 'tom-hammonds-1', 'pooh-richardson-1', 'nick-anderson-1', 'mookie-blaylock-1', 'michael-smith-1', 'tim-hardaway-1', 'todd-lichti-1', 'dana-barros-1', 'shawn-kemp-1', 'bj-armstrong-1', 'kenny-payne-1', 'jeff-sanders-1', 'blue-edwards-1', 'byron-irvin-1', 'roy-marble-1', 'anthony-cook-1', 'john-morton-1', 'kenny-battle-1']\n","Chunk_28 = ['sherman-douglas-1', 'dyron-nix-1', 'frank-kornet-1', 'jeff-martin-1', 'stanley-brundy-1', 'jay-edwards-1', 'gary-leonard-1', 'pat-durham-1', 'clifford-robinson-1', 'michael-ansley-1', 'doug-west-1', 'ed-horton-1', 'doug-roth-1', 'michael-cutright-1', 'chucky-brown-1', 'reggie-cross-1', 'scott-haffner-1', 'ricky-blanton-1', 'reggie-turner-1', 'junie-lewis-1']\n","Chunk_29 = ['haywoode-workman-1', 'brian-quinnett-1', 'mike-morrison-1', 'greg-grant-1', 'jeff-hodge-1', 'toney-mack-1', 'derrick-coleman-1', 'gary-payton-1', 'mahmoud-abdul-rauf-1', 'dennis-scott-1', 'kendall-gill-1', 'felton-spencer-1', 'lionel-simmons-1', 'bo-kimble-1', 'willie-burton-1', 'rumeal-robinson-1', 'tyrone-hill-1', 'alec-kessler-1', 'loy-vaught-1', 'travis-mays-1']\n","Chunk_30 = ['dave-jamerson-1', 'terry-mills-1', 'jerrod-mustaf-1', 'duane-causwell-1', 'dee-brown-1', 'gerald-glass-1', 'jayson-williams-1', 'tate-george-1', 'anthony-bonner-1', 'dwayne-schintzius-1', 'alaa-abdelnaby-1', 'lance-blanks-1', 'elden-campbell-1', 'les-jepsen-1', 'carl-herrera-1', 'negele-knight-1', 'brian-oliver-1', 'walter-palmer-1', 'kevin-pritchard-1', 'greg-foster-1']\n","Chunk_31 = ['trevor-wilson-1', 'aj-english-1', 'jud-buechler-1', 'steve-scheffler-1', 'bimbo-coles-1', 'steve-bardo-1', 'marcus-liberty-1', 'tony-massenburg-1', 'steve-henson-1', 'antonio-davis-1', 'kenny-williams-1', 'derek-strong-1', 'cedric-ceballos-1', 'phil-henderson-1', 'milos-babic-1', 'tony-smith-1', 'abdul-shamsid-deen-1', 'sean-higgins-1', 'larry-johnson-1', 'kenny-anderson-1']\n","Chunk_32 = ['billy-owens-1', 'dikembe-mutombo-1', 'steve-smith-1', 'doug-smith-1', 'luc-longley-1', 'mark-macon-1', 'stacey-augmon-1', 'bison-dele-1', 'terrell-brandon-1', 'greg-anthony-1', 'dale-davis-1', 'rich-king-1', 'anthony-avent-1', 'chris-gatling-1', 'victor-alexander-1', 'kevin-brooks-1', 'labradford-smith-1', 'john-turner-1', 'eric-murdock-1', 'leron-ellis-1']\n","Chunk_33 = ['stanley-roberts-1', 'rick-fox-1', 'shaun-vandiver-1', 'mark-randall-1', 'pete-chilcutt-1', 'kevin-lynch-1', 'george-ackles-1', 'rodney-monroe-1', 'randy-brown-1', 'chad-gallagher-1', 'donald-hodge-1', 'myron-brown-1', 'mike-iuzzolino-1', 'chris-corchiani-1', 'elliot-perry-1', 'joe-wylie-1', 'jimmy-oliver-1', 'doug-overton-1', 'sean-green-1', 'steve-hood-1']\n","Chunk_34 = ['lamont-strothers-1', 'alvaro-teheran-1', 'bobby-phills-1', 'richard-dumas-1', 'keith-hughes-1', 'isaac-austin-1', 'greg-sutton-1', 'joey-wright-1', 'anthony-jones-1', 'von-mcdade-1', 'marcus-kennedy-1', 'shaquille-oneal-1', 'alonzo-mourning-1', 'christian-laettner-1', 'jim-jackson-1', 'laphonso-ellis-1', 'tom-gugliotta-1', 'walt-williams-1', 'todd-day-1', 'clarence-weatherspoon-1']\n","Chunk_35 = ['adam-keefe-1', 'robert-horry-1', 'harold-miner-1', 'bryant-stith-1', 'malik-sealy-1', 'anthony-peeler-1', 'randy-woods-1', 'doug-christie-1', 'tracy-murray-1', 'don-maclean-1', 'hubert-davis-1', 'jon-barry-1', 'oliver-miller-1', 'lee-mayberry-1', 'latrell-sprewell-1', 'elmore-spencer-1', 'dave-johnson-1', 'byron-houston-1', 'marlon-maxey-1', 'pj-brown-1']\n","Chunk_36 = ['sean-rooks-1', 'reggie-smith-1', 'brent-price-1', 'corey-williams-1', 'chris-smith-1', 'tony-bennett-1', 'duane-cooper-1', 'isaiah-morris-1', 'elmer-bennett-1', 'litterial-green-1', 'steve-rogers-1', 'popeye-jones-1', 'matt-geiger-1', 'henry-williams-1', 'chris-king-1', 'robert-werdann-1', 'darren-morningstar-1', 'brian-davis-1', 'ron-ellis-1', 'matt-fish-1']\n","Chunk_37 = ['tim-burroughs-1', 'matt-steigenga-1', 'curtis-blair-1', 'brett-roberts-1', 'chris-webber-1', 'shawn-bradley-1', 'anfernee-hardaway-1', 'jamal-mashburn-1', 'isaiah-rider-1', 'calbert-cheaney-1', 'bobby-hurley-1', 'vin-baker-1', 'rodney-rogers-1', 'lindsey-hunter-1', 'allan-houston-1', 'george-lynch-1', 'terry-dehere-1', 'scott-haskin-1', 'doug-edwards-1', 'rex-walters-1']\n","Chunk_38 = ['greg-graham-1', 'luther-wright-1', 'acie-earl-1', 'scott-burrell-1', 'james-robinson-1', 'chris-mills-1', 'ervin-johnson-1', 'sam-cassell-1', 'corie-blount-1', 'geert-hammink-1', 'malcolm-mackey-1', 'lucious-harris-1', 'sherron-mills-1', 'evers-burns-1', 'alphonso-ford-1', 'eric-riley-1', 'darnell-mee-1', 'ed-stokes-1', 'john-best-1', 'nick-van-exel-1']\n","Chunk_39 = ['conrad-mcrae-1', 'thomas-hill-1', 'rich-manning-1', 'anthony-reed-1', 'adonis-jordan-1', 'josh-grant-1', 'alex-holcombe-1', 'bryon-russell-1', 'richard-petruska-1', 'chris-whitney-1', 'kevin-thompson-1', 'mark-buford-1', 'spencer-dunkley-1', 'mike-peplowski-1', 'leonard-white-1', 'byron-wilson-1', 'glenn-robinson-1', 'jason-kidd-1', 'grant-hill-1', 'donyell-marshall-1']\n","Chunk_40 = ['juwan-howard-1', 'sharone-wright-1', 'lamond-murray-1', 'brian-grant-1', 'eric-montross-1', 'eddie-jones-1', 'carlos-rogers-1', 'khalid-reeves-1', 'jalen-rose-1', 'yinka-dare-1', 'eric-piatkowski-1', 'clifford-rozier-1', 'aaron-mckie-1', 'eric-mobley-1', 'tony-dumas-1', 'bj-tyler-1', 'dickey-simpkins-1', 'bill-curley-1', 'wesley-person-1', 'monty-williams-1']\n","Chunk_41 = ['greg-minor-1', 'charlie-ward-1', 'brooks-thompson-1', 'deon-thomas-1', 'antonio-lang-1', 'howard-eisley-1', 'rodney-dent-1', 'jim-mcilvaine-1', 'derrick-alston-1', 'gaylon-nickerson-1', 'michael-smith-1', 'dontonio-wingfield-1', 'darrin-hancock-1', 'anthony-miller-1', 'jeff-webster-1', 'gary-collier-1', 'shawnelle-scott-1', 'damon-bailey-1', 'dwayne-morton-1', 'voshon-lenard-1']\n","Chunk_42 = ['jamie-watson-1', 'jevon-crudup-1', 'kris-bruton-1', 'charles-claxton-1', 'lawrence-funderburke-1', 'anthony-goldwire-1', 'albert-burditt-1', 'joe-smith-1', 'antonio-mcdyess-1', 'jerry-stackhouse-1', 'rasheed-wallace-1', 'bryant-reeves-1', 'damon-stoudamire-1', 'shawn-respert-1', 'ed-obannon-1', 'kurt-thomas-1', 'gary-trent-1', 'cherokee-parks-1', 'corliss-williamson-1', 'eric-williams-1']\n","Chunk_43 = ['brent-barry-1', 'alan-henderson-1', 'bob-sura-1', 'theo-ratliff-1', 'randolph-childress-1', 'jason-caffey-1', 'michael-finley-1', 'george-zidek-1', 'travis-best-1', 'loren-meyer-1', 'david-vaughn-1', 'sherell-ford-1', 'mario-bennett-1', 'greg-ostertag-1', 'cory-alexander-1', 'lou-roe-1', 'terrence-rencher-1', 'junior-burrough-1', 'andrew-declercq-1', 'jimmy-king-1']\n","Chunk_44 = ['lawrence-moten-1', 'frankie-king-1', 'rashard-griffith-1', 'donny-marshall-1', 'dwayne-whitfield-1', 'erik-meek-1', 'donnie-boyce-1', 'eric-snow-1', 'anthony-pelle-1', 'troy-brown-1', 'george-banks-1', 'tyus-edney-1', 'mark-davis-1', 'jerome-allen-1', 'martin-lewis-1', 'fred-hoiberg-1', 'constantin-popa-1', 'michael-mcdonald-1', 'chris-carr-1', 'cuonzo-martin-1']\n","Chunk_45 = ['don-reid-1', 'allen-iverson-1', 'marcus-camby-1', 'shareef-abdur-rahim-1', 'stephon-marbury-1', 'ray-allen-1', 'antoine-walker-1', 'lorenzen-wright-1', 'kerry-kittles-1', 'samaki-walker-1', 'erick-dampier-1', 'todd-fuller-1', 'vitaly-potapenko-1', 'steve-nash-1', 'tony-delk-1', 'john-wallace-1', 'walter-mccarty-1', 'dontae-jones-1', 'roy-rogers-1', 'derek-fisher-1']\n","Chunk_46 = ['jerome-williams-1', 'brian-evans-1', 'priest-lauderdale-1', 'travis-knight-1', 'othella-harrington-1', 'mark-hendrickson-1', 'ryan-minor-1', 'moochie-norris-1', 'shawn-harvey-1', 'joseph-blair-1', 'doron-sheffer-1', 'jeff-mcinnis-1', 'steve-hamer-1', 'russ-millard-1', 'marcus-mann-1', 'jason-sasser-1', 'randy-livingston-1', 'ben-davis-1', 'malik-rose-1', 'joe-vogel-1']\n","Chunk_47 = ['marcus-brown-1', 'ron-riley-1', 'jamie-feick-1', 'amal-mccaskill-1', 'terrell-bell-1', 'chris-robinson-1', 'mark-pope-1', 'jeff-nordgaard-1', 'shandon-anderson-1', 'ronnie-henderson-1', 'reggie-geary-1', 'drew-barry-1', 'darnell-robinson-1', 'tim-duncan-1', 'keith-van-horn-1', 'chauncey-billups-1', 'antonio-daniels-1', 'tony-battie-1', 'ron-mercer-1', 'tim-thomas-1']\n","Chunk_48 = ['adonal-foyle-1', 'danny-fortson-1', 'tariq-abdul-wahad-1', 'austin-croshere-1', 'derek-anderson-1', 'maurice-taylor-1', 'kelvin-cato-1', 'brevin-knight-1', 'johnny-taylor-1', 'scot-pollard-1', 'paul-grant-1', 'anthony-parker-1', 'ed-gray-1', 'bobby-jackson-1', 'rodrick-rhodes-1', 'john-thomas-1', 'charles-smith-1', 'jacque-vaughn-1', 'keith-booth-1', 'serge-zwikker-1']\n","Chunk_49 = ['mark-sanford-1', 'charles-obannon-1', 'james-cotton-1', 'bubba-wells-1', 'kebu-stewart-1', 'james-collins-1', 'marc-jackson-1', 'jerald-honeycutt-1', 'anthony-johnson-1', 'eddie-elisma-1', 'jason-lawson-1', 'stephen-jackson-1', 'gordon-malone-1', 'cedric-henderson-1', 'god-shammgod-1', 'eric-washington-1', 'alvin-williams-1', 'chris-crawford-1', 'dejuan-wheat-1', 'cj-bruton-1']\n","Chunk_50 = ['paul-rogers-1', 'mark-blount-1', 'nate-erdmann-1', 'michael-olowokandi-1', 'mike-bibby-1', 'raef-lafrentz-1', 'antawn-jamison-1', 'vince-carter-1', 'robert-traylor-1', 'jason-williams-1', 'larry-hughes-1', 'paul-pierce-1', 'bonzi-wells-1', 'michael-doleac-1', 'keon-clark-1', 'michael-dickerson-1', 'matt-harpring-1', 'bryce-drew-1', 'pat-garrity-1', 'roshown-mcleod-1']\n","Chunk_51 = ['ricky-davis-1', 'brian-skinner-1', 'tyronn-lue-1', 'felipe-lopez-1', 'sam-jacobson-1', 'corey-benjamin-1', 'nazr-mohammed-1', 'ansu-sesay-1', 'ruben-patterson-1', 'jelani-mccoy-1', 'shammond-williams-1', 'jerome-james-1', 'casey-shaw-1', 'demarco-johnson-1', 'rafer-alston-1', 'cuttino-mobley-1', 'miles-simon-1', 'jahidi-white-1', 'sean-marks-1', 'toby-bailey-1']\n","Chunk_52 = ['andrae-patterson-1', 'tyson-wheeler-1', 'ryan-stack-1', 'cory-carr-1', 'andrew-betts-1', 'corey-brewer-1', 'derrick-dial-1', 'greg-buckner-1', 'tremaine-fowlkes-1', 'ryan-bowen-1', 'jr-henderson-1', 'torraye-braggs-1', 'maceo-baston-1', 'elton-brand-1', 'steve-francis-1', 'baron-davis-1', 'lamar-odom-1', 'wally-szczerbiak-1', 'richard-hamilton-1', 'andre-miller-1']\n","Chunk_53 = ['shawn-marion-1', 'jason-terry-1', 'trajan-langdon-1', 'aleksandar-radojevic-1', 'corey-maggette-1', 'william-avery-1', 'metta-world-peace-1', 'cal-bowdler-1', 'james-posey-1', 'quincy-lewis-1', 'dion-glover-1', 'jeff-foster-1', 'kenny-thomas-1', 'devean-george-1', 'tim-james-1', 'vonteego-cummings-1', 'jumaine-jones-1', 'scott-padgett-1', 'john-celestand-1', 'rico-hill-1']\n","Chunk_54 = ['michael-ruffin-1', 'chris-herren-1', 'evan-eschmeyer-1', 'calvin-booth-1', 'obinna-ekezie-1', 'laron-profit-1', 'aj-bramlett-1', 'francisco-elson-1', 'louis-bullock-1', 'lee-nailon-1', 'tyrone-washington-1', 'ryan-robertson-1', 'jr-koch-1', 'todd-macculloch-1', 'galen-young-1', 'lari-ketner-1', 'venson-hamilton-1', 'antwain-smith-1', 'roberto-bergersen-1', 'rodney-buford-1']\n","Chunk_55 = ['melvin-levett-1', 'kris-clack-1', 'tim-young-1', 'eddie-lucas-1', 'kenyon-martin-1', 'stromile-swift-1', 'marcus-fizer-1', 'mike-miller-1', 'dermarr-johnson-1', 'chris-mihm-1', 'jamal-crawford-1', 'joel-przybilla-1', 'keyon-dooling-1', 'jerome-moiso-1', 'etan-thomas-1', 'courtney-alexander-1', 'mateen-cleaves-1', 'jason-collier-1', 'desmond-mason-1', 'quentin-richardson-1']\n","Chunk_56 = ['jamaal-magloire-1', 'speedy-claxton-1', 'morris-peterson-1', 'donnell-harvey-1', 'mamadou-ndiaye-1', 'erick-barkley-1', 'mark-madsen-1', 'dan-langhi-1', 'aj-guyton-1', 'jake-voskuhl-1', 'khalid-el-amin-1', 'mike-smith-1', 'eddie-house-1', 'eduardo-najera-1', 'lavor-postell-1', 'hanno-mottola-1', 'chris-carrawell-1', 'michael-redd-1', 'brian-cardinal-1', 'jabari-smith-1']\n","Chunk_57 = ['deeandre-hulett-1', 'mark-karcher-1', 'jason-hart-1', 'kaniel-dickens-1', 'ernest-brown-1', 'dan-mcclintock-1', 'cory-hightower-1', 'chris-porter-1', 'jaquay-walls-1', 'scoonie-penn-1', 'pete-mickeal-1', 'jason-richardson-1', 'shane-battier-1', 'eddie-griffin-1', 'rodney-white-1', 'joe-johnson-1', 'kedrick-brown-1', 'richard-jefferson-1', 'troy-murphy-1', 'steven-hunter-1']\n","Chunk_58 = ['kirk-haston-1', 'michael-bradley-1', 'jason-collins-1', 'zach-randolph-1', 'brendan-haywood-1', 'joseph-forte-1', 'jeryl-sasser-1', 'brandon-armstrong-1', 'gerald-wallace-1', 'samuel-dalembert-1', 'jamaal-tinsley-1', 'trenton-hassell-1', 'gilbert-arenas-1', 'omar-cook-1', 'will-solomon-1', 'terence-morris-1', 'brian-scalabrine-1', 'jeff-trepagnier-1', 'damone-brown-1', 'michael-wright-1']\n","Chunk_59 = ['earl-watson-1', 'jamison-brewer-1', 'bobby-simmons-1', 'eric-chenowith-1', 'kyle-hill-1', 'sean-lampley-1', 'loren-woods-1', 'ken-johnson-1', 'ruben-boumtje-boumtje-1', 'alton-ford-1', 'andre-hutson-1', 'jarron-collins-1', 'kenny-satterfield-1', 'maurice-jeffers-1', 'alvin-jones-1', 'bryan-bracey-1', 'jay-williams-1', 'mike-dunleavy-1', 'drew-gooden-1', 'dajuan-wagner-1']\n","Chunk_60 = ['chris-wilcox-1', 'caron-butler-1', 'jared-jeffries-1', 'melvin-ely-1', 'marcus-haislip-1', 'fred-jones-1', 'juan-dixon-1', 'curtis-borchardt-1', 'ryan-humphrey-1', 'kareem-rush-1', 'qyntel-woods-1', 'casey-jacobsen-1', 'tayshaun-prince-1', 'frank-williams-1', 'john-salmons-1', 'chris-jefferies-1', 'dan-dickau-1', 'steve-logan-1', 'roger-mason-1', 'robert-archibald-1']\n","Chunk_61 = ['vincent-yarbrough-1', 'dan-gadzuric-1', 'carlos-boozer-1', 'tito-maddox-1', 'rod-grizzard-1', 'ronald-murray-1', 'jason-jennings-1', 'lonny-baxter-1', 'sam-clancy-1', 'matt-barnes-1', 'jamal-sampson-1', 'chris-owens-1', 'darius-songaila-1', 'marcus-taylor-1', 'rasual-butler-1', 'tamar-slay-1', 'randy-holcomb-1', 'corsley-edwards-1', 'carmelo-anthony-1', 'chris-bosh-1']\n","Chunk_62 = ['dwyane-wade-1', 'chris-kaman-1', 'kirk-hinrich-1', 'tj-ford-1', 'mike-sweetney-1', 'jarvis-hayes-1', 'nick-collison-1', 'marcus-banks-1', 'luke-ridnour-1', 'reece-gaines-1', 'troy-bell-1', 'david-west-1', 'dahntay-jones-1', 'brian-cook-1', 'josh-howard-1', 'jason-kapono-1', 'luke-walton-1', 'jerome-beasley-1', 'mario-austin-1', 'travis-hansen-1']\n","Chunk_63 = ['steve-blake-1', 'derrick-zimmerman-1', 'willie-green-1', 'keith-bogans-1', 'matt-bonner-1', 'mo-williams-1', 'james-jones-1', 'kyle-korver-1', 'tommy-smith-1', 'rick-rickert-1', 'brandon-hunter-1', 'emeka-okafor-1', 'ben-gordon-1', 'devin-harris-1', 'josh-childress-1', 'luol-deng-1', 'rafael-araujo-1', 'andre-iguodala-1', 'luke-jackson-1', 'kris-humphries-1']\n","Chunk_64 = ['kirk-snyder-1', 'jameer-nelson-1', 'delonte-west-1', 'tony-allen-1', 'kevin-martin-1', 'david-harrison-1', 'jackson-vroman-1', 'lionel-chalmers-1', 'donta-smith-1', 'andre-emmett-1', 'antonio-burks-1', 'royal-ivey-1', 'chris-duhon-1', 'justin-reed-1', 'david-young-1', 'trevor-ariza-1', 'tim-pickett-1', 'bernard-robinson-1', 'pape-sow-1', 'ricky-minard-1']\n","Chunk_65 = ['christian-drejer-1', 'romain-sato-1', 'matt-freije-1', 'rickey-paulding-1', 'luis-flores-1', 'marcus-douthit-1', 'blake-stepp-1', 'rashad-wright-1', 'andrew-bogut-1', 'marvin-williams-1', 'deron-williams-1', 'chris-paul-1', 'raymond-felton-1', 'charlie-villanueva-1', 'channing-frye-1', 'ike-diogu-1', 'sean-may-1', 'rashad-mccants-1', 'antoine-wright-1', 'joey-graham-1']\n","Chunk_66 = ['danny-granger-1', 'hakim-warrick-1', 'julius-hodge-1', 'nate-robinson-1', 'jarrett-jack-1', 'francisco-garcia-1', 'luther-head-1', 'jason-maxiell-1', 'linas-kleiza-1', 'wayne-simien-1', 'david-lee-1', 'salim-stoudamire-1', 'daniel-ewing-1', 'brandon-bass-1', 'ronny-turiaf-1', 'travis-diener-1', 'von-wafer-1', 'chris-taft-1', 'bracey-wright-1', 'ryan-gomes-1']\n","Chunk_67 = ['robert-whaley-1', 'orien-greene-1', 'dijon-thompson-1', 'lawrence-roberts-1', 'alex-acker-1', 'lamarcus-aldridge-1', 'adam-morrison-1', 'tyrus-thomas-1', 'shelden-williams-1', 'brandon-roy-1', 'randy-foye-1', 'rudy-gay-1', 'patrick-obryant-1', 'jj-redick-1', 'hilton-armstrong-1', 'ronnie-brewer-1', 'cedric-simmons-1', 'rodney-carney-1', 'shawne-williams-1', 'quincy-douby-1']\n","Chunk_68 = ['renaldo-balkman-1', 'rajon-rondo-1', 'marcus-williams-1', 'josh-boone-1', 'kyle-lowry-1', 'shannon-brown-1', 'jordan-farmar-1', 'maurice-ager-1', 'mardy-collins-1', 'james-white-1', 'steve-novak-1', 'solomon-jones-1', 'paul-davis-1', 'pj-tucker-1', 'craig-smith-1', 'bobby-jones-1', 'david-noel-1', 'denham-brown-1', 'james-augustine-1', 'daniel-gibson-1']\n","Chunk_69 = ['alexander-johnson-1', 'dee-brown-1', 'paul-millsap-1', 'leon-powe-1', 'ryan-hollins-1', 'guillermo-diaz-1', 'hassan-adams-1', 'jr-pinnock-1', 'will-blalock-1', 'greg-oden-1', 'kevin-durant-1', 'al-horford-1', 'mike-conley-1', 'jeff-green-1', 'corey-brewer-1', 'brandan-wright-1', 'joakim-noah-1', 'spencer-hawes-1', 'acie-law-1', 'thaddeus-young-1']\n","Chunk_70 = ['julian-wright-1', 'al-thornton-1', 'rodney-stuckey-1', 'nick-young-1', 'sean-williams-1', 'javaris-crittenton-1', 'jason-smith-1', 'daequan-cook-1', 'jared-dudley-1', 'wilson-chandler-1', 'morris-almond-1', 'aaron-brooks-1', 'arron-afflalo-1', 'alando-tucker-1', 'carl-landry-1', 'gabe-pruitt-1', 'marcus-williams-1', 'nick-fazekas-1', 'glen-davis-1', 'jermareo-davidson-1']\n","Chunk_71 = ['josh-mcroberts-1', 'chris-richard-1', 'derrick-byars-1', 'adam-haluska-1', 'reyshawn-terry-1', 'jared-jordan-1', 'stephane-lasme-1', 'dominic-mcguire-1', 'aaron-gray-1', 'jameson-curry-1', 'taurean-green-1', 'demetris-nichols-1', 'herbert-hill-1', 'ramon-sessions-1', 'sammy-mejia-1', 'dj-strawberry-1', 'derrick-rose-1', 'michael-beasley-1', 'oj-mayo-1', 'russell-westbrook-1']\n","Chunk_72 = ['kevin-love-1', 'eric-gordon-1', 'joe-alexander-1', 'dj-augustin-1', 'brook-lopez-1', 'jerryd-bayless-1', 'jason-thompson-1', 'brandon-rush-1', 'anthony-randolph-1', 'robin-lopez-1', 'marreese-speights-1', 'roy-hibbert-1', 'javale-mcgee-1', 'jj-hickson-1', 'ryan-anderson-1', 'courtney-lee-1', 'kosta-koufos-1', 'george-hill-1', 'darrell-arthur-1', 'donte-greene-1']\n","Chunk_73 = ['dj-white-1', 'jr-giddens-1', 'walter-sharpe-1', 'joey-dorsey-1', 'mario-chalmers-1', 'deandre-jordan-1', 'luc-mbah-a-moute-1', 'kyle-weaver-1', 'sonny-weems-1', 'chris-douglas-roberts-1', 'sean-singletary-1', 'patrick-ewing-1', 'trent-plaisted-1', 'henry-walker-1', 'malik-hairston-1', 'richard-hendrix-1', 'devon-hardin-1', 'shan-foster-1', 'darnell-jackson-1', 'maarty-leunen-1']\n","Chunk_74 = ['mike-taylor-1', 'sasha-kaun-1', 'james-gist-1', 'joe-crawford-1', 'deron-washington-1', 'blake-griffin-1', 'hasheem-thabeet-1', 'james-harden-1', 'tyreke-evans-1', 'jonny-flynn-1', 'stephen-curry-1', 'jordan-hill-1', 'demar-derozan-1', 'terrence-williams-1', 'gerald-henderson-1', 'tyler-hansbrough-1', 'earl-clark-1', 'austin-daye-1', 'james-johnson-1', 'jrue-holiday-1']\n","Chunk_75 = ['ty-lawson-1', 'jeff-teague-1', 'eric-maynor-1', 'darren-collison-1', 'byron-mullens-1', 'taj-gibson-1', 'demarre-carroll-1', 'wayne-ellington-1', 'toney-douglas-1', 'jeff-ayres-1', 'jermaine-taylor-1', 'dante-cunningham-1', 'dajuan-summers-1', 'sam-young-1', 'dejuan-blair-1', 'jon-brockman-1', 'derrick-brown-1', 'jodie-meeks-1', 'patrick-beverley-1', 'marcus-thornton-1']\n","Chunk_76 = ['chase-budinger-1', 'nick-calathes-1', 'danny-green-1', 'taylor-griffin-1', 'goran-suton-1', 'jack-mcclinton-1', 'aj-price-1', 'robert-vaden-1', 'patty-mills-1', 'ahmad-nivins-1', 'lester-hudson-1', 'chinemelu-elonu-1', 'robert-dozier-1', 'john-wall-1', 'evan-turner-1', 'derrick-favors-1', 'wesley-johnson-1', 'demarcus-cousins-1', 'ekpe-udoh-1', 'greg-monroe-1']\n","Chunk_77 = ['al-farouq-aminu-1', 'gordon-hayward-1', 'paul-george-1', 'cole-aldrich-1', 'xavier-henry-1', 'ed-davis-1', 'patrick-patterson-1', 'larry-sanders-1', 'luke-babbitt-1', 'eric-bledsoe-1', 'avery-bradley-1', 'james-anderson-1', 'craig-brackins-1', 'elliot-williams-1', 'trevor-booker-1', 'damion-james-1', 'dominique-jones-1', 'quincy-pondexter-1', 'jordan-crawford-1', 'greivis-vasquez-1']\n","Chunk_78 = ['daniel-orton-1', 'lazar-hayward-1', 'dexter-pittman-1', 'hassan-whiteside-1', 'armon-johnson-1', 'terrico-white-1', 'darington-hobson-1', 'andy-rautins-1', 'landry-fields-1', 'lance-stephenson-1', 'jarvis-varnado-1', 'dasean-butler-1', 'devin-ebanks-1', 'jerome-jordan-1', 'gani-lawal-1', 'tiny-gallon-1', 'solomon-alabi-1', 'magnum-rolle-1', 'luke-harangody-1', 'willie-warren-1']\n","Chunk_79 = ['jeremy-evans-1', 'hamady-ndiaye-1', 'ryan-reid-1', 'derrick-caracter-1', 'stanley-robinson-1', 'dwayne-collins-1', 'kyrie-irving-1', 'derrick-williams-1', 'tristan-thompson-1', 'brandon-knight-1', 'kemba-walker-1', 'jimmer-fredette-1', 'klay-thompson-1', 'alec-burks-1', 'markieff-morris-1', 'marcus-morris-1', 'kawhi-leonard-1', 'nikola-vucevic-1', 'iman-shumpert-1', 'chris-singleton-1']\n","Chunk_80 = ['tobias-harris-1', 'nolan-smith-1', 'kenneth-faried-1', 'reggie-jackson-1', 'marshon-brooks-1', 'jordan-hamilton-1', 'jajuan-johnson-1', 'norris-cole-1', 'cory-joseph-1', 'jimmy-butler-1', 'justin-harper-1', 'kyle-singler-1', 'shelvin-mack-1', 'tyler-honeycutt-1', 'jordan-williams-1', 'trey-thompkins-1', 'chandler-parsons-1', 'jon-leuer-1', 'darius-morris-1', 'malcolm-lee-1']\n","Chunk_81 = ['charles-jenkins-1', 'josh-harrellson-1', 'andrew-goudelock-1', 'travis-leslie-1', 'keith-benson-1', 'josh-selby-1', 'lavoy-allen-1', 'jon-diebler-1', 'vernon-macklin-1', 'deandre-liggins-1', 'etwaun-moore-1', 'isaiah-thomas-1', 'anthony-davis-1', 'michael-kidd-gilchrist-1', 'bradley-beal-1', 'dion-waiters-1', 'thomas-robinson-1', 'damian-lillard-1', 'harrison-barnes-1', 'terrence-ross-1']\n","Chunk_82 = ['andre-drummond-1', 'austin-rivers-1', 'meyers-leonard-1', 'jeremy-lamb-1', 'kendall-marshall-1', 'john-henson-1', 'maurice-harkless-1', 'royce-white-1', 'tyler-zeller-1', 'terrence-jones-1', 'andrew-nicholson-1', 'jared-sullinger-1', 'fab-melo-1', 'john-jenkins-1', 'jared-cunningham-1', 'tony-wroten-1', 'miles-plumlee-1', 'arnett-moultrie-1', 'perry-jones-1', 'marquis-teague-1']\n","Chunk_83 = ['festus-ezeli-1', 'jeff-taylor-1', 'bernard-james-1', 'jae-crowder-1', 'draymond-green-1', 'orlando-johnson-1', 'quincy-acy-1', 'quincy-miller-1', 'khris-middleton-1', 'will-barton-1', 'tyshawn-taylor-1', 'doron-lamb-1', 'mike-scott-1', 'kim-english-1', 'justin-hamilton-1', 'darius-miller-1', 'kevin-murphy-1', 'kyle-oquinn-1', 'kris-joseph-1', 'darius-johnson-odom-1']\n","Chunk_84 = ['robbie-hummel-1', 'marcus-denmon-1', 'robert-sacre-1', 'anthony-bennett-1', 'victor-oladipo-1', 'otto-porter-jr-1', 'cody-zeller-1', 'alex-len-1', 'nerlens-noel-1', 'ben-mclemore-1', 'kentavious-caldwell-pope-1', 'trey-burke-1', 'cj-mccollum-1', 'michael-carter-williams-1', 'steven-adams-1', 'kelly-olynyk-1', 'shabazz-muhammad-1', 'shane-larkin-1', 'tony-snell-1', 'gorgui-dieng-1']\n","Chunk_85 = ['mason-plumlee-1', 'solomon-hill-1', 'tim-hardaway-jr-1', 'reggie-bullock-1', 'andre-roberson-1', 'archie-goodwin-1', 'allen-crabbe-1', 'carrick-felix-1', 'isaiah-canaan-1', 'glen-rice-jr-1', 'ray-mccallum-1', 'tony-mitchell-1', 'nate-wolters-1', 'jeff-withey-1', 'grant-jerrett-1', 'jamaal-franklin-1', 'pierre-jackson-1', 'ricky-ledo-1', 'mike-muscala-1', 'erick-green-1']\n","Chunk_86 = ['ryan-kelly-1', 'erik-murphy-1', 'james-ennis-iii-1', 'romero-osby-1', 'lorenzo-brown-1', 'colton-iverson-1', 'arsalan-kazemi-1', 'peyton-siva-1', 'alex-oriakhi-1', 'deshaun-thomas-1', 'andrew-wiggins-1', 'jabari-parker-1', 'joel-embiid-1', 'aaron-gordon-1', 'marcus-smart-1', 'julius-randle-1', 'nik-stauskas-1', 'noah-vonleh-1', 'elfrid-payton-1', 'doug-mcdermott-1']\n","Chunk_87 = ['zach-lavine-1', 'tj-warren-1', 'adreian-payne-1', 'james-young-1', 'tyler-ennis-1', 'gary-harris-1', 'mitch-mcgary-1', 'jordan-adams-1', 'rodney-hood-1', 'shabazz-napier-1', 'pj-hairston-1', 'cj-wilcox-1', 'josh-huestis-1', 'kyle-anderson-1', 'kj-mcdaniels-1', 'joe-harris-1', 'cleanthony-early-1', 'jarnell-stokes-1', 'johnny-obryant-1', 'deandre-daniels-1']\n","Chunk_88 = ['spencer-dinwiddie-1', 'jerami-grant-1', 'glenn-robinson-iii-1', 'nick-johnson-1', 'markel-brown-1', 'dwight-powell-1', 'jordan-clarkson-1', 'russ-smith-1', 'lamar-patterson-1', 'cameron-bairstow-1', 'alec-brown-1', 'semaj-christon-1', 'devyn-marble-1', 'jordan-mcrae-1', 'xavier-thames-1', 'cory-jefferson-1', 'karl-anthony-towns-1', 'dangelo-russell-1', 'jahlil-okafor-1', 'willie-cauley-stein-1']\n","Chunk_89 = ['stanley-johnson-1', 'frank-kaminsky-1', 'justise-winslow-1', 'myles-turner-1', 'trey-lyles-1', 'devin-booker-1', 'cameron-payne-1', 'kelly-oubre-jr-1', 'terry-rozier-1', 'rashad-vaughn-1', 'sam-dekker-1', 'jerian-grant-1', 'delon-wright-1', 'justin-anderson-1', 'bobby-portis-1', 'rondae-hollis-jefferson-1', 'tyus-jones-1', 'jarell-martin-1', 'larry-nance-jr-1', 'rj-hunter-1']\n","Chunk_90 = ['chris-mccullough-1', 'kevon-looney-1', 'montrezl-harrell-1', 'jordan-mickey-1', 'anthony-brown-1', 'rakeem-christmas-1', 'richaun-holmes-1', 'darrun-hilliard-1', 'josh-richardson-1', 'pat-connaughton-1', 'olivier-hanlan-1', 'joe-young-1', 'andrew-harrison-1', 'marcus-thornton-1', 'norman-powell-1', 'dakari-johnson-1', 'aaron-white-1', 'tyler-harvey-1', 'sirdominic-pointer-1', 'cady-lalanne-1']\n","Chunk_91 = ['branden-dawson-1', 'jp-tokoto-1', 'ben-simmons-1', 'brandon-ingram-1', 'jaylen-brown-1', 'kris-dunn-1', 'buddy-hield-1', 'jamal-murray-1', 'marquese-chriss-1', 'jakob-poeltl-1', 'domantas-sabonis-1', 'taurean-prince-1', 'denzel-valentine-1', 'wade-baldwin-1', 'henry-ellenson-1', 'malik-beasley-1', 'caris-levert-1', 'deandre-bembry-1', 'malachi-richardson-1', 'brice-johnson-1']\n","Chunk_92 = ['pascal-siakam-1', 'skal-labissiere-1', 'dejounte-murray-1', 'damian-jones-1', 'deyonta-davis-1', 'cheick-diallo-1', 'tyler-ulis-1', 'malcolm-brogdon-1', 'chinanu-onuaku-1', 'patrick-mccaw-1', 'diamond-stone-1', 'stephen-zimmerman-1', 'isaiah-whitehead-1', 'demetrius-jackson-1', 'aj-hammons-1', 'jake-layman-1', 'michael-gbinije-1', 'georges-niang-1', 'ben-bentil-1', 'joel-bolomboy-1']\n","Chunk_93 = ['kay-felder-1', 'marcus-paige-1', 'daniel-hamilton-1', 'abdel-nader-1', 'isaiah-cousins-1', 'tyrone-wallace-1', 'markelle-fultz-1', 'lonzo-ball-1', 'jayson-tatum-1', 'josh-jackson-1', 'deaaron-fox-1', 'jonathan-isaac-1', 'lauri-markkanen-1', 'dennis-smith-jr-1', 'zach-collins-1', 'malik-monk-1', 'luke-kennard-1', 'donovan-mitchell-1', 'bam-adebayo-1', 'justin-jackson-1']\n","Chunk_94 = ['justin-patton-1', 'dj-wilson-1', 'tj-leaf-1', 'john-collins-1', 'harry-giles-1', 'jarrett-allen-1', 'og-anunoby-1', 'tyler-lydon-1', 'caleb-swanigan-1', 'kyle-kuzma-1', 'tony-bradley-1', 'derrick-white-1', 'josh-hart-1', 'frank-jackson-1', 'davon-reed-1', 'wes-iwundu-1', 'frank-mason-iii-1', 'ivan-rabb-1', 'semi-ojeleye-1', 'jordan-bell-1']\n","Chunk_95 = ['jawun-evans-1', 'dwayne-bacon-1', 'tyler-dorsey-1', 'thomas-bryant-1', 'damyean-dotson-1', 'dillon-brooks-1', 'sterling-brown-1', 'ike-anigbogu-1', 'sindarius-thornwell-1', 'monte-morris-1', 'edmond-sumner-1', 'kadeem-allen-1', 'alec-peters-1', 'nigel-williams-goss-1', 'jabari-bird-1', 'jaron-blossomgame-1', 'deandre-ayton-1', 'marvin-bagley-iii-1', 'jaren-jackson-jr-1', 'trae-young-1']\n","Chunk_96 = ['mo-bamba-1', 'wendell-carter-jr-1', 'collin-sexton-1', 'kevin-knox-1', 'mikal-bridges-1', 'shai-gilgeous-alexander-1', 'miles-bridges-1', 'jerome-robinson-1', 'michael-porter-jr-1', 'troy-brown-jr-1', 'zhaire-smith-1', 'donte-divincenzo-1', 'lonnie-walker-iv-1', 'kevin-huerter-1', 'josh-okogie-1', 'grayson-allen-1', 'chandler-hutchison-1', 'aaron-holiday-1', 'moritz-wagner-1', 'landry-shamet-1']\n","Chunk_97 = ['robert-williams-1', 'jacob-evans-1', 'omari-spellman-1', 'jevon-carter-1', 'jalen-brunson-1', 'devonte-graham-1', 'melvin-frazier-1', 'gary-trent-jr-1', 'khyri-thomas-1', 'jarred-vanderbilt-1', 'bruce-brown-1', 'justin-jackson-1', 'hamidou-diallo-1', 'deanthony-melton-1', 'svi-mykhailiuk-1', 'keita-bates-diop-1', 'chimezie-metu-1', 'alize-johnson-1', 'tony-carr-1', 'vince-edwards-1']\n","Chunk_98 = ['devon-hall-1', 'shake-milton-1', 'ray-spalding-1', 'kevin-hervey-1', 'thomas-welsh-1', 'george-king-1', 'kostas-antetokounmpo-1', 'zion-williamson-1', 'ja-morant-1', 'rj-barrett-1', 'deandre-hunter-1', 'darius-garland-1', 'jarrett-culver-1', 'coby-white-1', 'jaxson-hayes-1', 'rui-hachimura-1', 'cam-reddish-1', 'cameron-johnson-1', 'pj-washington-1', 'tyler-herro-1']\n","Chunk_99 = ['romeo-langford-1', 'chuma-okeke-1', 'nickeil-alexander-walker-1', 'matisse-thybulle-1', 'brandon-clarke-1', 'grant-williams-1', 'ty-jerome-1', 'nassir-little-1', 'dylan-windler-1', 'mfiondu-kabengele-1', 'jordan-poole-1', 'keldon-johnson-1', 'kevin-porter-jr-1', 'nic-claxton-1', 'kz-okpala-1', 'carsen-edwards-1', 'bruno-fernando-1', 'cody-martin-1', 'daniel-gafford-1', 'justin-james-1']\n","Chunk_100 = ['eric-paschall-1', 'admiral-schofield-1', 'jaylen-nowell-1', 'bol-bol-1', 'isaiah-roby-1', 'talen-horton-tucker-1', 'ignas-brazdeikis-1', 'terance-mann-1', 'quinndary-weatherspoon-1', 'jarrell-brantley-1', 'tremont-waters-1', 'jalen-mcdaniels-1', 'justin-wright-foreman-1', 'marial-shayok-1', 'kyle-guy-1', 'jaylen-hands-1', 'jordan-bone-1', 'miye-oni-1', 'dewan-hernandez-1']\n"]}],"source":["for i in range(PlayerTotal//20+1):\n","    variable_name = f\"Chunk_{i}\"\n","    variable_value = chunks[i]\n","    globals()[variable_name] = variable_value\n","\n","# Accessing the variables\n","for i in range(PlayerTotal//20+1):\n","    print(f\"Chunk_{i} = {globals()[f'Chunk_{i}']}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":322,"status":"ok","timestamp":1717870640647,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"-lMMl-FJPaV0","outputId":"7fc1fd96-872e-4256-db83-26f3b4b6fa95"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["20"]},"metadata":{},"execution_count":52}],"source":["len(Chunk_0)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1717870641825,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"_hfjGESYQSOW","outputId":"73a2a298-e24e-436c-cba0-60fe14c61707"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["20"]},"metadata":{},"execution_count":53}],"source":["len(Chunk_55)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"elapsed":318,"status":"ok","timestamp":1717870645360,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"R1T-F-NAeDHo","outputId":"b6fe13ec-4f93-473e-8808-9d12f2e5f2f9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Joe Barry Carroll'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":54}],"source":["link=player_links[0]\n","(draftdf['Player'].loc[draftdf['Link'] == link]).item()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2hFjLv4Srl-N"},"outputs":[],"source":["\n","def scrape_college_statistics(links=[]): # creating funtion to scrape college stadistics for all of the player links\n","\n","\n","      player_stats=[]\n","      #iterating through player links\n","      for link in links:\n","        try:\n","\n","\n","              player_link = link\n","\n","              #replacing section in url with appropriate player_link\n","              url = f\"https://www.sports-reference.com/cbb/players/{player_link}.html\"\n","              time.sleep(0.5)\n","              html = urlopen(url)\n","              soup= BeautifulSoup(html, features = 'lxml')\n","              soup_table = soup.find(name = 'table', attrs = {'id' : 'players_per_game'})\n","\n","\n","\n","              # get rows from table\n","              for row in soup_table.find_all('tr')[-1:]:# Excluding the first 'tr', since that's the table's title head\n","                  player = {}\n","                  player['Player']= (draftdf['Player'].loc[draftdf['Link'] == link]).item()\n","                  player['College_Season'] = row.find('th', {'data-stat' : 'season'}).text\n","                  player['College'] = row.find('td', {'data-stat' : 'school_name'}).text\n","                  player['College_Games_Played'] = row.find('td', {'data-stat' : 'games'},).text\n","                  player['College_Games_Started'] = row.find('td', {'data-stat' : 'games_started'}).text\n","                  player['College_Field_Goals_Made_Per_Game'] = row.find('td', {'data-stat' : 'fg_per_g'}).text\n","                  player['College_Field_Goals_Attempted_Per_Game'] = row.find('td', {'data-stat' : 'fga_per_g'}).text\n","                  player['College_FG%'] = row.find('td', {'data-stat' : 'fg_pct'}).text\n","\n","                  try: # as some players do not have these stats, i assure i do not get the error message and print \"\"\n","\n","                      player['College_2PT_Field_Goals_Made_Per_Game'] = row.find('td', {'data-stat' : 'fg2_per_g'}).text\n","                      player['College_Minutes_Per_Game'] = row.find('td', {'data-stat' : 'mp_per_g'}).text\n","                      player['College_2PT_Field_Goals_Attempted_Per_Game'] = row.find('td', {'data-stat' : 'fg2a_per_g'}).text\n","                      player['College_2PT_FG%'] = row.find('td', {'data-stat' : 'fg2_pct'}).text\n","                      player['College_3PT_Field_Goals_Made_Per_Game'] = row.find('td', {'data-stat' : 'fg3_per_g'}).text\n","                      player['College_3PT_Field_Goals_Attempted_Per_Game'] = row.find('td', {'data-stat' : 'fg3a_per_g'}).text\n","                      player['College_3PT_FG%'] = row.find('td', {'data-stat' : 'fg3_pct'}).text\n","                  except:\n","                      player['College_2PT_Field_Goals_Made_Per_Game'] = \"\"\n","                      player['College_2PT_Field_Goals_Attempted_Per_Game'] = \"\"\n","                      player['College_Minutes_Per_Game'] = \"\"\n","                      player['College_2PT_FG%'] = \"\"\n","                      player['College_3PT_Field_Goals_Made_Per_Game'] = \"\"\n","                      player['College_3PT_Field_Goals_Attempted_Per_Game'] = \"\"\n","                      player['College_3PT_FG%'] = \"\"\n","\n","                  player['College_Free_Throws_Made_Per_Game'] = row.find('td', {'data-stat' : 'ft_per_g'}).text\n","                  player['College_Free_Throws_Attempted_Per_Game'] = row.find('td', {'data-stat' : 'fta_per_g'}).text\n","                  player['College_FT%'] = row.find('td', {'data-stat' : 'ft_pct'}).text\n","                  player['Total_Rebounds_pergame'] = row.find('td', {'data-stat' : 'trb_per_g'}).text\n","                  player['Assists_pergame'] = row.find('td', {'data-stat' : 'ast_per_g'}).text\n","                  player['Steals_pergame'] = row.find('td', {'data-stat' : 'stl_per_g'}).text\n","                  player['Blocks_pergame'] = row.find('td', {'data-stat' : 'blk_per_g'}).text\n","                  player['Turnovers_pergame'] = row.find('td', {'data-stat' : 'tov_per_g'}).text\n","                  player['Fouls_pergame'] = row.find('td', {'data-stat' : 'pf_per_g'}).text\n","                  player['Points_pergame'] = row.find('td', {'data-stat' : 'pts_per_g'}).text\n","                  player['Team_strength_of_schedule'] = row.find('td', {'data-stat' : 'sos'}).text\n","                  player['Link']=link\n","                  player_stats.append(player)\n","        except:\n","          print('For player: ',link, 'sys.exc_info()[0]')\n","\n","  #Adding an exception to view any errors when collecting data for each player\n","\n","  #Collecting data into dataframe then placing into a csv file\n","\n","      df=pd.DataFrame(player_stats)\n","      return df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["9bd1349354c94a99b426afa2f543441e","5b8b37dfcb2e41bdae1874876ddded38","e3564142ca5142d183d63326d553e893","b660304f3b7845f0ab7805f059c20973","a724512eb66f40f8809b96b2d7a13e93","e71ac938cf4d4bba914d52f63091b57b","7dc612c1511c46a2b1d0f016595b324a","3627e78a67aa48cd99b8f756fb9e655e","48907d84b3474bcb92fe78f217bb43ba","a6db2db294394f83b630a5b6acfa28f0","ed4df8d750b34223b837617ac3f18914"]},"id":"Y9Kznb_yjN3m","executionInfo":{"status":"ok","timestamp":1717878983383,"user_tz":180,"elapsed":1532684,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"c1452660-8b01-4dcd-c9a2-f86f5556f764"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9bd1349354c94a99b426afa2f543441e","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/101 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"output_type":"stream","name":"stdout","text":["For player:  rick-mahorn-1 sys.exc_info()[0]\n","For player:  ron-perry-1 sys.exc_info()[0]\n","For player:  dave-britton-1 sys.exc_info()[0]\n","For player:  kevin-loder-1 sys.exc_info()[0]\n","For player:  charles-bradley-1 sys.exc_info()[0]\n","For player:  ken-green-1 sys.exc_info()[0]\n","For player:  dave-magley-1 sys.exc_info()[0]\n","For player:  jeff-taylor-1 sys.exc_info()[0]\n","For player:  mike-gibson-1 sys.exc_info()[0]\n","For player:  mike-largey-1 sys.exc_info()[0]\n","For player:  michael-britt-1 sys.exc_info()[0]\n","For player:  ken-lyons-1 sys.exc_info()[0]\n","For player:  dereck-whittenburg-1 sys.exc_info()[0]\n","For player:  jerome-kersey-1 sys.exc_info()[0]\n","For player:  patrick-ewing-1 sys.exc_info()[0]\n","For player:  charles-oakley-1 sys.exc_info()[0]\n","For player:  alfredrick-hughes-1 sys.exc_info()[0]\n","For player:  terry-porter-1 sys.exc_info()[0]\n","For player:  ken-johnson-1 sys.exc_info()[0]\n","For player:  manute-bol-1 sys.exc_info()[0]\n","For player:  bobby-lee-hurt-1 sys.exc_info()[0]\n","For player:  charles-bradley-1 sys.exc_info()[0]\n","For player:  anthony-jones-1 sys.exc_info()[0]\n","For player:  dennis-rodman-1 sys.exc_info()[0]\n","For player:  joe-ward-1 sys.exc_info()[0]\n","For player:  cedric-henderson-1 sys.exc_info()[0]\n","For player:  scottie-pippen-1 sys.exc_info()[0]\n","For player:  ron-moore-1 sys.exc_info()[0]\n","For player:  terry-coner-1 sys.exc_info()[0]\n","For player:  jamie-waller-1 sys.exc_info()[0]\n","For player:  hansi-gnad-1 sys.exc_info()[0]\n","For player:  charles-smith-1 sys.exc_info()[0]\n","For player:  derrick-hamilton-1 sys.exc_info()[0]\n","For player:  rodney-johns-1 sys.exc_info()[0]\n","For player:  nate-johnston-1 sys.exc_info()[0]\n","For player:  michael-smith-1 sys.exc_info()[0]\n","For player:  dee-brown-1 sys.exc_info()[0]\n","For player:  lamont-strothers-1 sys.exc_info()[0]\n","For player:  anthony-jones-1 sys.exc_info()[0]\n","For player:  michael-smith-1 sys.exc_info()[0]\n","For player:  kris-bruton-1 sys.exc_info()[0]\n","For player:  martin-lewis-1 sys.exc_info()[0]\n","For player:  priest-lauderdale-1 sys.exc_info()[0]\n","For player:  shawn-harvey-1 sys.exc_info()[0]\n","For player:  joseph-blair-1 sys.exc_info()[0]\n","For player:  charles-smith-1 sys.exc_info()[0]\n","For player:  stephen-jackson-1 sys.exc_info()[0]\n","For player:  cedric-henderson-1 sys.exc_info()[0]\n","For player:  cj-bruton-1 sys.exc_info()[0]\n","For player:  corey-brewer-1 sys.exc_info()[0]\n","For player:  aleksandar-radojevic-1 sys.exc_info()[0]\n","For player:  metta-world-peace-1 sys.exc_info()[0]\n","For player:  devean-george-1 sys.exc_info()[0]\n","For player:  antwain-smith-1 sys.exc_info()[0]\n","For player:  deeandre-hulett-1 sys.exc_info()[0]\n","For player:  kedrick-brown-1 sys.exc_info()[0]\n","For player:  ken-johnson-1 sys.exc_info()[0]\n","For player:  qyntel-woods-1 sys.exc_info()[0]\n","For player:  ronald-murray-1 sys.exc_info()[0]\n","For player:  jerome-beasley-1 sys.exc_info()[0]\n","For player:  donta-smith-1 sys.exc_info()[0]\n","For player:  marcus-williams-1 sys.exc_info()[0]\n","For player:  dee-brown-1 sys.exc_info()[0]\n","For player:  corey-brewer-1 sys.exc_info()[0]\n","For player:  marcus-williams-1 sys.exc_info()[0]\n","For player:  luc-mbah-a-moute-1 sys.exc_info()[0]\n","For player:  patrick-ewing-1 sys.exc_info()[0]\n","For player:  henry-walker-1 sys.exc_info()[0]\n","For player:  byron-mullens-1 sys.exc_info()[0]\n","For player:  jeff-ayres-1 sys.exc_info()[0]\n","For player:  marcus-thornton-1 sys.exc_info()[0]\n","For player:  patty-mills-1 sys.exc_info()[0]\n","For player:  thomas-robinson-1 sys.exc_info()[0]\n","For player:  jeff-taylor-1 sys.exc_info()[0]\n","For player:  bernard-james-1 sys.exc_info()[0]\n","For player:  otto-porter-jr-1 sys.exc_info()[0]\n","For player:  ricky-ledo-1 sys.exc_info()[0]\n","For player:  james-ennis-iii-1 sys.exc_info()[0]\n","For player:  kyle-anderson-1 sys.exc_info()[0]\n","For player:  glenn-robinson-iii-1 sys.exc_info()[0]\n","For player:  devyn-marble-1 sys.exc_info()[0]\n","For player:  kelly-oubre-jr-1 sys.exc_info()[0]\n","For player:  larry-nance-jr-1 sys.exc_info()[0]\n","For player:  marcus-thornton-1 sys.exc_info()[0]\n","For player:  stephen-zimmerman-1 sys.exc_info()[0]\n","For player:  kay-felder-1 sys.exc_info()[0]\n","For player:  dennis-smith-jr-1 sys.exc_info()[0]\n","For player:  bam-adebayo-1 sys.exc_info()[0]\n","For player:  justin-jackson-1 sys.exc_info()[0]\n","For player:  wes-iwundu-1 sys.exc_info()[0]\n","For player:  frank-mason-iii-1 sys.exc_info()[0]\n","For player:  marvin-bagley-iii-1 sys.exc_info()[0]\n","For player:  jaren-jackson-jr-1 sys.exc_info()[0]\n","For player:  mo-bamba-1 sys.exc_info()[0]\n","For player:  wendell-carter-jr-1 sys.exc_info()[0]\n","For player:  michael-porter-jr-1 sys.exc_info()[0]\n","For player:  troy-brown-jr-1 sys.exc_info()[0]\n","For player:  lonnie-walker-iv-1 sys.exc_info()[0]\n","For player:  gary-trent-jr-1 sys.exc_info()[0]\n","For player:  justin-jackson-1 sys.exc_info()[0]\n","For player:  svi-mykhailiuk-1 sys.exc_info()[0]\n","For player:  shake-milton-1 sys.exc_info()[0]\n","For player:  ray-spalding-1 sys.exc_info()[0]\n","For player:  ja-morant-1 sys.exc_info()[0]\n","For player:  kevin-porter-jr-1 sys.exc_info()[0]\n","For player:  nic-claxton-1 sys.exc_info()[0]\n","For player:  kz-okpala-1 sys.exc_info()[0]\n","For player:  dewan-hernandez-1 sys.exc_info()[0]\n"]}],"source":["collegedf=pd.DataFrame() # this will take long, 100 chunks iterating with a time sleep of 65 seconds to no get error message\n","for i in tqdm(range(PlayerTotal//20+1)):\n","\n","\n","    variable_name = f\"collegedf{i}\"\n","\n","    globals()[variable_name]=scrape_college_statistics(links=chunks[i])\n","    collegedf=pd.concat([collegedf,globals()[variable_name]], ignore_index=True)\n","    time.sleep(65)\n","\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":738},"collapsed":true,"executionInfo":{"elapsed":371,"status":"ok","timestamp":1717879070488,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"3YYexDpyCfI7","outputId":"ec5dcb65-81ee-4e17-ee1e-ce2d12fad3ce"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Player College_Season       College College_Games_Played  \\\n","0     Joe Barry Carroll         Career        Purdue                  123   \n","1      Darrell Griffith         Career    Louisville                  126   \n","2          Kevin McHale         Career     Minnesota                  112   \n","3         Kelvin Ransey         Career    Ohio State                  112   \n","4             James Ray         Career  Jacksonville                  110   \n","...                 ...            ...           ...                  ...   \n","1906      Marial Shayok                   Iowa State                   34   \n","1907           Kyle Guy         Career      Virginia                  106   \n","1908       Jaylen Hands         Career          UCLA                   64   \n","1909        Jordan Bone         Career     Tennessee                   95   \n","1910           Miye Oni         Career          Yale                   87   \n","\n","     College_Games_Started College_Field_Goals_Made_Per_Game  \\\n","0                       95                               7.1   \n","1                                                        7.8   \n","2                                                        6.4   \n","3                      109                               7.4   \n","4                       58                               6.0   \n","...                    ...                               ...   \n","1906                    34                               6.7   \n","1907                    78                               4.4   \n","1908                    48                               4.1   \n","1909                    87                               3.6   \n","1910                    82                               5.2   \n","\n","     College_Field_Goals_Attempted_Per_Game College_FG%  \\\n","0                                      13.0        .546   \n","1                                      14.9        .523   \n","2                                      11.5        .553   \n","3                                      15.1        .490   \n","4                                      10.9        .546   \n","...                                     ...         ...   \n","1906                                   13.6        .496   \n","1907                                   10.1        .433   \n","1908                                    9.9        .409   \n","1909                                    8.4        .424   \n","1910                                   12.1        .428   \n","\n","     College_2PT_Field_Goals_Made_Per_Game  \\\n","0                                            \n","1                                            \n","2                                            \n","3                                            \n","4                                            \n","...                                    ...   \n","1906                                   4.6   \n","1907                                   2.0   \n","1908                                   2.4   \n","1909                                   2.6   \n","1910                                   3.2   \n","\n","     College_2PT_Field_Goals_Attempted_Per_Game  ... College_FT%  \\\n","0                                                ...        .651   \n","1                                                ...        .697   \n","2                                                ...        .773   \n","3                                                ...        .780   \n","4                                                ...        .679   \n","...                                         ...  ...         ...   \n","1906                                        8.2  ...        .878   \n","1907                                        4.5  ...        .806   \n","1908                                        5.4  ...        .762   \n","1909                                        5.7  ...        .817   \n","1910                                        6.5  ...        .777   \n","\n","     Total_Rebounds_pergame Assists_pergame Steals_pergame Blocks_pergame  \\\n","0                       9.3             0.7            0.8            2.8   \n","1                       4.6             3.0                                 \n","2                       8.5             1.5            0.4            2.1   \n","3                       3.7             4.6            1.5            0.2   \n","4                       7.2                                                 \n","...                     ...             ...            ...            ...   \n","1906                    4.9             2.0            0.9            0.2   \n","1907                    3.0             1.6            0.7            0.0   \n","1908                    3.8             4.4            1.2            0.2   \n","1909                    2.4             4.3            0.7            0.1   \n","1910                    6.2             3.3            0.9            1.0   \n","\n","     Turnovers_pergame Fouls_pergame Points_pergame Team_strength_of_schedule  \\\n","0                                2.9           17.7                      8.73   \n","1                  3.5           2.7           18.5                      4.53   \n","2                                              15.2                      8.21   \n","3                  2.8           2.9           17.3                      7.93   \n","4                                              14.5                     -0.74   \n","...                ...           ...            ...                       ...   \n","1906               2.7           2.1           18.7                             \n","1907               1.1           1.1           12.5                     10.04   \n","1908               2.5           1.4           12.1                      6.82   \n","1909               1.6           1.2            9.7                     10.15   \n","1910               2.6           2.8           15.0                     -2.08   \n","\n","                     Link  \n","0     joe-barry-carroll-1  \n","1      darrell-griffith-1  \n","2          kevin-mchale-1  \n","3         kelvin-ransey-1  \n","4             james-ray-1  \n","...                   ...  \n","1906      marial-shayok-1  \n","1907           kyle-guy-1  \n","1908       jaylen-hands-1  \n","1909        jordan-bone-1  \n","1910           miye-oni-1  \n","\n","[1911 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-23f91da4-8b65-4939-9992-c444933e7b0c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>College_Season</th>\n","      <th>College</th>\n","      <th>College_Games_Played</th>\n","      <th>College_Games_Started</th>\n","      <th>College_Field_Goals_Made_Per_Game</th>\n","      <th>College_Field_Goals_Attempted_Per_Game</th>\n","      <th>College_FG%</th>\n","      <th>College_2PT_Field_Goals_Made_Per_Game</th>\n","      <th>College_2PT_Field_Goals_Attempted_Per_Game</th>\n","      <th>...</th>\n","      <th>College_FT%</th>\n","      <th>Total_Rebounds_pergame</th>\n","      <th>Assists_pergame</th>\n","      <th>Steals_pergame</th>\n","      <th>Blocks_pergame</th>\n","      <th>Turnovers_pergame</th>\n","      <th>Fouls_pergame</th>\n","      <th>Points_pergame</th>\n","      <th>Team_strength_of_schedule</th>\n","      <th>Link</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe Barry Carroll</td>\n","      <td>Career</td>\n","      <td>Purdue</td>\n","      <td>123</td>\n","      <td>95</td>\n","      <td>7.1</td>\n","      <td>13.0</td>\n","      <td>.546</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.651</td>\n","      <td>9.3</td>\n","      <td>0.7</td>\n","      <td>0.8</td>\n","      <td>2.8</td>\n","      <td></td>\n","      <td>2.9</td>\n","      <td>17.7</td>\n","      <td>8.73</td>\n","      <td>joe-barry-carroll-1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Darrell Griffith</td>\n","      <td>Career</td>\n","      <td>Louisville</td>\n","      <td>126</td>\n","      <td></td>\n","      <td>7.8</td>\n","      <td>14.9</td>\n","      <td>.523</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.697</td>\n","      <td>4.6</td>\n","      <td>3.0</td>\n","      <td></td>\n","      <td></td>\n","      <td>3.5</td>\n","      <td>2.7</td>\n","      <td>18.5</td>\n","      <td>4.53</td>\n","      <td>darrell-griffith-1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kevin McHale</td>\n","      <td>Career</td>\n","      <td>Minnesota</td>\n","      <td>112</td>\n","      <td></td>\n","      <td>6.4</td>\n","      <td>11.5</td>\n","      <td>.553</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.773</td>\n","      <td>8.5</td>\n","      <td>1.5</td>\n","      <td>0.4</td>\n","      <td>2.1</td>\n","      <td></td>\n","      <td></td>\n","      <td>15.2</td>\n","      <td>8.21</td>\n","      <td>kevin-mchale-1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kelvin Ransey</td>\n","      <td>Career</td>\n","      <td>Ohio State</td>\n","      <td>112</td>\n","      <td>109</td>\n","      <td>7.4</td>\n","      <td>15.1</td>\n","      <td>.490</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.780</td>\n","      <td>3.7</td>\n","      <td>4.6</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>2.8</td>\n","      <td>2.9</td>\n","      <td>17.3</td>\n","      <td>7.93</td>\n","      <td>kelvin-ransey-1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>James Ray</td>\n","      <td>Career</td>\n","      <td>Jacksonville</td>\n","      <td>110</td>\n","      <td>58</td>\n","      <td>6.0</td>\n","      <td>10.9</td>\n","      <td>.546</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.679</td>\n","      <td>7.2</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>14.5</td>\n","      <td>-0.74</td>\n","      <td>james-ray-1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1906</th>\n","      <td>Marial Shayok</td>\n","      <td></td>\n","      <td>Iowa State</td>\n","      <td>34</td>\n","      <td>34</td>\n","      <td>6.7</td>\n","      <td>13.6</td>\n","      <td>.496</td>\n","      <td>4.6</td>\n","      <td>8.2</td>\n","      <td>...</td>\n","      <td>.878</td>\n","      <td>4.9</td>\n","      <td>2.0</td>\n","      <td>0.9</td>\n","      <td>0.2</td>\n","      <td>2.7</td>\n","      <td>2.1</td>\n","      <td>18.7</td>\n","      <td></td>\n","      <td>marial-shayok-1</td>\n","    </tr>\n","    <tr>\n","      <th>1907</th>\n","      <td>Kyle Guy</td>\n","      <td>Career</td>\n","      <td>Virginia</td>\n","      <td>106</td>\n","      <td>78</td>\n","      <td>4.4</td>\n","      <td>10.1</td>\n","      <td>.433</td>\n","      <td>2.0</td>\n","      <td>4.5</td>\n","      <td>...</td>\n","      <td>.806</td>\n","      <td>3.0</td>\n","      <td>1.6</td>\n","      <td>0.7</td>\n","      <td>0.0</td>\n","      <td>1.1</td>\n","      <td>1.1</td>\n","      <td>12.5</td>\n","      <td>10.04</td>\n","      <td>kyle-guy-1</td>\n","    </tr>\n","    <tr>\n","      <th>1908</th>\n","      <td>Jaylen Hands</td>\n","      <td>Career</td>\n","      <td>UCLA</td>\n","      <td>64</td>\n","      <td>48</td>\n","      <td>4.1</td>\n","      <td>9.9</td>\n","      <td>.409</td>\n","      <td>2.4</td>\n","      <td>5.4</td>\n","      <td>...</td>\n","      <td>.762</td>\n","      <td>3.8</td>\n","      <td>4.4</td>\n","      <td>1.2</td>\n","      <td>0.2</td>\n","      <td>2.5</td>\n","      <td>1.4</td>\n","      <td>12.1</td>\n","      <td>6.82</td>\n","      <td>jaylen-hands-1</td>\n","    </tr>\n","    <tr>\n","      <th>1909</th>\n","      <td>Jordan Bone</td>\n","      <td>Career</td>\n","      <td>Tennessee</td>\n","      <td>95</td>\n","      <td>87</td>\n","      <td>3.6</td>\n","      <td>8.4</td>\n","      <td>.424</td>\n","      <td>2.6</td>\n","      <td>5.7</td>\n","      <td>...</td>\n","      <td>.817</td>\n","      <td>2.4</td>\n","      <td>4.3</td>\n","      <td>0.7</td>\n","      <td>0.1</td>\n","      <td>1.6</td>\n","      <td>1.2</td>\n","      <td>9.7</td>\n","      <td>10.15</td>\n","      <td>jordan-bone-1</td>\n","    </tr>\n","    <tr>\n","      <th>1910</th>\n","      <td>Miye Oni</td>\n","      <td>Career</td>\n","      <td>Yale</td>\n","      <td>87</td>\n","      <td>82</td>\n","      <td>5.2</td>\n","      <td>12.1</td>\n","      <td>.428</td>\n","      <td>3.2</td>\n","      <td>6.5</td>\n","      <td>...</td>\n","      <td>.777</td>\n","      <td>6.2</td>\n","      <td>3.3</td>\n","      <td>0.9</td>\n","      <td>1.0</td>\n","      <td>2.6</td>\n","      <td>2.8</td>\n","      <td>15.0</td>\n","      <td>-2.08</td>\n","      <td>miye-oni-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1911 rows Ã— 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23f91da4-8b65-4939-9992-c444933e7b0c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-23f91da4-8b65-4939-9992-c444933e7b0c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-23f91da4-8b65-4939-9992-c444933e7b0c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e73e25e8-8f56-408f-9997-1d711cae4cea\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e73e25e8-8f56-408f-9997-1d711cae4cea')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e73e25e8-8f56-408f-9997-1d711cae4cea button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_46b6cef4-b6de-4a2d-b17f-ecd85df2a06c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('collegedf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_46b6cef4-b6de-4a2d-b17f-ecd85df2a06c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('collegedf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"collegedf"}},"metadata":{},"execution_count":59}],"source":["collegedf # checking df results"]},{"cell_type":"markdown","metadata":{"id":"bmdTRazOpg1c"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VZASAY5yAvVL"},"outputs":[],"source":["from google.colab import drive\n","# importing library to save in my projects colab drive"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2535,"status":"ok","timestamp":1717879101942,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"1A2980XCzGrG","outputId":"c7bebd28-92ed-437a-9d10-5b75d1fd2510"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":221},"executionInfo":{"elapsed":322,"status":"ok","timestamp":1717879104971,"user":{"displayName":"federico losio","userId":"10173004015167461011"},"user_tz":180},"id":"FxfB2NOv4yU9","outputId":"99ec7b17-1191-47aa-8f62-0439437e0107"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.reset_index of                  Player College_Season       College College_Games_Played  \\\n","0     Joe Barry Carroll         Career        Purdue                  123   \n","1      Darrell Griffith         Career    Louisville                  126   \n","2          Kevin McHale         Career     Minnesota                  112   \n","3         Kelvin Ransey         Career    Ohio State                  112   \n","4             James Ray         Career  Jacksonville                  110   \n","...                 ...            ...           ...                  ...   \n","1906      Marial Shayok                   Iowa State                   34   \n","1907           Kyle Guy         Career      Virginia                  106   \n","1908       Jaylen Hands         Career          UCLA                   64   \n","1909        Jordan Bone         Career     Tennessee                   95   \n","1910           Miye Oni         Career          Yale                   87   \n","\n","     College_Games_Started College_Field_Goals_Made_Per_Game  \\\n","0                       95                               7.1   \n","1                                                        7.8   \n","2                                                        6.4   \n","3                      109                               7.4   \n","4                       58                               6.0   \n","...                    ...                               ...   \n","1906                    34                               6.7   \n","1907                    78                               4.4   \n","1908                    48                               4.1   \n","1909                    87                               3.6   \n","1910                    82                               5.2   \n","\n","     College_Field_Goals_Attempted_Per_Game College_FG%  \\\n","0                                      13.0        .546   \n","1                                      14.9        .523   \n","2                                      11.5        .553   \n","3                                      15.1        .490   \n","4                                      10.9        .546   \n","...                                     ...         ...   \n","1906                                   13.6        .496   \n","1907                                   10.1        .433   \n","1908                                    9.9        .409   \n","1909                                    8.4        .424   \n","1910                                   12.1        .428   \n","\n","     College_2PT_Field_Goals_Made_Per_Game  \\\n","0                                            \n","1                                            \n","2                                            \n","3                                            \n","4                                            \n","...                                    ...   \n","1906                                   4.6   \n","1907                                   2.0   \n","1908                                   2.4   \n","1909                                   2.6   \n","1910                                   3.2   \n","\n","     College_2PT_Field_Goals_Attempted_Per_Game  ... College_FT%  \\\n","0                                                ...        .651   \n","1                                                ...        .697   \n","2                                                ...        .773   \n","3                                                ...        .780   \n","4                                                ...        .679   \n","...                                         ...  ...         ...   \n","1906                                        8.2  ...        .878   \n","1907                                        4.5  ...        .806   \n","1908                                        5.4  ...        .762   \n","1909                                        5.7  ...        .817   \n","1910                                        6.5  ...        .777   \n","\n","     Total_Rebounds_pergame Assists_pergame Steals_pergame Blocks_pergame  \\\n","0                       9.3             0.7            0.8            2.8   \n","1                       4.6             3.0                                 \n","2                       8.5             1.5            0.4            2.1   \n","3                       3.7             4.6            1.5            0.2   \n","4                       7.2                                                 \n","...                     ...             ...            ...            ...   \n","1906                    4.9             2.0            0.9            0.2   \n","1907                    3.0             1.6            0.7            0.0   \n","1908                    3.8             4.4            1.2            0.2   \n","1909                    2.4             4.3            0.7            0.1   \n","1910                    6.2             3.3            0.9            1.0   \n","\n","     Turnovers_pergame Fouls_pergame Points_pergame Team_strength_of_schedule  \\\n","0                                2.9           17.7                      8.73   \n","1                  3.5           2.7           18.5                      4.53   \n","2                                              15.2                      8.21   \n","3                  2.8           2.9           17.3                      7.93   \n","4                                              14.5                     -0.74   \n","...                ...           ...            ...                       ...   \n","1906               2.7           2.1           18.7                             \n","1907               1.1           1.1           12.5                     10.04   \n","1908               2.5           1.4           12.1                      6.82   \n","1909               1.6           1.2            9.7                     10.15   \n","1910               2.6           2.8           15.0                     -2.08   \n","\n","                     Link  \n","0     joe-barry-carroll-1  \n","1      darrell-griffith-1  \n","2          kevin-mchale-1  \n","3         kelvin-ransey-1  \n","4             james-ray-1  \n","...                   ...  \n","1906      marial-shayok-1  \n","1907           kyle-guy-1  \n","1908       jaylen-hands-1  \n","1909        jordan-bone-1  \n","1910           miye-oni-1  \n","\n","[1911 rows x 27 columns]>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.frame.DataFrame.reset_index</b><br/>def reset_index(level: IndexLabel=None, *, drop: bool=False, inplace: bool=False, col_level: Hashable=0, col_fill: Hashable=&#x27;&#x27;, allow_duplicates: bool | lib.NoDefault=lib.no_default, names: Hashable | Sequence[Hashable]=None) -&gt; DataFrame | None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py</a>Reset the index, or a level of it.\n","\n","Reset the index of the DataFrame, and use the default one instead.\n","If the DataFrame has a MultiIndex, this method can remove one or more\n","levels.\n","\n","Parameters\n","----------\n","level : int, str, tuple, or list, default None\n","    Only remove the given levels from the index. Removes all levels by\n","    default.\n","drop : bool, default False\n","    Do not try to insert index into dataframe columns. This resets\n","    the index to the default integer index.\n","inplace : bool, default False\n","    Whether to modify the DataFrame rather than creating a new one.\n","col_level : int or str, default 0\n","    If the columns have multiple levels, determines which level the\n","    labels are inserted into. By default it is inserted into the first\n","    level.\n","col_fill : object, default &#x27;&#x27;\n","    If the columns have multiple levels, determines how the other\n","    levels are named. If None then the index name is repeated.\n","allow_duplicates : bool, optional, default lib.no_default\n","    Allow duplicate column labels to be created.\n","\n","    .. versionadded:: 1.5.0\n","\n","names : int, str or 1-dimensional list, default None\n","    Using the given string, rename the DataFrame column which contains the\n","    index data. If the DataFrame has a MultiIndex, this has to be a list or\n","    tuple with length equal to the number of levels.\n","\n","    .. versionadded:: 1.5.0\n","\n","Returns\n","-------\n","DataFrame or None\n","    DataFrame with the new index or None if ``inplace=True``.\n","\n","See Also\n","--------\n","DataFrame.set_index : Opposite of reset_index.\n","DataFrame.reindex : Change to new indices or expand indices.\n","DataFrame.reindex_like : Change to same indices as other DataFrame.\n","\n","Examples\n","--------\n","&gt;&gt;&gt; df = pd.DataFrame([(&#x27;bird&#x27;, 389.0),\n","...                    (&#x27;bird&#x27;, 24.0),\n","...                    (&#x27;mammal&#x27;, 80.5),\n","...                    (&#x27;mammal&#x27;, np.nan)],\n","...                   index=[&#x27;falcon&#x27;, &#x27;parrot&#x27;, &#x27;lion&#x27;, &#x27;monkey&#x27;],\n","...                   columns=(&#x27;class&#x27;, &#x27;max_speed&#x27;))\n","&gt;&gt;&gt; df\n","         class  max_speed\n","falcon    bird      389.0\n","parrot    bird       24.0\n","lion    mammal       80.5\n","monkey  mammal        NaN\n","\n","When we reset the index, the old index is added as a column, and a\n","new sequential index is used:\n","\n","&gt;&gt;&gt; df.reset_index()\n","    index   class  max_speed\n","0  falcon    bird      389.0\n","1  parrot    bird       24.0\n","2    lion  mammal       80.5\n","3  monkey  mammal        NaN\n","\n","We can use the `drop` parameter to avoid the old index being added as\n","a column:\n","\n","&gt;&gt;&gt; df.reset_index(drop=True)\n","    class  max_speed\n","0    bird      389.0\n","1    bird       24.0\n","2  mammal       80.5\n","3  mammal        NaN\n","\n","You can also use `reset_index` with `MultiIndex`.\n","\n","&gt;&gt;&gt; index = pd.MultiIndex.from_tuples([(&#x27;bird&#x27;, &#x27;falcon&#x27;),\n","...                                    (&#x27;bird&#x27;, &#x27;parrot&#x27;),\n","...                                    (&#x27;mammal&#x27;, &#x27;lion&#x27;),\n","...                                    (&#x27;mammal&#x27;, &#x27;monkey&#x27;)],\n","...                                   names=[&#x27;class&#x27;, &#x27;name&#x27;])\n","&gt;&gt;&gt; columns = pd.MultiIndex.from_tuples([(&#x27;speed&#x27;, &#x27;max&#x27;),\n","...                                      (&#x27;species&#x27;, &#x27;type&#x27;)])\n","&gt;&gt;&gt; df = pd.DataFrame([(389.0, &#x27;fly&#x27;),\n","...                    (24.0, &#x27;fly&#x27;),\n","...                    (80.5, &#x27;run&#x27;),\n","...                    (np.nan, &#x27;jump&#x27;)],\n","...                   index=index,\n","...                   columns=columns)\n","&gt;&gt;&gt; df\n","               speed species\n","                 max    type\n","class  name\n","bird   falcon  389.0     fly\n","       parrot   24.0     fly\n","mammal lion     80.5     run\n","       monkey    NaN    jump\n","\n","Using the `names` parameter, choose a name for the index column:\n","\n","&gt;&gt;&gt; df.reset_index(names=[&#x27;classes&#x27;, &#x27;names&#x27;])\n","  classes   names  speed species\n","                     max    type\n","0    bird  falcon  389.0     fly\n","1    bird  parrot   24.0     fly\n","2  mammal    lion   80.5     run\n","3  mammal  monkey    NaN    jump\n","\n","If the index has multiple levels, we can reset a subset of them:\n","\n","&gt;&gt;&gt; df.reset_index(level=&#x27;class&#x27;)\n","         class  speed species\n","                  max    type\n","name\n","falcon    bird  389.0     fly\n","parrot    bird   24.0     fly\n","lion    mammal   80.5     run\n","monkey  mammal    NaN    jump\n","\n","If we are not dropping the index, by default, it is placed in the top\n","level. We can place it in another level:\n","\n","&gt;&gt;&gt; df.reset_index(level=&#x27;class&#x27;, col_level=1)\n","                speed species\n","         class    max    type\n","name\n","falcon    bird  389.0     fly\n","parrot    bird   24.0     fly\n","lion    mammal   80.5     run\n","monkey  mammal    NaN    jump\n","\n","When the index is inserted under another level, we can specify under\n","which one with the parameter `col_fill`:\n","\n","&gt;&gt;&gt; df.reset_index(level=&#x27;class&#x27;, col_level=1, col_fill=&#x27;species&#x27;)\n","              species  speed species\n","                class    max    type\n","name\n","falcon           bird  389.0     fly\n","parrot           bird   24.0     fly\n","lion           mammal   80.5     run\n","monkey         mammal    NaN    jump\n","\n","If we specify a nonexistent level for `col_fill`, it is created:\n","\n","&gt;&gt;&gt; df.reset_index(level=&#x27;class&#x27;, col_level=1, col_fill=&#x27;genus&#x27;)\n","                genus  speed species\n","                class    max    type\n","name\n","falcon           bird  389.0     fly\n","parrot           bird   24.0     fly\n","lion           mammal   80.5     run\n","monkey         mammal    NaN    jump</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 5976);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":62}],"source":["collegedf.reset_index"]},{"cell_type":"code","source":["collegedf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":738},"id":"udMEzO9sNMzq","executionInfo":{"status":"ok","timestamp":1717879108123,"user_tz":180,"elapsed":380,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"6645adc6-59ae-4dab-ce5d-cdd9c45e9c61"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Player College_Season       College College_Games_Played  \\\n","0     Joe Barry Carroll         Career        Purdue                  123   \n","1      Darrell Griffith         Career    Louisville                  126   \n","2          Kevin McHale         Career     Minnesota                  112   \n","3         Kelvin Ransey         Career    Ohio State                  112   \n","4             James Ray         Career  Jacksonville                  110   \n","...                 ...            ...           ...                  ...   \n","1906      Marial Shayok                   Iowa State                   34   \n","1907           Kyle Guy         Career      Virginia                  106   \n","1908       Jaylen Hands         Career          UCLA                   64   \n","1909        Jordan Bone         Career     Tennessee                   95   \n","1910           Miye Oni         Career          Yale                   87   \n","\n","     College_Games_Started College_Field_Goals_Made_Per_Game  \\\n","0                       95                               7.1   \n","1                                                        7.8   \n","2                                                        6.4   \n","3                      109                               7.4   \n","4                       58                               6.0   \n","...                    ...                               ...   \n","1906                    34                               6.7   \n","1907                    78                               4.4   \n","1908                    48                               4.1   \n","1909                    87                               3.6   \n","1910                    82                               5.2   \n","\n","     College_Field_Goals_Attempted_Per_Game College_FG%  \\\n","0                                      13.0        .546   \n","1                                      14.9        .523   \n","2                                      11.5        .553   \n","3                                      15.1        .490   \n","4                                      10.9        .546   \n","...                                     ...         ...   \n","1906                                   13.6        .496   \n","1907                                   10.1        .433   \n","1908                                    9.9        .409   \n","1909                                    8.4        .424   \n","1910                                   12.1        .428   \n","\n","     College_2PT_Field_Goals_Made_Per_Game  \\\n","0                                            \n","1                                            \n","2                                            \n","3                                            \n","4                                            \n","...                                    ...   \n","1906                                   4.6   \n","1907                                   2.0   \n","1908                                   2.4   \n","1909                                   2.6   \n","1910                                   3.2   \n","\n","     College_2PT_Field_Goals_Attempted_Per_Game  ... College_FT%  \\\n","0                                                ...        .651   \n","1                                                ...        .697   \n","2                                                ...        .773   \n","3                                                ...        .780   \n","4                                                ...        .679   \n","...                                         ...  ...         ...   \n","1906                                        8.2  ...        .878   \n","1907                                        4.5  ...        .806   \n","1908                                        5.4  ...        .762   \n","1909                                        5.7  ...        .817   \n","1910                                        6.5  ...        .777   \n","\n","     Total_Rebounds_pergame Assists_pergame Steals_pergame Blocks_pergame  \\\n","0                       9.3             0.7            0.8            2.8   \n","1                       4.6             3.0                                 \n","2                       8.5             1.5            0.4            2.1   \n","3                       3.7             4.6            1.5            0.2   \n","4                       7.2                                                 \n","...                     ...             ...            ...            ...   \n","1906                    4.9             2.0            0.9            0.2   \n","1907                    3.0             1.6            0.7            0.0   \n","1908                    3.8             4.4            1.2            0.2   \n","1909                    2.4             4.3            0.7            0.1   \n","1910                    6.2             3.3            0.9            1.0   \n","\n","     Turnovers_pergame Fouls_pergame Points_pergame Team_strength_of_schedule  \\\n","0                                2.9           17.7                      8.73   \n","1                  3.5           2.7           18.5                      4.53   \n","2                                              15.2                      8.21   \n","3                  2.8           2.9           17.3                      7.93   \n","4                                              14.5                     -0.74   \n","...                ...           ...            ...                       ...   \n","1906               2.7           2.1           18.7                             \n","1907               1.1           1.1           12.5                     10.04   \n","1908               2.5           1.4           12.1                      6.82   \n","1909               1.6           1.2            9.7                     10.15   \n","1910               2.6           2.8           15.0                     -2.08   \n","\n","                     Link  \n","0     joe-barry-carroll-1  \n","1      darrell-griffith-1  \n","2          kevin-mchale-1  \n","3         kelvin-ransey-1  \n","4             james-ray-1  \n","...                   ...  \n","1906      marial-shayok-1  \n","1907           kyle-guy-1  \n","1908       jaylen-hands-1  \n","1909        jordan-bone-1  \n","1910           miye-oni-1  \n","\n","[1911 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-b8bb0a8d-204b-4d71-b32d-09de66069ae1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>College_Season</th>\n","      <th>College</th>\n","      <th>College_Games_Played</th>\n","      <th>College_Games_Started</th>\n","      <th>College_Field_Goals_Made_Per_Game</th>\n","      <th>College_Field_Goals_Attempted_Per_Game</th>\n","      <th>College_FG%</th>\n","      <th>College_2PT_Field_Goals_Made_Per_Game</th>\n","      <th>College_2PT_Field_Goals_Attempted_Per_Game</th>\n","      <th>...</th>\n","      <th>College_FT%</th>\n","      <th>Total_Rebounds_pergame</th>\n","      <th>Assists_pergame</th>\n","      <th>Steals_pergame</th>\n","      <th>Blocks_pergame</th>\n","      <th>Turnovers_pergame</th>\n","      <th>Fouls_pergame</th>\n","      <th>Points_pergame</th>\n","      <th>Team_strength_of_schedule</th>\n","      <th>Link</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe Barry Carroll</td>\n","      <td>Career</td>\n","      <td>Purdue</td>\n","      <td>123</td>\n","      <td>95</td>\n","      <td>7.1</td>\n","      <td>13.0</td>\n","      <td>.546</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.651</td>\n","      <td>9.3</td>\n","      <td>0.7</td>\n","      <td>0.8</td>\n","      <td>2.8</td>\n","      <td></td>\n","      <td>2.9</td>\n","      <td>17.7</td>\n","      <td>8.73</td>\n","      <td>joe-barry-carroll-1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Darrell Griffith</td>\n","      <td>Career</td>\n","      <td>Louisville</td>\n","      <td>126</td>\n","      <td></td>\n","      <td>7.8</td>\n","      <td>14.9</td>\n","      <td>.523</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.697</td>\n","      <td>4.6</td>\n","      <td>3.0</td>\n","      <td></td>\n","      <td></td>\n","      <td>3.5</td>\n","      <td>2.7</td>\n","      <td>18.5</td>\n","      <td>4.53</td>\n","      <td>darrell-griffith-1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kevin McHale</td>\n","      <td>Career</td>\n","      <td>Minnesota</td>\n","      <td>112</td>\n","      <td></td>\n","      <td>6.4</td>\n","      <td>11.5</td>\n","      <td>.553</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.773</td>\n","      <td>8.5</td>\n","      <td>1.5</td>\n","      <td>0.4</td>\n","      <td>2.1</td>\n","      <td></td>\n","      <td></td>\n","      <td>15.2</td>\n","      <td>8.21</td>\n","      <td>kevin-mchale-1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kelvin Ransey</td>\n","      <td>Career</td>\n","      <td>Ohio State</td>\n","      <td>112</td>\n","      <td>109</td>\n","      <td>7.4</td>\n","      <td>15.1</td>\n","      <td>.490</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.780</td>\n","      <td>3.7</td>\n","      <td>4.6</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>2.8</td>\n","      <td>2.9</td>\n","      <td>17.3</td>\n","      <td>7.93</td>\n","      <td>kelvin-ransey-1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>James Ray</td>\n","      <td>Career</td>\n","      <td>Jacksonville</td>\n","      <td>110</td>\n","      <td>58</td>\n","      <td>6.0</td>\n","      <td>10.9</td>\n","      <td>.546</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>.679</td>\n","      <td>7.2</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>14.5</td>\n","      <td>-0.74</td>\n","      <td>james-ray-1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1906</th>\n","      <td>Marial Shayok</td>\n","      <td></td>\n","      <td>Iowa State</td>\n","      <td>34</td>\n","      <td>34</td>\n","      <td>6.7</td>\n","      <td>13.6</td>\n","      <td>.496</td>\n","      <td>4.6</td>\n","      <td>8.2</td>\n","      <td>...</td>\n","      <td>.878</td>\n","      <td>4.9</td>\n","      <td>2.0</td>\n","      <td>0.9</td>\n","      <td>0.2</td>\n","      <td>2.7</td>\n","      <td>2.1</td>\n","      <td>18.7</td>\n","      <td></td>\n","      <td>marial-shayok-1</td>\n","    </tr>\n","    <tr>\n","      <th>1907</th>\n","      <td>Kyle Guy</td>\n","      <td>Career</td>\n","      <td>Virginia</td>\n","      <td>106</td>\n","      <td>78</td>\n","      <td>4.4</td>\n","      <td>10.1</td>\n","      <td>.433</td>\n","      <td>2.0</td>\n","      <td>4.5</td>\n","      <td>...</td>\n","      <td>.806</td>\n","      <td>3.0</td>\n","      <td>1.6</td>\n","      <td>0.7</td>\n","      <td>0.0</td>\n","      <td>1.1</td>\n","      <td>1.1</td>\n","      <td>12.5</td>\n","      <td>10.04</td>\n","      <td>kyle-guy-1</td>\n","    </tr>\n","    <tr>\n","      <th>1908</th>\n","      <td>Jaylen Hands</td>\n","      <td>Career</td>\n","      <td>UCLA</td>\n","      <td>64</td>\n","      <td>48</td>\n","      <td>4.1</td>\n","      <td>9.9</td>\n","      <td>.409</td>\n","      <td>2.4</td>\n","      <td>5.4</td>\n","      <td>...</td>\n","      <td>.762</td>\n","      <td>3.8</td>\n","      <td>4.4</td>\n","      <td>1.2</td>\n","      <td>0.2</td>\n","      <td>2.5</td>\n","      <td>1.4</td>\n","      <td>12.1</td>\n","      <td>6.82</td>\n","      <td>jaylen-hands-1</td>\n","    </tr>\n","    <tr>\n","      <th>1909</th>\n","      <td>Jordan Bone</td>\n","      <td>Career</td>\n","      <td>Tennessee</td>\n","      <td>95</td>\n","      <td>87</td>\n","      <td>3.6</td>\n","      <td>8.4</td>\n","      <td>.424</td>\n","      <td>2.6</td>\n","      <td>5.7</td>\n","      <td>...</td>\n","      <td>.817</td>\n","      <td>2.4</td>\n","      <td>4.3</td>\n","      <td>0.7</td>\n","      <td>0.1</td>\n","      <td>1.6</td>\n","      <td>1.2</td>\n","      <td>9.7</td>\n","      <td>10.15</td>\n","      <td>jordan-bone-1</td>\n","    </tr>\n","    <tr>\n","      <th>1910</th>\n","      <td>Miye Oni</td>\n","      <td>Career</td>\n","      <td>Yale</td>\n","      <td>87</td>\n","      <td>82</td>\n","      <td>5.2</td>\n","      <td>12.1</td>\n","      <td>.428</td>\n","      <td>3.2</td>\n","      <td>6.5</td>\n","      <td>...</td>\n","      <td>.777</td>\n","      <td>6.2</td>\n","      <td>3.3</td>\n","      <td>0.9</td>\n","      <td>1.0</td>\n","      <td>2.6</td>\n","      <td>2.8</td>\n","      <td>15.0</td>\n","      <td>-2.08</td>\n","      <td>miye-oni-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1911 rows Ã— 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8bb0a8d-204b-4d71-b32d-09de66069ae1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b8bb0a8d-204b-4d71-b32d-09de66069ae1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b8bb0a8d-204b-4d71-b32d-09de66069ae1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d46c04b4-3747-42ba-a2ca-1ffcbdd82954\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d46c04b4-3747-42ba-a2ca-1ffcbdd82954')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d46c04b4-3747-42ba-a2ca-1ffcbdd82954 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c8c414e7-8681-4101-a0c4-09c50bdb5b09\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('collegedf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c8c414e7-8681-4101-a0c4-09c50bdb5b09 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('collegedf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"collegedf"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hqU6YALV0xeL"},"outputs":[],"source":["collegedf.to_csv('/content/drive/My Drive/Proyecto Final Federico Losio/collegedf.csv')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6_VUxr6T4qk3"},"outputs":[],"source":["draftdf.reset_index(drop=True, inplace=True)"]},{"cell_type":"code","source":["draftdf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"xAG-VeaSNRig","executionInfo":{"status":"ok","timestamp":1717879125077,"user_tz":180,"elapsed":10,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"942ed5d2-60a4-4504-f817-d4eb0cec35c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Pk   Tm             Player                  College Yrs      G       MP  \\\n","0      1  GSW  Joe Barry Carroll                   Purdue  10  705.0  22838.0   \n","1      2  UTA   Darrell Griffith               Louisville  10  765.0  21403.0   \n","2      3  BOS       Kevin McHale                Minnesota  13  971.0  30118.0   \n","3      4  CHI      Kelvin Ransey               Ohio State   6  474.0  11586.0   \n","4      5  DEN          James Ray  Jacksonville University   3  103.0    843.0   \n","...   ..  ...                ...                      ...  ..    ...      ...   \n","2014  55  NYK           Kyle Guy                 Virginia   3   53.0    431.0   \n","2015  56  LAC       Jaylen Hands                     UCLA        NaN      NaN   \n","2016  57  NOP        Jordan Bone                Tennessee   2   24.0    249.0   \n","2017  58  GSW           Miye Oni                     Yale   3   80.0    672.0   \n","2018  59  TOR    Dewan Hernandez               Miami (FL)   1    6.0     28.0   \n","\n","          PTS   TRB   AST  ...    MP   PTS  TRB  AST     WS  WS/48   BPM  \\\n","0     22838.0  5404  1264  ...  32.4  32.4  7.7  1.8   35.6   .075  -0.6   \n","1     21403.0  2519  1627  ...  28.0  28.0  3.3  2.1   22.0   .049  -1.4   \n","2     30118.0  7122  1670  ...  31.0  31.0  7.3  1.7  113.0   .180   2.5   \n","3     11586.0   901  2480  ...  24.4  24.4  1.9  5.2   17.9   .074  -0.9   \n","4       843.0   228    76  ...   8.2   8.2  2.2  0.7   -0.3  -.017  -4.5   \n","...       ...   ...   ...  ...   ...   ...  ...  ...    ...    ...   ...   \n","2014    431.0    53    50  ...   8.1   8.1  1.0  0.9    0.1   .006  -4.9   \n","2015      NaN              ...   NaN   NaN                                 \n","2016    249.0    28    26  ...  10.4  10.4  1.2  1.1    0.1   .010  -5.9   \n","2017    672.0   108    37  ...   8.4   8.4  1.4  0.5    1.0   .070  -2.5   \n","2018     28.0    14     3  ...   4.7   4.7  2.3  0.5    0.0   .043  -9.6   \n","\n","      VORP Draft_Year                 Link  \n","0      8.2       1980  joe-barry-carroll-1  \n","1      3.4       1980   darrell-griffith-1  \n","2     34.3       1980       kevin-mchale-1  \n","3      3.3       1980      kelvin-ransey-1  \n","4     -0.6       1980          james-ray-1  \n","...    ...        ...                  ...  \n","2014  -0.3       2019           kyle-guy-1  \n","2015             2019       jaylen-hands-1  \n","2016  -0.2       2019        jordan-bone-1  \n","2017  -0.1       2019           miye-oni-1  \n","2018  -0.1       2019    dewan-hernandez-1  \n","\n","[2019 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-738017e2-700f-4a8b-9c5a-98418de4508e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pk</th>\n","      <th>Tm</th>\n","      <th>Player</th>\n","      <th>College</th>\n","      <th>Yrs</th>\n","      <th>G</th>\n","      <th>MP</th>\n","      <th>PTS</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>...</th>\n","      <th>MP</th>\n","      <th>PTS</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>WS</th>\n","      <th>WS/48</th>\n","      <th>BPM</th>\n","      <th>VORP</th>\n","      <th>Draft_Year</th>\n","      <th>Link</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>GSW</td>\n","      <td>Joe Barry Carroll</td>\n","      <td>Purdue</td>\n","      <td>10</td>\n","      <td>705.0</td>\n","      <td>22838.0</td>\n","      <td>22838.0</td>\n","      <td>5404</td>\n","      <td>1264</td>\n","      <td>...</td>\n","      <td>32.4</td>\n","      <td>32.4</td>\n","      <td>7.7</td>\n","      <td>1.8</td>\n","      <td>35.6</td>\n","      <td>.075</td>\n","      <td>-0.6</td>\n","      <td>8.2</td>\n","      <td>1980</td>\n","      <td>joe-barry-carroll-1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>UTA</td>\n","      <td>Darrell Griffith</td>\n","      <td>Louisville</td>\n","      <td>10</td>\n","      <td>765.0</td>\n","      <td>21403.0</td>\n","      <td>21403.0</td>\n","      <td>2519</td>\n","      <td>1627</td>\n","      <td>...</td>\n","      <td>28.0</td>\n","      <td>28.0</td>\n","      <td>3.3</td>\n","      <td>2.1</td>\n","      <td>22.0</td>\n","      <td>.049</td>\n","      <td>-1.4</td>\n","      <td>3.4</td>\n","      <td>1980</td>\n","      <td>darrell-griffith-1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>BOS</td>\n","      <td>Kevin McHale</td>\n","      <td>Minnesota</td>\n","      <td>13</td>\n","      <td>971.0</td>\n","      <td>30118.0</td>\n","      <td>30118.0</td>\n","      <td>7122</td>\n","      <td>1670</td>\n","      <td>...</td>\n","      <td>31.0</td>\n","      <td>31.0</td>\n","      <td>7.3</td>\n","      <td>1.7</td>\n","      <td>113.0</td>\n","      <td>.180</td>\n","      <td>2.5</td>\n","      <td>34.3</td>\n","      <td>1980</td>\n","      <td>kevin-mchale-1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>CHI</td>\n","      <td>Kelvin Ransey</td>\n","      <td>Ohio State</td>\n","      <td>6</td>\n","      <td>474.0</td>\n","      <td>11586.0</td>\n","      <td>11586.0</td>\n","      <td>901</td>\n","      <td>2480</td>\n","      <td>...</td>\n","      <td>24.4</td>\n","      <td>24.4</td>\n","      <td>1.9</td>\n","      <td>5.2</td>\n","      <td>17.9</td>\n","      <td>.074</td>\n","      <td>-0.9</td>\n","      <td>3.3</td>\n","      <td>1980</td>\n","      <td>kelvin-ransey-1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>DEN</td>\n","      <td>James Ray</td>\n","      <td>Jacksonville University</td>\n","      <td>3</td>\n","      <td>103.0</td>\n","      <td>843.0</td>\n","      <td>843.0</td>\n","      <td>228</td>\n","      <td>76</td>\n","      <td>...</td>\n","      <td>8.2</td>\n","      <td>8.2</td>\n","      <td>2.2</td>\n","      <td>0.7</td>\n","      <td>-0.3</td>\n","      <td>-.017</td>\n","      <td>-4.5</td>\n","      <td>-0.6</td>\n","      <td>1980</td>\n","      <td>james-ray-1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2014</th>\n","      <td>55</td>\n","      <td>NYK</td>\n","      <td>Kyle Guy</td>\n","      <td>Virginia</td>\n","      <td>3</td>\n","      <td>53.0</td>\n","      <td>431.0</td>\n","      <td>431.0</td>\n","      <td>53</td>\n","      <td>50</td>\n","      <td>...</td>\n","      <td>8.1</td>\n","      <td>8.1</td>\n","      <td>1.0</td>\n","      <td>0.9</td>\n","      <td>0.1</td>\n","      <td>.006</td>\n","      <td>-4.9</td>\n","      <td>-0.3</td>\n","      <td>2019</td>\n","      <td>kyle-guy-1</td>\n","    </tr>\n","    <tr>\n","      <th>2015</th>\n","      <td>56</td>\n","      <td>LAC</td>\n","      <td>Jaylen Hands</td>\n","      <td>UCLA</td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td></td>\n","      <td>2019</td>\n","      <td>jaylen-hands-1</td>\n","    </tr>\n","    <tr>\n","      <th>2016</th>\n","      <td>57</td>\n","      <td>NOP</td>\n","      <td>Jordan Bone</td>\n","      <td>Tennessee</td>\n","      <td>2</td>\n","      <td>24.0</td>\n","      <td>249.0</td>\n","      <td>249.0</td>\n","      <td>28</td>\n","      <td>26</td>\n","      <td>...</td>\n","      <td>10.4</td>\n","      <td>10.4</td>\n","      <td>1.2</td>\n","      <td>1.1</td>\n","      <td>0.1</td>\n","      <td>.010</td>\n","      <td>-5.9</td>\n","      <td>-0.2</td>\n","      <td>2019</td>\n","      <td>jordan-bone-1</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>58</td>\n","      <td>GSW</td>\n","      <td>Miye Oni</td>\n","      <td>Yale</td>\n","      <td>3</td>\n","      <td>80.0</td>\n","      <td>672.0</td>\n","      <td>672.0</td>\n","      <td>108</td>\n","      <td>37</td>\n","      <td>...</td>\n","      <td>8.4</td>\n","      <td>8.4</td>\n","      <td>1.4</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>.070</td>\n","      <td>-2.5</td>\n","      <td>-0.1</td>\n","      <td>2019</td>\n","      <td>miye-oni-1</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>59</td>\n","      <td>TOR</td>\n","      <td>Dewan Hernandez</td>\n","      <td>Miami (FL)</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>28.0</td>\n","      <td>28.0</td>\n","      <td>14</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>4.7</td>\n","      <td>4.7</td>\n","      <td>2.3</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>.043</td>\n","      <td>-9.6</td>\n","      <td>-0.1</td>\n","      <td>2019</td>\n","      <td>dewan-hernandez-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2019 rows Ã— 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-738017e2-700f-4a8b-9c5a-98418de4508e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-738017e2-700f-4a8b-9c5a-98418de4508e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-738017e2-700f-4a8b-9c5a-98418de4508e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b23f6550-7aee-4041-a83a-7e4a1154a0da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b23f6550-7aee-4041-a83a-7e4a1154a0da')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b23f6550-7aee-4041-a83a-7e4a1154a0da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5e364634-1969-4018-84a3-c6bf422af82c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('draftdf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5e364634-1969-4018-84a3-c6bf422af82c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('draftdf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"draftdf"}},"metadata":{},"execution_count":66}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5H3F9Qx-1bVs"},"outputs":[],"source":["draftdf.to_csv('/content/drive/My Drive/Proyecto Final Federico Losio/draftdf.csv')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cxS0bV5pDMjx","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1717879133413,"user_tz":180,"elapsed":338,"user":{"displayName":"federico losio","userId":"10173004015167461011"}},"outputId":"315dbc44-6cda-4246-e0d0-6a0666cdbeda"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Player year_min year_max  pos height weight  \\\n","0                  Player      NaN      NaN  NaN    NaN    NaN   \n","1          Alaa Abdelnaby     1991     1995  F-C   6-10    240   \n","2         Zaid Abdul-Aziz     1969     1978  C-F    6-9    235   \n","3     Kareem Abdul-Jabbar     1970     1989    C    7-2    225   \n","4      Mahmoud Abdul-Rauf     1991     2001    G    6-1    162   \n","...                   ...      ...      ...  ...    ...    ...   \n","5230           Ante Å½iÅ¾iÄ‡     2018     2020  F-C   6-10    266   \n","5231             Jim Zoet     1983     1983    C    7-1    240   \n","5232            Bill Zopf     1971     1971    G    6-1    170   \n","5233          Ivica Zubac     2017     2024    C    7-0    240   \n","5234           Matt Zunic     1949     1949  G-F    6-3    195   \n","\n","             birth_date               colleges                   Link  \n","0                   NaN                    NaN               player-1  \n","1         June 24, 1968                   Duke       alaa-abdelnaby-1  \n","2         April 7, 1946             Iowa State      zaid-abdul-aziz-1  \n","3        April 16, 1947                   UCLA  kareem-abdul-jabbar-1  \n","4         March 9, 1969                    LSU   mahmoud-abdul-rauf-1  \n","...                 ...                    ...                    ...  \n","5230    January 4, 1997                                  ante-zizic-1  \n","5231  December 20, 1953  Kent State University             jim-zoet-1  \n","5232       June 7, 1948               Duquesne            bill-zopf-1  \n","5233     March 18, 1997                                 ivica-zubac-1  \n","5234  December 19, 1919      George Washington           matt-zunic-1  \n","\n","[5235 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-6299237d-f6fa-4e79-b738-4464602d741b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>year_min</th>\n","      <th>year_max</th>\n","      <th>pos</th>\n","      <th>height</th>\n","      <th>weight</th>\n","      <th>birth_date</th>\n","      <th>colleges</th>\n","      <th>Link</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Player</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>player-1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Alaa Abdelnaby</td>\n","      <td>1991</td>\n","      <td>1995</td>\n","      <td>F-C</td>\n","      <td>6-10</td>\n","      <td>240</td>\n","      <td>June 24, 1968</td>\n","      <td>Duke</td>\n","      <td>alaa-abdelnaby-1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Zaid Abdul-Aziz</td>\n","      <td>1969</td>\n","      <td>1978</td>\n","      <td>C-F</td>\n","      <td>6-9</td>\n","      <td>235</td>\n","      <td>April 7, 1946</td>\n","      <td>Iowa State</td>\n","      <td>zaid-abdul-aziz-1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kareem Abdul-Jabbar</td>\n","      <td>1970</td>\n","      <td>1989</td>\n","      <td>C</td>\n","      <td>7-2</td>\n","      <td>225</td>\n","      <td>April 16, 1947</td>\n","      <td>UCLA</td>\n","      <td>kareem-abdul-jabbar-1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mahmoud Abdul-Rauf</td>\n","      <td>1991</td>\n","      <td>2001</td>\n","      <td>G</td>\n","      <td>6-1</td>\n","      <td>162</td>\n","      <td>March 9, 1969</td>\n","      <td>LSU</td>\n","      <td>mahmoud-abdul-rauf-1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5230</th>\n","      <td>Ante Å½iÅ¾iÄ‡</td>\n","      <td>2018</td>\n","      <td>2020</td>\n","      <td>F-C</td>\n","      <td>6-10</td>\n","      <td>266</td>\n","      <td>January 4, 1997</td>\n","      <td></td>\n","      <td>ante-zizic-1</td>\n","    </tr>\n","    <tr>\n","      <th>5231</th>\n","      <td>Jim Zoet</td>\n","      <td>1983</td>\n","      <td>1983</td>\n","      <td>C</td>\n","      <td>7-1</td>\n","      <td>240</td>\n","      <td>December 20, 1953</td>\n","      <td>Kent State University</td>\n","      <td>jim-zoet-1</td>\n","    </tr>\n","    <tr>\n","      <th>5232</th>\n","      <td>Bill Zopf</td>\n","      <td>1971</td>\n","      <td>1971</td>\n","      <td>G</td>\n","      <td>6-1</td>\n","      <td>170</td>\n","      <td>June 7, 1948</td>\n","      <td>Duquesne</td>\n","      <td>bill-zopf-1</td>\n","    </tr>\n","    <tr>\n","      <th>5233</th>\n","      <td>Ivica Zubac</td>\n","      <td>2017</td>\n","      <td>2024</td>\n","      <td>C</td>\n","      <td>7-0</td>\n","      <td>240</td>\n","      <td>March 18, 1997</td>\n","      <td></td>\n","      <td>ivica-zubac-1</td>\n","    </tr>\n","    <tr>\n","      <th>5234</th>\n","      <td>Matt Zunic</td>\n","      <td>1949</td>\n","      <td>1949</td>\n","      <td>G-F</td>\n","      <td>6-3</td>\n","      <td>195</td>\n","      <td>December 19, 1919</td>\n","      <td>George Washington</td>\n","      <td>matt-zunic-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5235 rows Ã— 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6299237d-f6fa-4e79-b738-4464602d741b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6299237d-f6fa-4e79-b738-4464602d741b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6299237d-f6fa-4e79-b738-4464602d741b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-91aea5fc-b5ad-491c-a4a7-442d8a7ddf66\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-91aea5fc-b5ad-491c-a4a7-442d8a7ddf66')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-91aea5fc-b5ad-491c-a4a7-442d8a7ddf66 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_63fd45e9-6240-45dc-aa4c-ff2f62052ce7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Player_info')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_63fd45e9-6240-45dc-aa4c-ff2f62052ce7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Player_info');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Player_info","summary":"{\n  \"name\": \"Player_info\",\n  \"rows\": 5235,\n  \"fields\": [\n    {\n      \"column\": \"Player\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5163,\n        \"samples\": [\n          \"Sidney Green\",\n          \"Joey Graham\",\n          \"Uro\\u0161 Slokar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year_min\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1947-01-01 00:00:00\",\n        \"max\": \"2024-01-01 00:00:00\",\n        \"num_unique_values\": 78,\n        \"samples\": [\n          \"1985\",\n          \"1991\",\n          \"2016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year_max\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1947-01-01 00:00:00\",\n        \"max\": \"2024-01-01 00:00:00\",\n        \"num_unique_values\": 78,\n        \"samples\": [\n          \"2022\",\n          \"1995\",\n          \"1985\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pos\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"F-C\",\n          \"C-F\",\n          \"G-F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"height\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"6-0\",\n          \"5-7\",\n          \"6-5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 148,\n        \"samples\": [\n          \"277\",\n          \"137\",\n          \"308\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birth_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1902-01-30 00:00:00\",\n        \"max\": \"2004-12-17 00:00:00\",\n        \"num_unique_values\": 4772,\n        \"samples\": [\n          \"December 1, 1991\",\n          \"March 29, 1996\",\n          \"July 11, 1943\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"colleges\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 933,\n        \"samples\": [\n          \"Lon Morris College, Tulsa\",\n          \"USC\",\n          \"Saint Mary's, Wyoming\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Link\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5163,\n        \"samples\": [\n          \"sidney-green-1\",\n          \"joey-graham-1\",\n          \"uros-slokar-1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":68}],"source":["Player_info"]},{"cell_type":"code","source":["Player_info.reset_index(drop=True, inplace=True)"],"metadata":{"id":"K-Uz7XRzj_9l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Player_info.to_csv('/content/drive/My Drive/Proyecto Final Federico Losio/playerdf.csv')"],"metadata":{"id":"7K9Y9jaokFVI"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1WqGMdoMyo_3mn-zN9Ol1fI51ScLSBwDA","timestamp":1717467976645},{"file_id":"1M0fy_YEtsvzj2b1aIpaVxQJwsQ7zUEwP","timestamp":1717424862436},{"file_id":"1Fcmk53mJ8wiW4YneQC4ePWL6qhkNCFb_","timestamp":1717165118044},{"file_id":"1mDfL8Kmwy7qR367jN2y5KPDwWDz9R5jU","timestamp":1716988273374},{"file_id":"1qJl0VnVvQJnyFycFy8nyLr-vhrSqR94I","timestamp":1716986771944},{"file_id":"18vBQrLV4q5es2YOwMxlmbDTdyeT94iOz","timestamp":1716918981921},{"file_id":"1wJ3dmEpFcQmTLpH4EB9eLMaMaDYIC13t","timestamp":1716918183896},{"file_id":"1--g1hs-O1XRYEKoG_LE1qtH3Zg_trJer","timestamp":1716917282210},{"file_id":"1eZPylvcxfs2PHMfmZ2t3wfwjxlFFrPta","timestamp":1716908492853},{"file_id":"1b_0LY_7iC1b9K3GJsCLHdz61KwC6v8sU","timestamp":1716855341931},{"file_id":"1deJyWWSNXiOsw5zLPKLeeh2kH3KRf4hQ","timestamp":1716854438921},{"file_id":"1uCZtn2syBWJEt3FqmgV691fNFYc301DR","timestamp":1716844764883},{"file_id":"1Qj03mb1HoUcVaC2DhDQ0_NB33K4M59Y2","timestamp":1716842715121},{"file_id":"1-buUYlAB-tC1HSt1xLhIqx2h2R8Az7kZ","timestamp":1716842412270},{"file_id":"1ZCeo1QnsjCNYOkD4XtPUyJJRbxmL3sGn","timestamp":1716838839981},{"file_id":"1lqJi9Qv8TGwB4K_W2Pdm1k3zexSJtioz","timestamp":1716823857334}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"9bd1349354c94a99b426afa2f543441e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_5b8b37dfcb2e41bdae1874876ddded38","IPY_MODEL_e3564142ca5142d183d63326d553e893","IPY_MODEL_b660304f3b7845f0ab7805f059c20973"],"layout":"IPY_MODEL_a724512eb66f40f8809b96b2d7a13e93"}},"5b8b37dfcb2e41bdae1874876ddded38":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e71ac938cf4d4bba914d52f63091b57b","placeholder":"â€‹","style":"IPY_MODEL_7dc612c1511c46a2b1d0f016595b324a","value":"100%"}},"e3564142ca5142d183d63326d553e893":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3627e78a67aa48cd99b8f756fb9e655e","max":101,"min":0,"orientation":"horizontal","style":"IPY_MODEL_48907d84b3474bcb92fe78f217bb43ba","value":101}},"b660304f3b7845f0ab7805f059c20973":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a6db2db294394f83b630a5b6acfa28f0","placeholder":"â€‹","style":"IPY_MODEL_ed4df8d750b34223b837617ac3f18914","value":"â€‡101/101â€‡[2:17:09&lt;00:00,â€‡81.25s/it]"}},"a724512eb66f40f8809b96b2d7a13e93":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e71ac938cf4d4bba914d52f63091b57b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7dc612c1511c46a2b1d0f016595b324a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3627e78a67aa48cd99b8f756fb9e655e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"48907d84b3474bcb92fe78f217bb43ba":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a6db2db294394f83b630a5b6acfa28f0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ed4df8d750b34223b837617ac3f18914":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}